{"version":3,"sources":["../d8d624181420bac13641.worker.js","../webpack/bootstrap d8d624181420bac13641","../node_modules/babel-runtime/regenerator/index.js","../node_modules/buffer/index.js","../node_modules/blakejs/util.js","helpers/app.worker.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","helpers/NanoGenerator.js","../node_modules/nanocurrency/dist/nanocurrency.esm.js","../node_modules/process/browser.js","../node_modules/webpack/buildin/global.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/tweetnacl/nacl.js","../node_modules/blakejs/index.js","../node_modules/blakejs/blake2b.js","../node_modules/blakejs/blake2s.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","foo","subarray","e","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","normalizeInput","input","ERROR_MSG_INPUT","map","uint32ToHex","substring","debugPrint","label","msg","toUpperCase","console","log","testSpeed","hashFn","N","M","startMs","Date","getTime","genMs","hashHex","hashMs","ms","round","__webpack_exports__","_asyncToGenerator","fn","gen","Promise","resolve","reject","step","key","info","error","done","then","err","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_1__NanoGenerator__","_this","findWallet","_ref","mark","_callee","prefix","generated_prefix","now","wallet","nanogenerator","wrap","_context","prev","next","NanoGenerator","initialize","attempts","generateWallet","public_address","nextUpdate","aps","lastAttempts","elapsed","postMessage","action","average_aps","finished","abrupt","stop","_x","addEventListener","_ref2","_callee2","event","_context2","params","sent","_x2","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","result","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","GenStateSuspendedYield","iterator","return","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","Op","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","async","iter","keys","reverse","pop","skipTempReset","charAt","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_classCallCheck","instance","Constructor","uint8_hex","uint8","hex","aux","__WEBPACK_IMPORTED_MODULE_1_nanocurrency__","__WEBPACK_IMPORTED_MODULE_2_tweetnacl_nacl__","__WEBPACK_IMPORTED_MODULE_2_tweetnacl_nacl___default","nanocurrency","seed","nacl","randomBytes","secret_key","public_key","process","commonjsRequire","init","A","I","native_tmp","_work","cwrap","_validateWork","_deriveSecretKey","_derivePublicKey","_deriveAddress","_hashReceiveBlock","_hashOpenBlock","_hashChangeBlock","_hashSendBlock","_signBlock","_verifyBlock","_convertAmountDecimalIntegerToHex","isReady","checkNotInitialized","checkString","checkSeed","test","checkKey","deriveSecretKey","isInteger","derivePublicKey","deriveAddress","__WEBPACK_IMPORTED_MODULE_0_fs__","__WEBPACK_IMPORTED_MODULE_0_fs___default","__WEBPACK_IMPORTED_MODULE_1_path__","__WEBPACK_IMPORTED_MODULE_1_path___default","D","ceil","$","F","HEAP8","H","Int8Array","f","HEAP16","Y","Int16Array","HEAP32","Int32Array","HEAPU8","S","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","k","shift","C","dynCall_v","dynCall_vi","P","preRun","J","unshift","startsWith","X","W","u","z","B","T","message","status","_","calledRun","w","R","L","onRuntimeInitialized","postRun","setStatus","setTimeout","onAbort","print","printErr","JSON","stringify","thisProgram","quit","Q","E","h","ENVIRONMENT","window","importScripts","normalize","readFileSync","readBinary","argv","on","exit","readbuffer","scriptArgs","XMLHttpRequest","open","send","responseText","responseType","response","readAsync","onload","onerror","setWindowTitle","document","title","bind","warn","r","G","stackSave","V","stackRestore","O","arrayToC","stringToC","U","TextDecoder","t","TOTAL_STACK","K","TOTAL_MEMORY","WebAssembly","Memory","wasmMemory","initial","maximum","q","v","preloadedImages","preloadedAudios","wasmBinary","fetch","credentials","ok","arrayBuffer","memory","asm","usingWasm","monitorRunDependencies","clearInterval","instantiate","NaN","env","instantiateWasm","instantiateStreaming","locateFile","asm2wasm","f64-rem","debugger","parent","asmPreload","reallocBuffer","grow","table","wasmTableSize","wasmMaxTableSize","Table","element","wasmTable","memoryBase","STATIC_BASE","tableBase","STATIC_BUMP","atob","abort","_emscripten_memcpy_big","STACKTOP","Z","_emscripten_convert_amount_decimal_integer_to_hex","_emscripten_derive_address","_emscripten_derive_public_key","_emscripten_derive_secret_key","_emscripten_hash_change_block","_emscripten_hash_open_block","_emscripten_hash_receive_block","_emscripten_hash_send_block","_emscripten_sign_block","_emscripten_validate_work","_emscripten_verify_block","_emscripten_work","stackAlloc","every","decode","run","noExitRuntime","onExit","preInit","IS_NODE","ref","promisify","randomFill","crypto","getRandomValues","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","Item","noop","nextTick","args","browser","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","eval","getLens","b64","validLen","lens","placeHoldersLen","_byteLength","tmp","Arr","curByte","revLookup","tripletToBase64","num","lookup","encodeChunk","output","extraBytes","parts","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","abs","LN2","L32","ld32","dl64","u64","st32","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","core","inp","crypto_core_salsa20","crypto_core_hsalsa20","crypto_stream_salsa20_xor","cpos","mpos","sigma","crypto_stream_salsa20","crypto_stream","crypto_stream_xor","add1305","crypto_onetimeauth","outpos","minusp","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","gf","neq25519","par25519","unpack25519","inv25519","pow2523","crypto_scalarmult","_121665","x32","x16","crypto_scalarmult_base","_9","crypto_box_keypair","randombytes","crypto_box_beforenm","_0","crypto_box","crypto_box_afternm","crypto_box_open","crypto_box_open_afternm","add64","shr64","xor64","c1","Ch","Maj","Sigma0","Sigma1","sigma0","sigma1","crypto_hashblocks","crypto_hash","iv","add","D2","cswap","pack","tx","ty","zi","scalarmult","gf0","gf1","scalarbase","crypto_sign_keypair","pk","sk","seeded","blake","blake2bInit","blake2bUpdate","blake2bFinal","derivePublicFromSecret","modL","carry","reduce","crypto_sign","sm","smlen","unpackneg","chk","den","den2","den4","den6","crypto_sign_open","checkLengths","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","checkBoxLengths","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","checkArrayTypes","cleanup","crypto_box_NONCEBYTES","lowlevel","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_BEFORENMBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","nonce","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","publicKey","secretKey","before","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","mlen","detached","sig","verify","fromSeed","seedLength","signatureLength","hash","hashLength","setPRNG","msCrypto","b2b","b2s","blake2b","blake2bHex","blake2s","blake2sHex","blake2sInit","blake2sUpdate","blake2sFinal","ADD64AA","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","x1","y0","y1","xor0","xor1","blake2bCompress","ctx","last","BLAKE2B_IV32","SIGMA82","outlen","keylen","util","SIGMA8","B2S_GET32","B2S_G","ROTR32","blake2sCompress","BLAKE2S_IV","SIGMA"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,KAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQD,EAASH,GEnEjCI,EAAAD,QAAiBH,EAAQ,IF0EnB,SAAUI,EAAQD,EAASH,GAEjC,cG5EA,SAAA2B,GA+DA,QAAAC,KACA,MAAAC,GAAAC,oBACA,WACA,WAGA,QAAAC,GAAAC,EAAAC,GACA,GAAAL,IAAAK,EACA,SAAAC,YAAA,6BAcA,OAZAL,GAAAC,qBAEAE,EAAA,GAAAG,YAAAF,GACAD,EAAAI,UAAAP,EAAAN,YAGA,OAAAS,IACAA,EAAA,GAAAH,GAAAI,IAEAD,EAAAC,UAGAD,EAaA,QAAAH,GAAAQ,EAAAC,EAAAL,GACA,IAAAJ,EAAAC,uBAAAS,eAAAV,IACA,UAAAA,GAAAQ,EAAAC,EAAAL,EAIA,qBAAAI,GAAA,CACA,oBAAAC,GACA,SAAAE,OACA,oEAGA,OAAAC,GAAAF,KAAAF,GAEA,MAAAK,GAAAH,KAAAF,EAAAC,EAAAL,GAWA,QAAAS,GAAAV,EAAAW,EAAAL,EAAAL,GACA,oBAAAU,GACA,SAAAC,WAAA,wCAGA,2BAAAC,cAAAF,YAAAE,aACAC,EAAAd,EAAAW,EAAAL,EAAAL,GAGA,iBAAAU,GACAI,EAAAf,EAAAW,EAAAL,GAGAU,EAAAhB,EAAAW,GA4BA,QAAAM,GAAAC,GACA,oBAAAA,GACA,SAAAN,WAAA,mCACG,IAAAM,EAAA,EACH,SAAAhB,YAAA,wCAIA,QAAAiB,GAAAnB,EAAAkB,EAAAE,EAAAC,GAEA,MADAJ,GAAAC,GACAA,GAAA,EACAnB,EAAAC,EAAAkB,OAEAI,KAAAF,EAIA,iBAAAC,GACAtB,EAAAC,EAAAkB,GAAAE,OAAAC,GACAtB,EAAAC,EAAAkB,GAAAE,QAEArB,EAAAC,EAAAkB,GAWA,QAAAT,GAAAT,EAAAkB,GAGA,GAFAD,EAAAC,GACAlB,EAAAD,EAAAC,EAAAkB,EAAA,MAAAK,EAAAL,KACArB,EAAAC,oBACA,OAAAzB,GAAA,EAAmBA,EAAA6C,IAAU7C,EAC7B2B,EAAA3B,GAAA,CAGA,OAAA2B,GAgBA,QAAAe,GAAAf,EAAAwB,EAAAH,GAKA,GAJA,iBAAAA,IAAA,KAAAA,IACAA,EAAA,SAGAxB,EAAA4B,WAAAJ,GACA,SAAAT,WAAA,6CAGA,IAAAX,GAAA,EAAAyB,EAAAF,EAAAH,EACArB,GAAAD,EAAAC,EAAAC,EAEA,IAAA0B,GAAA3B,EAAA4B,MAAAJ,EAAAH,EASA,OAPAM,KAAA1B,IAIAD,IAAA6B,MAAA,EAAAF,IAGA3B,EAGA,QAAA8B,GAAA9B,EAAA+B,GACA,GAAA9B,GAAA8B,EAAA9B,OAAA,MAAAsB,EAAAQ,EAAA9B,OACAD,GAAAD,EAAAC,EAAAC,EACA,QAAA5B,GAAA,EAAiBA,EAAA4B,EAAY5B,GAAA,EAC7B2B,EAAA3B,GAAA,IAAA0D,EAAA1D,EAEA,OAAA2B,GAGA,QAAAc,GAAAd,EAAA+B,EAAAC,EAAA/B,GAGA,GAFA8B,EAAAL,WAEAM,EAAA,GAAAD,EAAAL,WAAAM,EACA,SAAA9B,YAAA,4BAGA,IAAA6B,EAAAL,WAAAM,GAAA/B,GAAA,GACA,SAAAC,YAAA,4BAmBA,OAfA6B,OADAT,KAAAU,OAAAV,KAAArB,EACA,GAAAE,YAAA4B,OACGT,KAAArB,EACH,GAAAE,YAAA4B,EAAAC,GAEA,GAAA7B,YAAA4B,EAAAC,EAAA/B,GAGAJ,EAAAC,qBAEAE,EAAA+B,EACA/B,EAAAI,UAAAP,EAAAN,WAGAS,EAAA8B,EAAA9B,EAAA+B,GAEA/B,EAGA,QAAAgB,GAAAhB,EAAAiC,GACA,GAAApC,EAAAqC,SAAAD,GAAA,CACA,GAAAE,GAAA,EAAAZ,EAAAU,EAAAhC,OAGA,OAFAD,GAAAD,EAAAC,EAAAmC,GAEA,IAAAnC,EAAAC,OACAD,GAGAiC,EAAAG,KAAApC,EAAA,IAAAmC,GACAnC,GAGA,GAAAiC,EAAA,CACA,uBAAApB,cACAoB,EAAAI,iBAAAxB,cAAA,UAAAoB,GACA,uBAAAA,GAAAhC,QAAAqC,EAAAL,EAAAhC,QACAF,EAAAC,EAAA,GAEA8B,EAAA9B,EAAAiC,EAGA,eAAAA,EAAAM,MAAAC,EAAAP,EAAAQ,MACA,MAAAX,GAAA9B,EAAAiC,EAAAQ,MAIA,SAAA7B,WAAA,sFAGA,QAAAW,GAAAtB,GAGA,GAAAA,GAAAL,IACA,SAAAM,YAAA,0DACAN,IAAA8C,SAAA,aAEA,UAAAzC,EAGA,QAAA0C,GAAA1C,GAIA,OAHAA,OACAA,EAAA,GAEAJ,EAAAsB,OAAAlB,GA+EA,QAAAyB,GAAAF,EAAAH,GACA,GAAAxB,EAAAqC,SAAAV,GACA,MAAAA,GAAAvB,MAEA,wBAAAY,cAAA,mBAAAA,aAAA+B,SACA/B,YAAA+B,OAAApB,gBAAAX,cACA,MAAAW,GAAAE,UAEA,kBAAAF,KACAA,EAAA,GAAAA,EAGA,IAAAW,GAAAX,EAAAvB,MACA,QAAAkC,EAAA,QAIA,KADA,GAAAU,IAAA,IAEA,OAAAxB,GACA,YACA,aACA,aACA,MAAAc,EACA,YACA,YACA,SAAAb,GACA,MAAAwB,GAAAtB,GAAAvB,MACA,YACA,YACA,cACA,eACA,SAAAkC,CACA,WACA,MAAAA,KAAA,CACA,cACA,MAAAY,GAAAvB,GAAAvB,MACA,SACA,GAAA4C,EAAA,MAAAC,GAAAtB,GAAAvB,MACAoB,IAAA,GAAAA,GAAA2B,cACAH,GAAA,GAMA,QAAAI,GAAA5B,EAAA6B,EAAAC,GACA,GAAAN,IAAA,CAcA,SALAvB,KAAA4B,KAAA,KACAA,EAAA,GAIAA,EAAA3C,KAAAN,OACA,QAOA,SAJAqB,KAAA6B,KAAA5C,KAAAN,UACAkD,EAAA5C,KAAAN,QAGAkD,GAAA,EACA,QAOA,IAHAA,KAAA,EACAD,KAAA,EAEAC,GAAAD,EACA,QAKA,KAFA7B,MAAA,UAGA,OAAAA,GACA,UACA,MAAA+B,GAAA7C,KAAA2C,EAAAC,EAEA,YACA,YACA,MAAAE,GAAA9C,KAAA2C,EAAAC,EAEA,aACA,MAAAG,GAAA/C,KAAA2C,EAAAC,EAEA,cACA,aACA,MAAAI,GAAAhD,KAAA2C,EAAAC,EAEA,cACA,MAAAK,GAAAjD,KAAA2C,EAAAC,EAEA,YACA,YACA,cACA,eACA,MAAAM,GAAAlD,KAAA2C,EAAAC,EAEA,SACA,GAAAN,EAAA,SAAAjC,WAAA,qBAAAS,EACAA,MAAA,IAAA2B,cACAH,GAAA,GASA,QAAAa,GAAAC,EAAAxE,EAAAX,GACA,GAAAH,GAAAsF,EAAAxE,EACAwE,GAAAxE,GAAAwE,EAAAnF,GACAmF,EAAAnF,GAAAH,EAmIA,QAAAuF,GAAAvB,EAAAwB,EAAA7B,EAAAX,EAAAyC,GAEA,OAAAzB,EAAApC,OAAA,QAmBA,IAhBA,iBAAA+B,IACAX,EAAAW,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACA+B,MAAA/B,KAEAA,EAAA8B,EAAA,EAAAzB,EAAApC,OAAA,GAIA+B,EAAA,IAAAA,EAAAK,EAAApC,OAAA+B,GACAA,GAAAK,EAAApC,OAAA,CACA,GAAA6D,EAAA,QACA9B,GAAAK,EAAApC,OAAA,MACG,IAAA+B,EAAA,GACH,IAAA8B,EACA,QADA9B,GAAA,EAUA,GALA,iBAAA6B,KACAA,EAAAhE,EAAAa,KAAAmD,EAAAxC,IAIAxB,EAAAqC,SAAA2B,GAEA,WAAAA,EAAA5D,QACA,EAEA+D,EAAA3B,EAAAwB,EAAA7B,EAAAX,EAAAyC,EACG,qBAAAD,GAEH,MADAA,IAAA,IACAhE,EAAAC,qBACA,mBAAAK,YAAAZ,UAAA0E,QACAH,EACA3D,WAAAZ,UAAA0E,QAAA1F,KAAA8D,EAAAwB,EAAA7B,GAEA7B,WAAAZ,UAAA2E,YAAA3F,KAAA8D,EAAAwB,EAAA7B,GAGAgC,EAAA3B,GAAAwB,GAAA7B,EAAAX,EAAAyC,EAGA,UAAAlD,WAAA,wCAGA,QAAAoD,GAAAG,EAAAN,EAAA7B,EAAAX,EAAAyC,GAmBA,QAAAM,GAAAC,EAAAhG,GACA,WAAAiG,EACAD,EAAAhG,GAEAgG,EAAAE,aAAAlG,EAAAiG,GAtBA,GAAAA,GAAA,EACAE,EAAAL,EAAAlE,OACAwE,EAAAZ,EAAA5D,MAEA,QAAAqB,KAAAD,IAEA,UADAA,EAAAqD,OAAArD,GAAA2B,gBACA,UAAA3B,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAA8C,EAAAlE,OAAA,GAAA4D,EAAA5D,OAAA,EACA,QAEAqE,GAAA,EACAE,GAAA,EACAC,GAAA,EACAzC,GAAA,EAYA,GAAA3D,EACA,IAAAyF,EAAA,CACA,GAAAa,IAAA,CACA,KAAAtG,EAAA2D,EAAwB3D,EAAAmG,EAAenG,IACvC,GAAA+F,EAAAD,EAAA9F,KAAA+F,EAAAP,GAAA,IAAAc,EAAA,EAAAtG,EAAAsG,IAEA,IADA,IAAAA,MAAAtG,GACAA,EAAAsG,EAAA,IAAAF,EAAA,MAAAE,GAAAL,OAEA,IAAAK,IAAAtG,KAAAsG,GACAA,GAAA,MAKA,KADA3C,EAAAyC,EAAAD,IAAAxC,EAAAwC,EAAAC,GACApG,EAAA2D,EAAwB3D,GAAA,EAAQA,IAAA,CAEhC,OADAuG,IAAA,EACAC,EAAA,EAAqBA,EAAAJ,EAAeI,IACpC,GAAAT,EAAAD,EAAA9F,EAAAwG,KAAAT,EAAAP,EAAAgB,GAAA,CACAD,GAAA,CACA,OAGA,GAAAA,EAAA,MAAAvG,GAIA,SAeA,QAAAyG,GAAAT,EAAA7C,EAAAuD,EAAA9E,GACA8E,EAAAC,OAAAD,IAAA,CACA,IAAAE,GAAAZ,EAAApE,OAAA8E,CACA9E,IAGAA,EAAA+E,OAAA/E,IACAgF,IACAhF,EAAAgF,GAJAhF,EAAAgF,CASA,IAAAC,GAAA1D,EAAAvB,MACA,IAAAiF,EAAA,eAAAtE,WAAA,qBAEAX,GAAAiF,EAAA,IACAjF,EAAAiF,EAAA,EAEA,QAAA7G,GAAA,EAAiBA,EAAA4B,IAAY5B,EAAA,CAC7B,GAAA8G,GAAAC,SAAA5D,EAAA6D,OAAA,EAAAhH,EAAA,MACA,IAAA0F,MAAAoB,GAAA,MAAA9G,EACAgG,GAAAU,EAAA1G,GAAA8G,EAEA,MAAA9G,GAGA,QAAAiH,GAAAjB,EAAA7C,EAAAuD,EAAA9E,GACA,MAAAsF,GAAAzC,EAAAtB,EAAA6C,EAAApE,OAAA8E,GAAAV,EAAAU,EAAA9E,GAGA,QAAAuF,GAAAnB,EAAA7C,EAAAuD,EAAA9E,GACA,MAAAsF,GAAAE,EAAAjE,GAAA6C,EAAAU,EAAA9E,GAGA,QAAAyF,GAAArB,EAAA7C,EAAAuD,EAAA9E,GACA,MAAAuF,GAAAnB,EAAA7C,EAAAuD,EAAA9E,GAGA,QAAA0F,GAAAtB,EAAA7C,EAAAuD,EAAA9E,GACA,MAAAsF,GAAAxC,EAAAvB,GAAA6C,EAAAU,EAAA9E,GAGA,QAAA2F,GAAAvB,EAAA7C,EAAAuD,EAAA9E,GACA,MAAAsF,GAAAM,EAAArE,EAAA6C,EAAApE,OAAA8E,GAAAV,EAAAU,EAAA9E,GAkFA,QAAAuD,GAAAa,EAAAnB,EAAAC,GACA,WAAAD,GAAAC,IAAAkB,EAAApE,OACA6F,EAAAC,cAAA1B,GAEAyB,EAAAC,cAAA1B,EAAAxC,MAAAqB,EAAAC,IAIA,QAAAE,GAAAgB,EAAAnB,EAAAC,GACAA,EAAA6C,KAAAC,IAAA5B,EAAApE,OAAAkD,EAIA,KAHA,GAAA+C,MAEA7H,EAAA6E,EACA7E,EAAA8E,GAAA,CACA,GAAAgD,GAAA9B,EAAAhG,GACA+H,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,CAEA,IAAA9H,EAAAgI,GAAAlD,EAAA,CACA,GAAAmD,GAAAC,EAAAC,EAAAC,CAEA,QAAAJ,GACA,OACAF,EAAA,MACAC,EAAAD,EAEA,MACA,QACAG,EAAAjC,EAAAhG,EAAA,GACA,WAAAiI,KACAG,GAAA,GAAAN,IAAA,KAAAG,GACA,MACAF,EAAAK,EAGA,MACA,QACAH,EAAAjC,EAAAhG,EAAA,GACAkI,EAAAlC,EAAAhG,EAAA,GACA,WAAAiI,IAAA,WAAAC,KACAE,GAAA,GAAAN,IAAA,OAAAG,IAAA,KAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAL,EAAAK,EAGA,MACA,QACAH,EAAAjC,EAAAhG,EAAA,GACAkI,EAAAlC,EAAAhG,EAAA,GACAmI,EAAAnC,EAAAhG,EAAA,GACA,WAAAiI,IAAA,WAAAC,IAAA,WAAAC,KACAC,GAAA,GAAAN,IAAA,OAAAG,IAAA,OAAAC,IAAA,KAAAC,GACA,OAAAC,EAAA,UACAL,EAAAK,IAMA,OAAAL,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACAF,EAAAQ,KAAAN,IAAA,eACAA,EAAA,WAAAA,GAGAF,EAAAQ,KAAAN,GACA/H,GAAAgI,EAGA,MAAAM,GAAAT,GAQA,QAAAS,GAAAC,GACA,GAAAzE,GAAAyE,EAAA3G,MACA,IAAAkC,GAAA0E,EACA,MAAAnC,QAAAoC,aAAAC,MAAArC,OAAAkC,EAMA,KAFA,GAAAV,GAAA,GACA7H,EAAA,EACAA,EAAA8D,GACA+D,GAAAxB,OAAAoC,aAAAC,MACArC,OACAkC,EAAA/E,MAAAxD,KAAAwI,GAGA,OAAAX,GAGA,QAAA5C,GAAAe,EAAAnB,EAAAC,GACA,GAAA6D,GAAA,EACA7D,GAAA6C,KAAAC,IAAA5B,EAAApE,OAAAkD,EAEA,QAAA9E,GAAA6E,EAAqB7E,EAAA8E,IAAS9E,EAC9B2I,GAAAtC,OAAAoC,aAAA,IAAAzC,EAAAhG,GAEA,OAAA2I,GAGA,QAAAzD,GAAAc,EAAAnB,EAAAC,GACA,GAAA6D,GAAA,EACA7D,GAAA6C,KAAAC,IAAA5B,EAAApE,OAAAkD,EAEA,QAAA9E,GAAA6E,EAAqB7E,EAAA8E,IAAS9E,EAC9B2I,GAAAtC,OAAAoC,aAAAzC,EAAAhG,GAEA,OAAA2I,GAGA,QAAA5D,GAAAiB,EAAAnB,EAAAC,GACA,GAAAhB,GAAAkC,EAAApE,SAEAiD,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAAhB,KAAAgB,EAAAhB,EAGA,QADA8E,GAAA,GACA5I,EAAA6E,EAAqB7E,EAAA8E,IAAS9E,EAC9B4I,GAAAC,EAAA7C,EAAAhG,GAEA,OAAA4I,GAGA,QAAAxD,GAAAY,EAAAnB,EAAAC,GAGA,OAFAgE,GAAA9C,EAAAxC,MAAAqB,EAAAC,GACA+C,EAAA,GACA7H,EAAA,EAAiBA,EAAA8I,EAAAlH,OAAkB5B,GAAA,EACnC6H,GAAAxB,OAAAoC,aAAAK,EAAA9I,GAAA,IAAA8I,EAAA9I,EAAA,GAEA,OAAA6H,GA0CA,QAAAkB,GAAArC,EAAAsC,EAAApH,GACA,GAAA8E,EAAA,OAAAA,EAAA,WAAA7E,YAAA,qBACA,IAAA6E,EAAAsC,EAAApH,EAAA,SAAAC,YAAA,yCA+JA,QAAAoH,GAAAjD,EAAA1D,EAAAoE,EAAAsC,EAAAE,EAAAtB,GACA,IAAApG,EAAAqC,SAAAmC,GAAA,SAAAzD,WAAA,8CACA,IAAAD,EAAA4G,GAAA5G,EAAAsF,EAAA,SAAA/F,YAAA,oCACA,IAAA6E,EAAAsC,EAAAhD,EAAApE,OAAA,SAAAC,YAAA,sBAkDA,QAAAsH,GAAAnD,EAAA1D,EAAAoE,EAAA0C,GACA9G,EAAA,IAAAA,EAAA,MAAAA,EAAA,EACA,QAAAtC,GAAA,EAAAwG,EAAAmB,KAAAC,IAAA5B,EAAApE,OAAA8E,EAAA,GAAuD1G,EAAAwG,IAAOxG,EAC9DgG,EAAAU,EAAA1G,IAAAsC,EAAA,QAAA8G,EAAApJ,EAAA,EAAAA,MACA,GAAAoJ,EAAApJ,EAAA,EAAAA,GA8BA,QAAAqJ,GAAArD,EAAA1D,EAAAoE,EAAA0C,GACA9G,EAAA,IAAAA,EAAA,WAAAA,EAAA,EACA,QAAAtC,GAAA,EAAAwG,EAAAmB,KAAAC,IAAA5B,EAAApE,OAAA8E,EAAA,GAAuD1G,EAAAwG,IAAOxG,EAC9DgG,EAAAU,EAAA1G,GAAAsC,IAAA,GAAA8G,EAAApJ,EAAA,EAAAA,GAAA,IAmJA,QAAAsJ,GAAAtD,EAAA1D,EAAAoE,EAAAsC,EAAAE,EAAAtB,GACA,GAAAlB,EAAAsC,EAAAhD,EAAApE,OAAA,SAAAC,YAAA,qBACA,IAAA6E,EAAA,WAAA7E,YAAA,sBAGA,QAAA0H,GAAAvD,EAAA1D,EAAAoE,EAAA0C,EAAAI,GAKA,MAJAA,IACAF,EAAAtD,EAAA1D,EAAAoE,EAAA,gDAEA+C,EAAAlG,MAAAyC,EAAA1D,EAAAoE,EAAA0C,EAAA,MACA1C,EAAA,EAWA,QAAAgD,GAAA1D,EAAA1D,EAAAoE,EAAA0C,EAAAI,GAKA,MAJAA,IACAF,EAAAtD,EAAA1D,EAAAoE,EAAA,kDAEA+C,EAAAlG,MAAAyC,EAAA1D,EAAAoE,EAAA0C,EAAA,MACA1C,EAAA,EAgIA,QAAAiD,GAAAC,GAIA,GAFAA,EAAAC,EAAAD,GAAAE,QAAAC,GAAA,IAEAH,EAAAhI,OAAA,UAEA,MAAAgI,EAAAhI,OAAA,OACAgI,GAAA,GAEA,OAAAA,GAGA,QAAAC,GAAAD,GACA,MAAAA,GAAAI,KAAAJ,EAAAI,OACAJ,EAAAE,QAAA,iBAGA,QAAAjB,GAAA/H,GACA,MAAAA,GAAA,OAAAA,EAAAuD,SAAA,IACAvD,EAAAuD,SAAA,IAGA,QAAAI,GAAAtB,EAAA8G,GACAA,KAAAC,GAMA,QALAnC,GACAnG,EAAAuB,EAAAvB,OACAuI,EAAA,KACArB,KAEA9I,EAAA,EAAiBA,EAAA4B,IAAY5B,EAAA,CAI7B,IAHA+H,EAAA5E,EAAAiH,WAAApK,IAGA,OAAA+H,EAAA,OAEA,IAAAoC,EAAA,CAEA,GAAApC,EAAA,QAEAkC,GAAA,OAAAnB,EAAAT,KAAA,YACA,UACS,GAAArI,EAAA,IAAA4B,EAAA,EAETqI,GAAA,OAAAnB,EAAAT,KAAA,YACA,UAIA8B,EAAApC,CAEA,UAIA,GAAAA,EAAA,QACAkC,GAAA,OAAAnB,EAAAT,KAAA,aACA8B,EAAApC,CACA,UAIAA,EAAA,OAAAoC,EAAA,UAAApC,EAAA,WACKoC,KAELF,GAAA,OAAAnB,EAAAT,KAAA,YAMA,IAHA8B,EAAA,KAGApC,EAAA,KACA,IAAAkC,GAAA,UACAnB,GAAAT,KAAAN,OACK,IAAAA,EAAA,MACL,IAAAkC,GAAA,UACAnB,GAAAT,KACAN,GAAA,MACA,GAAAA,EAAA,SAEK,IAAAA,EAAA,OACL,IAAAkC,GAAA,UACAnB,GAAAT,KACAN,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,SAAA5F,OAAA,qBARA,KAAA8H,GAAA,UACAnB,GAAAT,KACAN,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,MAAAe,GAGA,QAAA1B,GAAAwC,GAEA,OADAS,MACArK,EAAA,EAAiBA,EAAA4J,EAAAhI,SAAgB5B,EAEjCqK,EAAAhC,KAAA,IAAAuB,EAAAQ,WAAApK,GAEA,OAAAqK,GAGA,QAAA7C,GAAAoC,EAAAK,GAGA,OAFA7J,GAAAkK,EAAAC,EACAF,KACArK,EAAA,EAAiBA,EAAA4J,EAAAhI,WACjBqI,GAAA,QADiCjK,EAGjCI,EAAAwJ,EAAAQ,WAAApK,GACAsK,EAAAlK,GAAA,EACAmK,EAAAnK,EAAA,IACAiK,EAAAhC,KAAAkC,GACAF,EAAAhC,KAAAiC,EAGA,OAAAD,GAGA,QAAA3F,GAAAkF,GACA,MAAAnC,GAAA+C,YAAAb,EAAAC,IAGA,QAAA1C,GAAAuD,EAAAC,EAAAhE,EAAA9E,GACA,OAAA5B,GAAA,EAAiBA,EAAA4B,KACjB5B,EAAA0G,GAAAgE,EAAA9I,QAAA5B,GAAAyK,EAAA7I,UAD6B5B,EAE7B0K,EAAA1K,EAAA0G,GAAA+D,EAAAzK,EAEA,OAAAA,GAGA,QAAAiE,GAAAuB,GACA,MAAAA,OAjvDA,GAAAiC,GAAa9H,EAAQ,IACrB8J,EAAc9J,EAAQ,IACtBwE,EAAcxE,EAAQ,GAEtBG,GAAA0B,SACA1B,EAAAwE,aACAxE,EAAA6K,kBAAA,GA0BAnJ,EAAAC,wBAAAwB,KAAA3B,EAAAG,oBACAH,EAAAG,oBAQA,WACA,IACA,GAAAqE,GAAA,GAAAhE,YAAA,EAEA,OADAgE,GAAA/D,WAAqBA,UAAAD,WAAAZ,UAAA0J,IAAA,WAAmD,YACxE,KAAA9E,EAAA8E,OACA,mBAAA9E,GAAA+E,UACA,IAAA/E,EAAA+E,SAAA,KAAAxH,WACG,MAAAyH,GACH,aAVAhL,EAAAyB,eAkEAC,EAAAuJ,SAAA,KAGAvJ,EAAAwJ,SAAA,SAAAlF,GAEA,MADAA,GAAA/D,UAAAP,EAAAN,UACA4E,GA2BAtE,EAAAa,KAAA,SAAAC,EAAAL,EAAAL,GACA,MAAAS,GAAA,KAAAC,EAAAL,EAAAL,IAGAJ,EAAAC,sBACAD,EAAAN,UAAAa,UAAAD,WAAAZ,UACAM,EAAAO,UAAAD,WACA,oBAAAmJ,gBAAAC,SACA1J,EAAAyJ,OAAAC,WAAA1J,GAEAf,OAAAC,eAAAc,EAAAyJ,OAAAC,SACA5I,MAAA,KACA3B,cAAA,KAiCAa,EAAAsB,MAAA,SAAAD,EAAAE,EAAAC,GACA,MAAAF,GAAA,KAAAD,EAAAE,EAAAC,IAiBAxB,EAAAY,YAAA,SAAAS,GACA,MAAAT,GAAA,KAAAS,IAKArB,EAAA2J,gBAAA,SAAAtI,GACA,MAAAT,GAAA,KAAAS,IAiHArB,EAAAqC,SAAA,SAAAyB,GACA,cAAAA,MAAA8F,YAGA5J,EAAA6J,QAAA,SAAAC,EAAAhG,GACA,IAAA9D,EAAAqC,SAAAyH,KAAA9J,EAAAqC,SAAAyB,GACA,SAAA/C,WAAA,4BAGA,IAAA+I,IAAAhG,EAAA,QAKA,QAHAiG,GAAAD,EAAA1J,OACA4J,EAAAlG,EAAA1D,OAEA5B,EAAA,EAAA8D,EAAA6D,KAAAC,IAAA2D,EAAAC,GAAuCxL,EAAA8D,IAAS9D,EAChD,GAAAsL,EAAAtL,KAAAsF,EAAAtF,GAAA,CACAuL,EAAAD,EAAAtL,GACAwL,EAAAlG,EAAAtF,EACA,OAIA,MAAAuL,GAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGA/J,EAAA4B,WAAA,SAAAJ,GACA,OAAAqD,OAAArD,GAAA2B,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,QACA,SACA,WAIAnD,EAAAiK,OAAA,SAAAC,EAAA9J,GACA,IAAAuC,EAAAuH,GACA,SAAAnJ,WAAA,8CAGA,QAAAmJ,EAAA9J,OACA,MAAAJ,GAAAsB,MAAA,EAGA,IAAA9C,EACA,QAAAiD,KAAArB,EAEA,IADAA,EAAA,EACA5B,EAAA,EAAeA,EAAA0L,EAAA9J,SAAiB5B,EAChC4B,GAAA8J,EAAA1L,GAAA4B,MAIA,IAAAoC,GAAAxC,EAAAY,YAAAR,GACA+J,EAAA,CACA,KAAA3L,EAAA,EAAaA,EAAA0L,EAAA9J,SAAiB5B,EAAA,CAC9B,GAAAgG,GAAA0F,EAAA1L,EACA,KAAAwB,EAAAqC,SAAAmC,GACA,SAAAzD,WAAA,8CAEAyD,GAAAjC,KAAAC,EAAA2H,GACAA,GAAA3F,EAAApE,OAEA,MAAAoC,IA8CAxC,EAAA6B,aA0EA7B,EAAAN,UAAAkK,WAAA,EAQA5J,EAAAN,UAAA0K,OAAA,WACA,GAAA9H,GAAA5B,KAAAN,MACA,IAAAkC,EAAA,MACA,SAAAjC,YAAA,4CAEA,QAAA7B,GAAA,EAAiBA,EAAA8D,EAAS9D,GAAA,EAC1BqF,EAAAnD,KAAAlC,IAAA,EAEA,OAAAkC,OAGAV,EAAAN,UAAA2K,OAAA,WACA,GAAA/H,GAAA5B,KAAAN,MACA,IAAAkC,EAAA,MACA,SAAAjC,YAAA,4CAEA,QAAA7B,GAAA,EAAiBA,EAAA8D,EAAS9D,GAAA,EAC1BqF,EAAAnD,KAAAlC,IAAA,GACAqF,EAAAnD,KAAAlC,EAAA,EAAAA,EAAA,EAEA,OAAAkC,OAGAV,EAAAN,UAAA4K,OAAA,WACA,GAAAhI,GAAA5B,KAAAN,MACA,IAAAkC,EAAA,MACA,SAAAjC,YAAA,4CAEA,QAAA7B,GAAA,EAAiBA,EAAA8D,EAAS9D,GAAA,EAC1BqF,EAAAnD,KAAAlC,IAAA,GACAqF,EAAAnD,KAAAlC,EAAA,EAAAA,EAAA,GACAqF,EAAAnD,KAAAlC,EAAA,EAAAA,EAAA,GACAqF,EAAAnD,KAAAlC,EAAA,EAAAA,EAAA,EAEA,OAAAkC,OAGAV,EAAAN,UAAAmD,SAAA,WACA,GAAAzC,GAAA,EAAAM,KAAAN,MACA,YAAAA,EAAA,GACA,IAAAmK,UAAAnK,OAAAoD,EAAA9C,KAAA,EAAAN,GACAgD,EAAA8D,MAAAxG,KAAA6J,YAGAvK,EAAAN,UAAA8K,OAAA,SAAA1G,GACA,IAAA9D,EAAAqC,SAAAyB,GAAA,SAAA/C,WAAA,4BACA,OAAAL,QAAAoD,GACA,IAAA9D,EAAA6J,QAAAnJ,KAAAoD,IAGA9D,EAAAN,UAAA+K,QAAA,WACA,GAAArC,GAAA,GACAV,EAAApJ,EAAA6K,iBAKA,OAJAzI,MAAAN,OAAA,IACAgI,EAAA1H,KAAAmC,SAAA,QAAA6E,GAAAgD,MAAA,SAAkDC,KAAA,KAClDjK,KAAAN,OAAAsH,IAAAU,GAAA,UAEA,WAAAA,EAAA,KAGApI,EAAAN,UAAAmK,QAAA,SAAAe,EAAAvH,EAAAC,EAAAuH,EAAAC,GACA,IAAA9K,EAAAqC,SAAAuI,GACA,SAAA7J,WAAA,4BAgBA,QAbAU,KAAA4B,IACAA,EAAA,OAEA5B,KAAA6B,IACAA,EAAAsH,IAAAxK,OAAA,OAEAqB,KAAAoJ,IACAA,EAAA,OAEApJ,KAAAqJ,IACAA,EAAApK,KAAAN,QAGAiD,EAAA,GAAAC,EAAAsH,EAAAxK,QAAAyK,EAAA,GAAAC,EAAApK,KAAAN,OACA,SAAAC,YAAA,qBAGA,IAAAwK,GAAAC,GAAAzH,GAAAC,EACA,QAEA,IAAAuH,GAAAC,EACA,QAEA,IAAAzH,GAAAC,EACA,QAQA,IALAD,KAAA,EACAC,KAAA,EACAuH,KAAA,EACAC,KAAA,EAEApK,OAAAkK,EAAA,QASA,QAPAb,GAAAe,EAAAD,EACAb,EAAA1G,EAAAD,EACAf,EAAA6D,KAAAC,IAAA2D,EAAAC,GAEAe,EAAArK,KAAAsB,MAAA6I,EAAAC,GACAE,EAAAJ,EAAA5I,MAAAqB,EAAAC,GAEA9E,EAAA,EAAiBA,EAAA8D,IAAS9D,EAC1B,GAAAuM,EAAAvM,KAAAwM,EAAAxM,GAAA,CACAuL,EAAAgB,EAAAvM,GACAwL,EAAAgB,EAAAxM,EACA,OAIA,MAAAuL,GAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GA6HA/J,EAAAN,UAAAuL,SAAA,SAAAjH,EAAA7B,EAAAX,GACA,WAAAd,KAAA0D,QAAAJ,EAAA7B,EAAAX,IAGAxB,EAAAN,UAAA0E,QAAA,SAAAJ,EAAA7B,EAAAX,GACA,MAAAuC,GAAArD,KAAAsD,EAAA7B,EAAAX,GAAA,IAGAxB,EAAAN,UAAA2E,YAAA,SAAAL,EAAA7B,EAAAX,GACA,MAAAuC,GAAArD,KAAAsD,EAAA7B,EAAAX,GAAA,IAkDAxB,EAAAN,UAAAqC,MAAA,SAAAJ,EAAAuD,EAAA9E,EAAAoB,GAEA,OAAAC,KAAAyD,EACA1D,EAAA,OACApB,EAAAM,KAAAN,OACA8E,EAAA,MAEG,QAAAzD,KAAArB,GAAA,iBAAA8E,GACH1D,EAAA0D,EACA9E,EAAAM,KAAAN,OACA8E,EAAA,MAEG,KAAAgG,SAAAhG,GAWH,SAAAvE,OACA,0EAXAuE,IAAA,EACAgG,SAAA9K,IACAA,GAAA,MACAqB,KAAAD,MAAA,UAEAA,EAAApB,EACAA,MAAAqB,IASA,GAAA2D,GAAA1E,KAAAN,OAAA8E,CAGA,SAFAzD,KAAArB,KAAAgF,KAAAhF,EAAAgF,GAEAzD,EAAAvB,OAAA,IAAAA,EAAA,GAAA8E,EAAA,IAAAA,EAAAxE,KAAAN,OACA,SAAAC,YAAA,yCAGAmB,OAAA,OAGA,KADA,GAAAwB,IAAA,IAEA,OAAAxB,GACA,UACA,MAAAyD,GAAAvE,KAAAiB,EAAAuD,EAAA9E,EAEA,YACA,YACA,MAAAqF,GAAA/E,KAAAiB,EAAAuD,EAAA9E,EAEA,aACA,MAAAuF,GAAAjF,KAAAiB,EAAAuD,EAAA9E,EAEA,cACA,aACA,MAAAyF,GAAAnF,KAAAiB,EAAAuD,EAAA9E,EAEA,cAEA,MAAA0F,GAAApF,KAAAiB,EAAAuD,EAAA9E,EAEA,YACA,YACA,cACA,eACA,MAAA2F,GAAArF,KAAAiB,EAAAuD,EAAA9E,EAEA,SACA,GAAA4C,EAAA,SAAAjC,WAAA,qBAAAS,EACAA,IAAA,GAAAA,GAAA2B,cACAH,GAAA,IAKAhD,EAAAN,UAAAyL,OAAA,WACA,OACAzI,KAAA,SACAE,KAAAwI,MAAA1L,UAAAsC,MAAAtD,KAAAgC,KAAA2K,MAAA3K,KAAA,IAwFA,IAAAsG,GAAA,IA8DAhH,GAAAN,UAAAsC,MAAA,SAAAqB,EAAAC,GACA,GAAAhB,GAAA5B,KAAAN,MACAiD,OACAC,MAAA7B,KAAA6B,EAAAhB,IAAAgB,EAEAD,EAAA,GACAA,GAAAf,GACA,IAAAe,EAAA,GACGA,EAAAf,IACHe,EAAAf,GAGAgB,EAAA,GACAA,GAAAhB,GACA,IAAAgB,EAAA,GACGA,EAAAhB,IACHgB,EAAAhB,GAGAgB,EAAAD,IAAAC,EAAAD,EAEA,IAAAiI,EACA,IAAAtL,EAAAC,oBACAqL,EAAA5K,KAAA2I,SAAAhG,EAAAC,GACAgI,EAAA/K,UAAAP,EAAAN,cACG,CACH,GAAA6L,GAAAjI,EAAAD,CACAiI,GAAA,GAAAtL,GAAAuL,MAAA9J,GACA,QAAAjD,GAAA,EAAmBA,EAAA+M,IAAc/M,EACjC8M,EAAA9M,GAAAkC,KAAAlC,EAAA6E,GAIA,MAAAiI,IAWAtL,EAAAN,UAAA8L,WAAA,SAAAtG,EAAArD,EAAAmG,GACA9C,GAAA,EACArD,GAAA,EACAmG,GAAAT,EAAArC,EAAArD,EAAAnB,KAAAN,OAKA,KAHA,GAAA4D,GAAAtD,KAAAwE,GACAuG,EAAA,EACAjN,EAAA,IACAA,EAAAqD,IAAA4J,GAAA,MACAzH,GAAAtD,KAAAwE,EAAA1G,GAAAiN,CAGA,OAAAzH,IAGAhE,EAAAN,UAAAgM,WAAA,SAAAxG,EAAArD,EAAAmG,GACA9C,GAAA,EACArD,GAAA,EACAmG,GACAT,EAAArC,EAAArD,EAAAnB,KAAAN,OAKA,KAFA,GAAA4D,GAAAtD,KAAAwE,IAAArD,GACA4J,EAAA,EACA5J,EAAA,IAAA4J,GAAA,MACAzH,GAAAtD,KAAAwE,IAAArD,GAAA4J,CAGA,OAAAzH,IAGAhE,EAAAN,UAAAiM,UAAA,SAAAzG,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACAM,KAAAwE,IAGAlF,EAAAN,UAAAkM,aAAA,SAAA1G,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACAM,KAAAwE,GAAAxE,KAAAwE,EAAA,OAGAlF,EAAAN,UAAAgF,aAAA,SAAAQ,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACAM,KAAAwE,IAAA,EAAAxE,KAAAwE,EAAA,IAGAlF,EAAAN,UAAAmM,aAAA,SAAA3G,EAAA8C,GAGA,MAFAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,SAEAM,KAAAwE,GACAxE,KAAAwE,EAAA,MACAxE,KAAAwE,EAAA,QACA,SAAAxE,KAAAwE,EAAA,IAGAlF,EAAAN,UAAAoM,aAAA,SAAA5G,EAAA8C,GAGA,MAFAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QAEA,SAAAM,KAAAwE,IACAxE,KAAAwE,EAAA,OACAxE,KAAAwE,EAAA,MACAxE,KAAAwE,EAAA,KAGAlF,EAAAN,UAAAqM,UAAA,SAAA7G,EAAArD,EAAAmG,GACA9C,GAAA,EACArD,GAAA,EACAmG,GAAAT,EAAArC,EAAArD,EAAAnB,KAAAN,OAKA,KAHA,GAAA4D,GAAAtD,KAAAwE,GACAuG,EAAA,EACAjN,EAAA,IACAA,EAAAqD,IAAA4J,GAAA,MACAzH,GAAAtD,KAAAwE,EAAA1G,GAAAiN,CAMA,OAJAA,IAAA,IAEAzH,GAAAyH,IAAAzH,GAAAmC,KAAA6F,IAAA,IAAAnK,IAEAmC,GAGAhE,EAAAN,UAAAuM,UAAA,SAAA/G,EAAArD,EAAAmG,GACA9C,GAAA,EACArD,GAAA,EACAmG,GAAAT,EAAArC,EAAArD,EAAAnB,KAAAN,OAKA,KAHA,GAAA5B,GAAAqD,EACA4J,EAAA,EACAzH,EAAAtD,KAAAwE,IAAA1G,GACAA,EAAA,IAAAiN,GAAA,MACAzH,GAAAtD,KAAAwE,IAAA1G,GAAAiN,CAMA,OAJAA,IAAA,IAEAzH,GAAAyH,IAAAzH,GAAAmC,KAAA6F,IAAA,IAAAnK,IAEAmC,GAGAhE,EAAAN,UAAAwM,SAAA,SAAAhH,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACA,IAAAM,KAAAwE,IACA,OAAAxE,KAAAwE,GAAA,GADAxE,KAAAwE,IAIAlF,EAAAN,UAAAyM,YAAA,SAAAjH,EAAA8C,GACAA,GAAAT,EAAArC,EAAA,EAAAxE,KAAAN,OACA,IAAA4D,GAAAtD,KAAAwE,GAAAxE,KAAAwE,EAAA,KACA,cAAAlB,EAAA,WAAAA,KAGAhE,EAAAN,UAAA0M,YAAA,SAAAlH,EAAA8C,GACAA,GAAAT,EAAArC,EAAA,EAAAxE,KAAAN,OACA,IAAA4D,GAAAtD,KAAAwE,EAAA,GAAAxE,KAAAwE,IAAA,CACA,cAAAlB,EAAA,WAAAA,KAGAhE,EAAAN,UAAA2M,YAAA,SAAAnH,EAAA8C,GAGA,MAFAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QAEAM,KAAAwE,GACAxE,KAAAwE,EAAA,MACAxE,KAAAwE,EAAA,OACAxE,KAAAwE,EAAA,QAGAlF,EAAAN,UAAA4M,YAAA,SAAApH,EAAA8C,GAGA,MAFAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QAEAM,KAAAwE,IAAA,GACAxE,KAAAwE,EAAA,OACAxE,KAAAwE,EAAA,MACAxE,KAAAwE,EAAA,IAGAlF,EAAAN,UAAA6M,YAAA,SAAArH,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACA6H,EAAA1D,KAAA7D,KAAAwE,GAAA,SAGAlF,EAAAN,UAAA8M,YAAA,SAAAtH,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACA6H,EAAA1D,KAAA7D,KAAAwE,GAAA,SAGAlF,EAAAN,UAAA+M,aAAA,SAAAvH,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACA6H,EAAA1D,KAAA7D,KAAAwE,GAAA,SAGAlF,EAAAN,UAAAgN,aAAA,SAAAxH,EAAA8C,GAEA,MADAA,IAAAT,EAAArC,EAAA,EAAAxE,KAAAN,QACA6H,EAAA1D,KAAA7D,KAAAwE,GAAA,SASAlF,EAAAN,UAAAiN,YAAA,SAAA7L,EAAAoE,EAAArD,EAAAmG,GAIA,GAHAlH,KACAoE,GAAA,EACArD,GAAA,GACAmG,EAAA,CAEAP,EAAA/G,KAAAI,EAAAoE,EAAArD,EADAsE,KAAA6F,IAAA,IAAAnK,GAAA,EACA,GAGA,GAAA4J,GAAA,EACAjN,EAAA,CAEA,KADAkC,KAAAwE,GAAA,IAAApE,IACAtC,EAAAqD,IAAA4J,GAAA,MACA/K,KAAAwE,EAAA1G,GAAAsC,EAAA2K,EAAA,GAGA,OAAAvG,GAAArD,GAGA7B,EAAAN,UAAAkN,YAAA,SAAA9L,EAAAoE,EAAArD,EAAAmG,GAIA,GAHAlH,KACAoE,GAAA,EACArD,GAAA,GACAmG,EAAA,CAEAP,EAAA/G,KAAAI,EAAAoE,EAAArD,EADAsE,KAAA6F,IAAA,IAAAnK,GAAA,EACA,GAGA,GAAArD,GAAAqD,EAAA,EACA4J,EAAA,CAEA,KADA/K,KAAAwE,EAAA1G,GAAA,IAAAsC,IACAtC,GAAA,IAAAiN,GAAA,MACA/K,KAAAwE,EAAA1G,GAAAsC,EAAA2K,EAAA,GAGA,OAAAvG,GAAArD,GAGA7B,EAAAN,UAAAmN,WAAA,SAAA/L,EAAAoE,EAAA8C,GAMA,MALAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,SACAlF,EAAAC,sBAAAa,EAAAqF,KAAA2G,MAAAhM,IACAJ,KAAAwE,GAAA,IAAApE,EACAoE,EAAA,GAWAlF,EAAAN,UAAAqN,cAAA,SAAAjM,EAAAoE,EAAA8C,GAUA,MATAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,WACAlF,EAAAC,qBACAS,KAAAwE,GAAA,IAAApE,EACAJ,KAAAwE,EAAA,GAAApE,IAAA,GAEA6G,EAAAjH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAGAlF,EAAAN,UAAAsN,cAAA,SAAAlM,EAAAoE,EAAA8C,GAUA,MATAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,WACAlF,EAAAC,qBACAS,KAAAwE,GAAApE,IAAA,EACAJ,KAAAwE,EAAA,OAAApE,GAEA6G,EAAAjH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAUAlF,EAAAN,UAAAuN,cAAA,SAAAnM,EAAAoE,EAAA8C,GAYA,MAXAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,gBACAlF,EAAAC,qBACAS,KAAAwE,EAAA,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,EACAJ,KAAAwE,GAAA,IAAApE,GAEA+G,EAAAnH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAGAlF,EAAAN,UAAAwN,cAAA,SAAApM,EAAAoE,EAAA8C,GAYA,MAXAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,gBACAlF,EAAAC,qBACAS,KAAAwE,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,EACAJ,KAAAwE,EAAA,OAAApE,GAEA+G,EAAAnH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAGAlF,EAAAN,UAAAyN,WAAA,SAAArM,EAAAoE,EAAArD,EAAAmG,GAGA,GAFAlH,KACAoE,GAAA,GACA8C,EAAA,CACA,GAAAoF,GAAAjH,KAAA6F,IAAA,IAAAnK,EAAA,EAEA4F,GAAA/G,KAAAI,EAAAoE,EAAArD,EAAAuL,EAAA,GAAAA,GAGA,GAAA5O,GAAA,EACAiN,EAAA,EACA4B,EAAA,CAEA,KADA3M,KAAAwE,GAAA,IAAApE,IACAtC,EAAAqD,IAAA4J,GAAA,MACA3K,EAAA,OAAAuM,GAAA,IAAA3M,KAAAwE,EAAA1G,EAAA,KACA6O,EAAA,GAEA3M,KAAAwE,EAAA1G,IAAAsC,EAAA2K,GAAA,GAAA4B,EAAA,GAGA,OAAAnI,GAAArD,GAGA7B,EAAAN,UAAA4N,WAAA,SAAAxM,EAAAoE,EAAArD,EAAAmG,GAGA,GAFAlH,KACAoE,GAAA,GACA8C,EAAA,CACA,GAAAoF,GAAAjH,KAAA6F,IAAA,IAAAnK,EAAA,EAEA4F,GAAA/G,KAAAI,EAAAoE,EAAArD,EAAAuL,EAAA,GAAAA,GAGA,GAAA5O,GAAAqD,EAAA,EACA4J,EAAA,EACA4B,EAAA,CAEA,KADA3M,KAAAwE,EAAA1G,GAAA,IAAAsC,IACAtC,GAAA,IAAAiN,GAAA,MACA3K,EAAA,OAAAuM,GAAA,IAAA3M,KAAAwE,EAAA1G,EAAA,KACA6O,EAAA,GAEA3M,KAAAwE,EAAA1G,IAAAsC,EAAA2K,GAAA,GAAA4B,EAAA,GAGA,OAAAnI,GAAArD,GAGA7B,EAAAN,UAAA6N,UAAA,SAAAzM,EAAAoE,EAAA8C,GAOA,MANAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,YACAlF,EAAAC,sBAAAa,EAAAqF,KAAA2G,MAAAhM,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAJ,KAAAwE,GAAA,IAAApE,EACAoE,EAAA,GAGAlF,EAAAN,UAAA8N,aAAA,SAAA1M,EAAAoE,EAAA8C,GAUA,MATAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,gBACAlF,EAAAC,qBACAS,KAAAwE,GAAA,IAAApE,EACAJ,KAAAwE,EAAA,GAAApE,IAAA,GAEA6G,EAAAjH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAGAlF,EAAAN,UAAA+N,aAAA,SAAA3M,EAAAoE,EAAA8C,GAUA,MATAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,gBACAlF,EAAAC,qBACAS,KAAAwE,GAAApE,IAAA,EACAJ,KAAAwE,EAAA,OAAApE,GAEA6G,EAAAjH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAGAlF,EAAAN,UAAAgO,aAAA,SAAA5M,EAAAoE,EAAA8C,GAYA,MAXAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,0BACAlF,EAAAC,qBACAS,KAAAwE,GAAA,IAAApE,EACAJ,KAAAwE,EAAA,GAAApE,IAAA,EACAJ,KAAAwE,EAAA,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,IAEA+G,EAAAnH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAGAlF,EAAAN,UAAAiO,aAAA,SAAA7M,EAAAoE,EAAA8C,GAaA,MAZAlH,MACAoE,GAAA,EACA8C,GAAAP,EAAA/G,KAAAI,EAAAoE,EAAA,0BACApE,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAd,EAAAC,qBACAS,KAAAwE,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,GACAJ,KAAAwE,EAAA,GAAApE,IAAA,EACAJ,KAAAwE,EAAA,OAAApE,GAEA+G,EAAAnH,KAAAI,EAAAoE,GAAA,GAEAA,EAAA,GAgBAlF,EAAAN,UAAAkO,aAAA,SAAA9M,EAAAoE,EAAA8C,GACA,MAAAD,GAAArH,KAAAI,EAAAoE,GAAA,EAAA8C,IAGAhI,EAAAN,UAAAmO,aAAA,SAAA/M,EAAAoE,EAAA8C,GACA,MAAAD,GAAArH,KAAAI,EAAAoE,GAAA,EAAA8C,IAWAhI,EAAAN,UAAAoO,cAAA,SAAAhN,EAAAoE,EAAA8C,GACA,MAAAE,GAAAxH,KAAAI,EAAAoE,GAAA,EAAA8C,IAGAhI,EAAAN,UAAAqO,cAAA,SAAAjN,EAAAoE,EAAA8C,GACA,MAAAE,GAAAxH,KAAAI,EAAAoE,GAAA,EAAA8C,IAIAhI,EAAAN,UAAA6C,KAAA,SAAAqI,EAAAoD,EAAA3K,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAA5C,KAAAN,QACA4N,GAAApD,EAAAxK,SAAA4N,EAAApD,EAAAxK,QACA4N,MAAA,GACA1K,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,QACA,QAAAuH,EAAAxK,QAAA,IAAAM,KAAAN,OAAA,QAGA,IAAA4N,EAAA,EACA,SAAA3N,YAAA,4BAEA,IAAAgD,EAAA,GAAAA,GAAA3C,KAAAN,OAAA,SAAAC,YAAA,4BACA,IAAAiD,EAAA,WAAAjD,YAAA,0BAGAiD,GAAA5C,KAAAN,SAAAkD,EAAA5C,KAAAN,QACAwK,EAAAxK,OAAA4N,EAAA1K,EAAAD,IACAC,EAAAsH,EAAAxK,OAAA4N,EAAA3K,EAGA,IACA7E,GADA8D,EAAAgB,EAAAD,CAGA,IAAA3C,OAAAkK,GAAAvH,EAAA2K,KAAA1K,EAEA,IAAA9E,EAAA8D,EAAA,EAAqB9D,GAAA,IAAQA,EAC7BoM,EAAApM,EAAAwP,GAAAtN,KAAAlC,EAAA6E,OAEG,IAAAf,EAAA,MAAAtC,EAAAC,oBAEH,IAAAzB,EAAA,EAAeA,EAAA8D,IAAS9D,EACxBoM,EAAApM,EAAAwP,GAAAtN,KAAAlC,EAAA6E,OAGA/C,YAAAZ,UAAAuO,IAAAvP,KACAkM,EACAlK,KAAA2I,SAAAhG,IAAAf,GACA0L,EAIA,OAAA1L,IAOAtC,EAAAN,UAAA6B,KAAA,SAAAyC,EAAAX,EAAAC,EAAA9B,GAEA,oBAAAwC,GAAA,CASA,GARA,iBAAAX,IACA7B,EAAA6B,EACAA,EAAA,EACAC,EAAA5C,KAAAN,QACK,iBAAAkD,KACL9B,EAAA8B,EACAA,EAAA5C,KAAAN,QAEA,IAAA4D,EAAA5D,OAAA,CACA,GAAA8N,GAAAlK,EAAA4E,WAAA,EACAsF,GAAA,MACAlK,EAAAkK,GAGA,OAAAzM,KAAAD,GAAA,iBAAAA,GACA,SAAAT,WAAA,4BAEA,qBAAAS,KAAAxB,EAAA4B,WAAAJ,GACA,SAAAT,WAAA,qBAAAS,OAEG,iBAAAwC,KACHA,GAAA,IAIA,IAAAX,EAAA,GAAA3C,KAAAN,OAAAiD,GAAA3C,KAAAN,OAAAkD,EACA,SAAAjD,YAAA,qBAGA,IAAAiD,GAAAD,EACA,MAAA3C,KAGA2C,MAAA,EACAC,MAAA7B,KAAA6B,EAAA5C,KAAAN,OAAAkD,IAAA,EAEAU,MAAA,EAEA,IAAAxF,EACA,qBAAAwF,GACA,IAAAxF,EAAA6E,EAAmB7E,EAAA8E,IAAS9E,EAC5BkC,KAAAlC,GAAAwF,MAEG,CACH,GAAAsD,GAAAtH,EAAAqC,SAAA2B,GACAA,EACAf,EAAA,GAAAjD,GAAAgE,EAAAxC,GAAAqB,YACAP,EAAAgF,EAAAlH,MACA,KAAA5B,EAAA,EAAeA,EAAA8E,EAAAD,IAAiB7E,EAChCkC,KAAAlC,EAAA6E,GAAAiE,EAAA9I,EAAA8D,GAIA,MAAA5B,MAMA,IAAA6H,IAAA,uBH8N6B7J,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,EAASH,II/0DjC,SAAA6B,GAGA,QAAAmO,GAAAC,GACA,GAAAjH,EACA,IAAAiH,YAAA9N,YACA6G,EAAAiH,MACG,IAAAA,YAAApO,GACHmH,EAAA,GAAA7G,YAAA8N,OACG,wBAGH,SAAAzN,OAAA0N,EAFAlH,GAAA,GAAA7G,YAAAN,EAAAa,KAAAuN,EAAA,SAIA,MAAAjH,GAKA,QAAAE,GAAAC,GACA,MAAA8D,OAAA1L,UAAA4O,IAAA5P,KAAA4I,EAAA,SAAAhI,GACA,OAAAA,EAAA,WAAAA,EAAAuD,SAAA,MACG8H,KAAA,IAIH,QAAA4D,GAAAvK,GACA,kBAAAA,GAAAnB,SAAA,IAAA2L,UAAA,GAKA,QAAAC,GAAAC,EAAApK,EAAAjD,GAEA,OADAsN,GAAA,KAAAD,EAAA,MACAlQ,EAAA,EAAiBA,EAAA8F,EAAAlE,OAAgB5B,GAAA,GACjC,QAAA6C,EACAsN,GAAAJ,EAAAjK,EAAA9F,IAAAoQ,cACAD,GAAA,IACAA,GAAAJ,EAAAjK,EAAA9F,EAAA,IAAAoQ,kBACK,SAAAvN,EAGA,SAAAV,OAAA,gBAAAU,EAFLsN,IAAAJ,EAAAjK,EAAA9F,EAAA,IAAAoQ,cACAD,GAAAJ,EAAAjK,EAAA9F,IAAAoQ,cAEApQ,EAAA,MACAmQ,GAAA,QAAAvD,OAAAsD,EAAAtO,OAAA,GAAAuK,KAAA,KACKnM,EAAA8F,EAAAlE,OAAA,IACLuO,GAAA,KAGAE,QAAAC,IAAAH,GAKA,QAAAI,GAAAC,EAAAC,EAAAC,GAIA,OAHAC,IAAA,GAAAC,OAAAC,UAEAjB,EAAA,GAAA9N,YAAA2O,GACAzQ,EAAA,EAAiBA,EAAAyQ,EAAOzQ,IACxB4P,EAAA5P,KAAA,GAEA,IAAA8Q,IAAA,GAAAF,OAAAC,SAIA,KAHAR,QAAAC,IAAA,8BAAAQ,EAAAH,GAAA,MACAA,EAAAG,EAEA9Q,EAAA,EAAaA,EAAA0Q,EAAO1Q,IAAA,CACpB,GAAA+Q,GAAAP,EAAAZ,GACAoB,GAAA,GAAAJ,OAAAC,UACAI,EAAAD,EAAAL,CACAA,GAAAK,EACAX,QAAAC,IAAA,aAAAW,EAAA,OAAAF,EAAAf,UAAA,aACAK,QAAAC,IAAA3I,KAAAuJ,MAAAT,GAAA,QAAAQ,EAAA,iCAvEA,GAAApB,GAAA,+CA2EA9P,GAAAD,SACA6P,iBACA9G,QACAoH,aACAM,eJo1D6BrQ,KAAKJ,EAASH,EAAoB,GAAG6B,SAI5D,SAAUzB,EAAQoR,EAAqBxR,GAE7C,YAKA,SAASyR,GAAkBC,GAAI,MAAO,YAAW,GAAIC,GAAID,EAAG3I,MAAMxG,KAAK6J,UAAW,OAAO,IAAIwF,SAAQ,SAASC,EAAQC,GAAQ,QAASC,GAAKC,EAAI3P,GAAK,IAAI,GAAI4P,GAAKN,EAAIK,GAAK3P,GAASM,EAAMsP,EAAKtP,MAAO,MAAMuP,GAAqB,WAAdJ,GAAOI,GAAe,IAAGD,EAAKE,KAA2B,MAAOP,SAAQC,QAAQlP,GAAOyP,KAAK,SAASzP,GAAOoP,EAAK,OAAOpP,IAAS,SAAS0P,GAAKN,EAAK,QAAQM,IAAxHR,GAAQlP,GAA0H,MAAOoP,GAAK,WAJrYjR,OAAOC,eAAeyQ,EAAqB,cAAgB7O,OAAO,GAC7C,IAAI2P,GAA0DtS,EAAoB,GAC9EuS,EAAkEvS,EAAoBmB,EAAEmR,GACxFE,EAA+CxS,EAAoB,IK36D5F,WAAgB,GAAAyS,GAAAlQ,KAAAmQ,EAAA,cAAAC,GAAAlB,EAAAc,EAAA5G,EAAAiH,KASZ,QAAAC,GAA0BC,GAA1B,GAAAC,GAAAC,EAAAC,EAAAC,CAAA,OAAAX,GAAA5G,EAAAwH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACQP,GAAmB,KACnBC,EAAM,KACNC,EAAS,KAEb/N,EAAQ+L,KAAK+B,MAEPE,EAAgB,GAAIK,KAP9BH,EAAAE,KAAA,EAQUJ,EAAcM,YARxB,QAUI,GACIC,IACAT,EAAM/B,KAAK+B,MACXC,EAASC,EAAcQ,iBACvBX,EAAmBE,EAAOU,eAAetD,UAAU,EAAG,EAAIyC,EAAO7Q,QAE7D+Q,EAAMY,IACNC,EAAMJ,EAAWK,EACjBA,EAAeL,EACfG,EAAaZ,EAAM,IACnBe,GAAYf,EAAI9N,GAAO,IACvB8O,aACIC,OAAO,SACPR,SAASA,EACTI,IAAIA,EACJE,QAAQA,EACRG,YAAYT,EAASM,WAGxBhB,IAAqBD,EA7BlC,OA+BIqB,GAAWlD,KAAK+B,MA/BpBI,EAAAgB,OAAA,SAiCWnB,EAjCX,yBAAAG,GAAAiB,SAAAxB,EAAAtQ,QATY,iBAAA+R,GAAA,MAAA3B,GAAA5J,MAAAxG,KAAA6J,eACRqH,EAAW,EACXG,EAAa,EACbE,EAAe,EACfD,EAAM,EACN3O,EAAQ,EACRiP,EAAW,EACXJ,EAAU,CAsCdQ,kBAAiB,UAAjB,cAAAC,GAAA/C,EAAAc,EAAA5G,EAAAiH,KAA4B,QAAA6B,GAAOC,GAAP,GAAA5B,GAAAG,CAAA,OAAAV,GAAA5G,EAAAwH,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,UACE,UAAtBoB,EAAMjQ,KAAKwP,OADS,CAAAU,EAAArB,KAAA,cAEdR,GAAS4B,EAAMjQ,KAAKmQ,OAAO9B,OAFb6B,EAAArB,KAAA,EAGCZ,EAAWI,EAHZ,QAGdG,EAHc0B,EAAAE,KAIpBd,GAAWI,EAASjP,GAAO,IAC3B8O,aACIC,OAAO,WACPhB,OAAOA,EACPQ,SAASA,EACTI,IAAIA,EACJE,QAAQA,EACRG,YAAYT,EAASM,GAXL,wBAAAY,GAAAN,SAAAI,EAAAhC,KAA5B,iBAAAqC,GAAA,MAAAN,GAAAzL,MAAAxG,KAAA6J,oBLm4DE,SAAUhM,EAAQD,EAASH,GMz6DjC,GAAA+U,GAAA,WAAqB,MAAAxS,UAAcyS,SAAA,iBAInCC,EAAAF,EAAAG,oBACApU,OAAAqU,oBAAAJ,GAAA9O,QAAA,yBAGAmP,EAAAH,GAAAF,EAAAG,kBAOA,IAJAH,EAAAG,uBAAA5R,GAEAlD,EAAAD,QAAiBH,EAAQ,GAEzBiV,EAEAF,EAAAG,mBAAAE,MAGA,WACAL,GAAAG,mBACG,MAAA/J,GACH4J,EAAAG,uBAAA5R,KN27DM,SAAUlD,EAAQD,IOp9DxB,SAAAwB,GACA,YA2BA,SAAAwR,GAAAkC,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAH,KAAA/T,oBAAAmU,GAAAJ,EAAAI,EACAC,EAAA7U,OAAA8U,OAAAH,EAAAlU,WACAsU,EAAA,GAAAC,GAAAN,MAMA,OAFAG,GAAAI,QAAAC,EAAAX,EAAAE,EAAAM,GAEAF,EAcA,QAAAM,GAAAvE,EAAAzN,EAAA5B,GACA,IACA,OAAckC,KAAA,SAAAlC,IAAAqP,EAAAnR,KAAA0D,EAAA5B,IACT,MAAAgQ,GACL,OAAc9N,KAAA,QAAAlC,IAAAgQ,IAiBd,QAAAqD,MACA,QAAAQ,MACA,QAAAC,MA4BA,QAAAC,GAAA7U,IACA,yBAAA8U,QAAA,SAAAC,GACA/U,EAAA+U,GAAA,SAAAjU,GACA,MAAAE,MAAAwT,QAAAO,EAAAjU,MAoCA,QAAAkU,GAAAZ,GACA,QAAAa,GAAAF,EAAAjU,EAAAwP,EAAAC,GACA,GAAA2E,GAAAR,EAAAN,EAAAW,GAAAX,EAAAtT,EACA,cAAAoU,EAAAlS,KAEO,CACP,GAAAmS,GAAAD,EAAApU,IACAM,EAAA+T,EAAA/T,KACA,OAAAA,IACA,iBAAAA,IACAgU,EAAApW,KAAAoC,EAAA,WACAiP,QAAAC,QAAAlP,EAAAiU,SAAAxE,KAAA,SAAAzP,GACA6T,EAAA,OAAA7T,EAAAkP,EAAAC,IACW,SAAAO,GACXmE,EAAA,QAAAnE,EAAAR,EAAAC,KAIAF,QAAAC,QAAAlP,GAAAyP,KAAA,SAAAyE,GAgBAH,EAAA/T,MAAAkU,EACAhF,EAAA6E,IACS5E,GAhCTA,EAAA2E,EAAApU,KAsCA,QAAAyU,GAAAR,EAAAjU,GACA,QAAA0U,KACA,UAAAnF,SAAA,SAAAC,EAAAC,GACA0E,EAAAF,EAAAjU,EAAAwP,EAAAC,KAIA,MAAAkF,GAaAA,IAAA5E,KACA2E,EAGAA,GACAA,IA3BA,GAAAC,EAgCAzU,MAAAwT,QAAAe,EAwBA,QAAAd,GAAAX,EAAAE,EAAAM,GACA,GAAAoB,GAAAC,CAEA,iBAAAZ,EAAAjU,GACA,GAAA4U,IAAAE,EACA,SAAA3U,OAAA,+BAGA,IAAAyU,IAAAG,EAAA,CACA,aAAAd,EACA,KAAAjU,EAKA,OAAAgV,KAMA,IAHAxB,EAAAS,SACAT,EAAAxT,QAEA,CACA,GAAAiV,GAAAzB,EAAAyB,QACA,IAAAA,EAAA,CACA,GAAAC,GAAAC,EAAAF,EAAAzB,EACA,IAAA0B,EAAA,CACA,GAAAA,IAAAE,EAAA,QACA,OAAAF,IAIA,YAAA1B,EAAAS,OAGAT,EAAAhB,KAAAgB,EAAA6B,MAAA7B,EAAAxT,QAES,cAAAwT,EAAAS,OAAA,CACT,GAAAW,IAAAC,EAEA,KADAD,GAAAG,EACAvB,EAAAxT,GAGAwT,GAAA8B,kBAAA9B,EAAAxT,SAES,WAAAwT,EAAAS,QACTT,EAAAzB,OAAA,SAAAyB,EAAAxT,IAGA4U,GAAAE,CAEA,IAAAV,GAAAR,EAAAZ,EAAAE,EAAAM,EACA,eAAAY,EAAAlS,KAAA,CAOA,GAJA0S,EAAApB,EAAA1D,KACAiF,EACAQ,EAEAnB,EAAApU,MAAAoV,EACA,QAGA,QACA9U,MAAA8T,EAAApU,IACA8P,KAAA0D,EAAA1D,MAGS,UAAAsE,EAAAlS,OACT0S,EAAAG,EAGAvB,EAAAS,OAAA,QACAT,EAAAxT,IAAAoU,EAAApU,OAUA,QAAAmV,GAAAF,EAAAzB,GACA,GAAAS,GAAAgB,EAAAO,SAAAhC,EAAAS,OACA,IAAAA,IAAAhT,EAAA,CAKA,GAFAuS,EAAAyB,SAAA,KAEA,UAAAzB,EAAAS,OAAA,CACA,GAAAgB,EAAAO,SAAAC,SAGAjC,EAAAS,OAAA,SACAT,EAAAxT,IAAAiB,EACAkU,EAAAF,EAAAzB,GAEA,UAAAA,EAAAS,QAGA,MAAAmB,EAIA5B,GAAAS,OAAA,QACAT,EAAAxT,IAAA,GAAAO,WACA,kDAGA,MAAA6U,GAGA,GAAAhB,GAAAR,EAAAK,EAAAgB,EAAAO,SAAAhC,EAAAxT,IAEA,cAAAoU,EAAAlS,KAIA,MAHAsR,GAAAS,OAAA,QACAT,EAAAxT,IAAAoU,EAAApU,IACAwT,EAAAyB,SAAA,KACAG,CAGA,IAAAxF,GAAAwE,EAAApU,GAEA,OAAA4P,GAOAA,EAAAE,MAGA0D,EAAAyB,EAAAS,YAAA9F,EAAAtP,MAGAkT,EAAAvC,KAAAgE,EAAAU,QAQA,WAAAnC,EAAAS,SACAT,EAAAS,OAAA,OACAT,EAAAxT,IAAAiB,GAUAuS,EAAAyB,SAAA,KACAG,GANAxF,GA3BA4D,EAAAS,OAAA,QACAT,EAAAxT,IAAA,GAAAO,WAAA,oCACAiT,EAAAyB,SAAA,KACAG,GAoDA,QAAAQ,GAAAC,GACA,GAAAC,IAAiBC,OAAAF,EAAA,GAEjB,KAAAA,KACAC,EAAAE,SAAAH,EAAA,IAGA,IAAAA,KACAC,EAAAG,WAAAJ,EAAA,GACAC,EAAAI,SAAAL,EAAA,IAGA3V,KAAAiW,WAAA9P,KAAAyP,GAGA,QAAAM,GAAAN,GACA,GAAA1B,GAAA0B,EAAAO,cACAjC,GAAAlS,KAAA,eACAkS,GAAApU,IACA8V,EAAAO,WAAAjC,EAGA,QAAAX,GAAAN,GAIAjT,KAAAiW,aAAwBJ,OAAA,SACxB5C,EAAAa,QAAA4B,EAAA1V,MACAA,KAAAoW,OAAA,GA8BA,QAAAC,GAAAC,GACA,GAAAA,EAAA,CACA,GAAAC,GAAAD,EAAAE,EACA,IAAAD,EACA,MAAAA,GAAAvY,KAAAsY,EAGA,uBAAAA,GAAAvF,KACA,MAAAuF,EAGA,KAAA9S,MAAA8S,EAAA5W,QAAA,CACA,GAAA5B,IAAA,EAAAiT,EAAA,QAAAA,KACA,OAAAjT,EAAAwY,EAAA5W,QACA,GAAA0U,EAAApW,KAAAsY,EAAAxY,GAGA,MAFAiT,GAAA3Q,MAAAkW,EAAAxY,GACAiT,EAAAnB,MAAA,EACAmB,CAOA,OAHAA,GAAA3Q,MAAAW,EACAgQ,EAAAnB,MAAA,EAEAmB,EAGA,OAAAA,WAKA,OAAYA,KAAA+D,GAIZ,QAAAA,KACA,OAAY1U,MAAAW,EAAA6O,MAAA,GA7fZ,GAEA7O,GAFA0V,EAAAlY,OAAAS,UACAoV,EAAAqC,EAAAxX,eAEAyX,EAAA,mBAAA3N,kBACAyN,EAAAE,EAAApB,UAAA,aACAqB,EAAAD,EAAAE,eAAA,kBACAC,EAAAH,EAAAI,aAAA,gBAEAC,EAAA,iBAAAlZ,GACAmZ,EAAA5X,EAAAuT,kBACA,IAAAqE,EAQA,YAPAD,IAGAlZ,EAAAD,QAAAoZ,GASAA,GAAA5X,EAAAuT,mBAAAoE,EAAAlZ,EAAAD,WAcAoZ,EAAApG,MAoBA,IAAA+D,GAAA,iBACAU,EAAA,iBACAT,EAAA,YACAC,EAAA,YAIAK,KAYA+B,IACAA,GAAAT,GAAA,WACA,MAAAxW,MAGA,IAAAkX,GAAA3Y,OAAA4Y,eACAC,EAAAF,OAAAb,OACAe,IACAA,IAAAX,GACArC,EAAApW,KAAAoZ,EAAAZ,KAGAS,EAAAG,EAGA,IAAAC,GAAAzD,EAAA5U,UACAmU,EAAAnU,UAAAT,OAAA8U,OAAA4D,EACAtD,GAAA3U,UAAAqY,EAAAC,YAAA1D,EACAA,EAAA0D,YAAA3D,EACAC,EAAAiD,GACAlD,EAAA4D,YAAA,oBAYAP,EAAAQ,oBAAA,SAAAC,GACA,GAAAC,GAAA,mBAAAD,MAAAH,WACA,SAAAI,IACAA,IAAA/D,GAGA,uBAAA+D,EAAAH,aAAAG,EAAAtZ,QAIA4Y,EAAA3G,KAAA,SAAAoH,GAUA,MATAlZ,QAAAoZ,eACApZ,OAAAoZ,eAAAF,EAAA7D,IAEA6D,EAAA5X,UAAA+T,EACAiD,IAAAY,KACAA,EAAAZ,GAAA,sBAGAY,EAAAzY,UAAAT,OAAA8U,OAAAgE,GACAI,GAOAT,EAAAY,MAAA,SAAA9X,GACA,OAAYuU,QAAAvU,IA8EZ+T,EAAAG,EAAAhV,WACAgV,EAAAhV,UAAA2X,GAAA,WACA,MAAA3W,OAEAgX,EAAAhD,gBAKAgD,EAAAa,MAAA,SAAA/E,EAAAC,EAAAC,EAAAC,GACA,GAAA6E,GAAA,GAAA9D,GACApD,EAAAkC,EAAAC,EAAAC,EAAAC,GAGA,OAAA+D,GAAAQ,oBAAAzE,GACA+E,EACAA,EAAA/G,OAAAlB,KAAA,SAAAsE,GACA,MAAAA,GAAAvE,KAAAuE,EAAA/T,MAAA0X,EAAA/G,UAsKA8C,EAAAwD,GAEAA,EAAAR,GAAA,YAOAQ,EAAAb,GAAA,WACA,MAAAxW,OAGAqX,EAAAlV,SAAA,WACA,4BAkCA6U,EAAAe,KAAA,SAAAjZ,GACA,GAAAiZ,KACA,QAAAtI,KAAA3Q,GACAiZ,EAAA5R,KAAAsJ,EAMA,OAJAsI,GAAAC,UAIA,QAAAjH,KACA,KAAAgH,EAAArY,QAAA,CACA,GAAA+P,GAAAsI,EAAAE,KACA,IAAAxI,IAAA3Q,GAGA,MAFAiS,GAAA3Q,MAAAqP,EACAsB,EAAAnB,MAAA,EACAmB,EAQA,MADAA,GAAAnB,MAAA,EACAmB,IAsCAiG,EAAAX,SAMA9C,EAAAvU,WACAsY,YAAA/D,EAEA6C,MAAA,SAAA8B,GAcA,GAbAlY,KAAA8Q,KAAA,EACA9Q,KAAA+Q,KAAA,EAGA/Q,KAAAsS,KAAAtS,KAAAmV,MAAApU,EACAf,KAAA4P,MAAA,EACA5P,KAAA+U,SAAA,KAEA/U,KAAA+T,OAAA,OACA/T,KAAAF,IAAAiB,EAEAf,KAAAiW,WAAAnC,QAAAoC,IAEAgC,EACA,OAAA9Z,KAAA4B,MAEA,MAAA5B,EAAA+Z,OAAA,IACA/D,EAAApW,KAAAgC,KAAA5B,KACAoF,OAAApF,EAAAkD,MAAA,MACAtB,KAAA5B,GAAA2C,IAMA+Q,KAAA,WACA9R,KAAA4P,MAAA,CAEA,IAAAwI,GAAApY,KAAAiW,WAAA,GACAoC,EAAAD,EAAAjC,UACA,cAAAkC,EAAArW,KACA,KAAAqW,GAAAvY,GAGA,OAAAE,MAAAsY,MAGAlD,kBAAA,SAAAmD,GAMA,QAAAC,GAAAC,EAAAC,GAYA,MAXAxE,GAAAlS,KAAA,QACAkS,EAAApU,IAAAyY,EACAjF,EAAAvC,KAAA0H,EAEAC,IAGApF,EAAAS,OAAA,OACAT,EAAAxT,IAAAiB,KAGA2X,EAjBA,GAAA1Y,KAAA4P,KACA,KAAA2I,EAmBA,QAhBAjF,GAAAtT,KAgBAlC,EAAAkC,KAAAiW,WAAAvW,OAAA,EAA8C5B,GAAA,IAAQA,EAAA,CACtD,GAAA8X,GAAA5V,KAAAiW,WAAAnY,GACAoW,EAAA0B,EAAAO,UAEA,aAAAP,EAAAC,OAIA,MAAA2C,GAAA,MAGA,IAAA5C,EAAAC,QAAA7V,KAAA8Q,KAAA,CACA,GAAA6H,GAAAvE,EAAApW,KAAA4X,EAAA,YACAgD,EAAAxE,EAAApW,KAAA4X,EAAA,aAEA,IAAA+C,GAAAC,EAAA,CACA,GAAA5Y,KAAA8Q,KAAA8E,EAAAE,SACA,MAAA0C,GAAA5C,EAAAE,UAAA,EACa,IAAA9V,KAAA8Q,KAAA8E,EAAAG,WACb,MAAAyC,GAAA5C,EAAAG,gBAGW,IAAA4C,GACX,GAAA3Y,KAAA8Q,KAAA8E,EAAAE,SACA,MAAA0C,GAAA5C,EAAAE,UAAA,OAGW,KAAA8C,EAMX,SAAA3Y,OAAA,yCALA,IAAAD,KAAA8Q,KAAA8E,EAAAG,WACA,MAAAyC,GAAA5C,EAAAG,gBAUAlE,OAAA,SAAA7P,EAAAlC,GACA,OAAAhC,GAAAkC,KAAAiW,WAAAvW,OAAA,EAA8C5B,GAAA,IAAQA,EAAA,CACtD,GAAA8X,GAAA5V,KAAAiW,WAAAnY,EACA,IAAA8X,EAAAC,QAAA7V,KAAA8Q,MACAsD,EAAApW,KAAA4X,EAAA,eACA5V,KAAA8Q,KAAA8E,EAAAG,WAAA,CACA,GAAA8C,GAAAjD,CACA,QAIAiD,IACA,UAAA7W,GACA,aAAAA,IACA6W,EAAAhD,QAAA/V,GACAA,GAAA+Y,EAAA9C,aAGA8C,EAAA,KAGA,IAAA3E,GAAA2E,IAAA1C,aAIA,OAHAjC,GAAAlS,OACAkS,EAAApU,MAEA+Y,GACA7Y,KAAA+T,OAAA,OACA/T,KAAA+Q,KAAA8H,EAAA9C,WACAb,GAGAlV,KAAA8Y,SAAA5E,IAGA4E,SAAA,SAAA5E,EAAA8B,GACA,aAAA9B,EAAAlS,KACA,KAAAkS,GAAApU,GAcA,OAXA,UAAAoU,EAAAlS,MACA,aAAAkS,EAAAlS,KACAhC,KAAA+Q,KAAAmD,EAAApU,IACO,WAAAoU,EAAAlS,MACPhC,KAAAsY,KAAAtY,KAAAF,IAAAoU,EAAApU,IACAE,KAAA+T,OAAA,SACA/T,KAAA+Q,KAAA,OACO,WAAAmD,EAAAlS,MAAAgU,IACPhW,KAAA+Q,KAAAiF,GAGAd,GAGA6D,OAAA,SAAAhD,GACA,OAAAjY,GAAAkC,KAAAiW,WAAAvW,OAAA,EAA8C5B,GAAA,IAAQA,EAAA,CACtD,GAAA8X,GAAA5V,KAAAiW,WAAAnY,EACA,IAAA8X,EAAAG,eAGA,MAFA/V,MAAA8Y,SAAAlD,EAAAO,WAAAP,EAAAI,UACAE,EAAAN,GACAV,IAKA8D,MAAA,SAAAnD,GACA,OAAA/X,GAAAkC,KAAAiW,WAAAvW,OAAA,EAA8C5B,GAAA,IAAQA,EAAA,CACtD,GAAA8X,GAAA5V,KAAAiW,WAAAnY,EACA,IAAA8X,EAAAC,WAAA,CACA,GAAA3B,GAAA0B,EAAAO,UACA,cAAAjC,EAAAlS,KAAA,CACA,GAAAiX,GAAA/E,EAAApU,GACAoW,GAAAN,GAEA,MAAAqD,IAMA,SAAAhZ,OAAA,0BAGAiZ,cAAA,SAAA5C,EAAAd,EAAAC,GAaA,MAZAzV,MAAA+U,UACAO,SAAAe,EAAAC,GACAd,aACAC,WAGA,SAAAzV,KAAA+T,SAGA/T,KAAAF,IAAAiB,GAGAmU,KAOA,WAAe,MAAAlV,UAAcyS,SAAA,mBPm+DvB,SAAU5U,EAAQoR,EAAqBxR,GAE7C,YAMA,SAASyR,GAAkBC,GAAI,MAAO,YAAW,GAAIC,GAAID,EAAG3I,MAAMxG,KAAK6J,UAAW,OAAO,IAAIwF,SAAQ,SAASC,EAAQC,GAAQ,QAASC,GAAKC,EAAI3P,GAAK,IAAI,GAAI4P,GAAKN,EAAIK,GAAK3P,GAASM,EAAMsP,EAAKtP,MAAO,MAAMuP,GAAqB,WAAdJ,GAAOI,GAAe,IAAGD,EAAKE,KAA2B,MAAOP,SAAQC,QAAQlP,GAAOyP,KAAK,SAASzP,GAAOoP,EAAK,OAAOpP,IAAS,SAAS0P,GAAKN,EAAK,QAAQM,IAAxHR,GAAQlP,GAA0H,MAAOoP,GAAK,WAAc,QAAS2J,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIhZ,WAAU,qCQ7rF7f,QAASiZ,GAAWC,GAGhB,IAAK,GAFDC,GAAM,GACNC,EAAM,KACD3b,EAAI,EAAGA,EAAIyb,EAAM7Z,OAAQ5B,IAE9B2b,EAAMF,EAAMzb,GAAGqE,SAAS,IACN,IAAfsX,EAAI/Z,SACH+Z,EAAM,IAAIA,GACdD,GAAOC,EACPA,EAAM,EAEV,OAAOD,GAAItL,cR6qFM,GAAI6B,GAA0DtS,EAAoB,GAC9EuS,EAAkEvS,EAAoBmB,EAAEmR,GACxF2J,EAA6Cjc,EAAoB,GACjEkc,EAA+Clc,EAAoB,IACnEmc,EAAuDnc,EAAoBmB,EAAE+a,GQ9qFhG3I,ER+qFquB,QAASA,KAAgB,GAAId,GAAMlQ,IAAKmZ,GAAgBnZ,KAAKgR,GAAehR,KQ9qFnzBiR,WR8qFm0B/B,EAA+Bc,EAAgE5G,EAAEiH,KQ9qFv5B,QAAAC,KAAA,MAAAN,GAAA5G,EAAAwH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aAAAF,GAAAE,KAAA,EACH8I,KADG,wBAAAhJ,GAAAiB,SAAAxB,EAAAJ,MR8qFguClQ,KQ1qF7uCmR,eAAiB,WACb,GAAIT,KAKJ,OAJAA,GAAOoJ,KAAOR,EAAUS,IAAKC,YAAY,KACzCtJ,EAAOuJ,WAAaJ,IAA6BnJ,EAAOoJ,KAAM,GAC9DpJ,EAAOwJ,WAAaL,IAA6BnJ,EAAOuJ,YACxDvJ,EAAOU,eAAiByI,IAA2BnJ,EAAOwJ,YACnDxJ,GAIAM,QRoqFT,SAAUnT,EAAQoR,EAAqBxR,GAE7C,cStsFA,SAAA0c,EAAA7a,GAK0C,QAAA8a,KAA2B,SAAAna,OAAA,0EAAi5/K,QAAAoa,KAAgB,UAAAhL,SAAA,SAAAiL,EAAAC,GAAiC,IAAIC,IAAA3K,KAAA,SAAA0K,GAA8BE,GAAArB,EAAAmB,GAAAG,MAAA,yDAAAC,EAAAvB,EAAAsB,MAAA,yDAAAE,EAAAxB,EAAAsB,MAAA,6DAAAG,EAAAzB,EAAAsB,MAAA,oDAAAI,EAAA1B,EAAAsB,MAAA,iDAAAK,EAAA3B,EAAAsB,MAAA,8DAAAM,EAAA5B,EAAAsB,MAAA,oEAAAO,EAAA7B,EAAAsB,MAAA,6DAAAQ,EAAA9B,EAAAsB,MAAA,oEAAAS,EAAA/B,EAAAsB,MAAA,sDAAAU,EAAAhC,EAAAsB,MAAA,iEAAAW,EAAAjC,EAAAsB,MAAA,wEAAAJ,MAAolC,MAAAA,GAASC,EAAAD,MAAQ,QAAAgB,KAAmB,cAAAlC,EAAuB,QAAAmC,KAA+B,IAAAD,IAAA,SAAArb,OAAA,mCAAiE,QAAAub,GAAAlB,GAAwB,sBAAAA,GAAyK,QAAAmB,GAAAnB,GAAsB,MAAAkB,GAAAlB,IAAA,kBAAuCoB,KAAApB,GAAoD,QAAAqB,GAAArB,GAAqB,MAAAmB,GAAAnB,GAA+5B,QAAAsB,GAAAtB,EAAAC,GAA8B,GAAAgB,KAAAE,EAAAnB,GAAA,SAAAra,OAAA,oBAA4E,KAAAwE,OAAAoX,UAAAtB,MAAA,WAAAta,OAAA,qBAAmE,OAAA2a,GAAAN,EAAAC,GAA6B,QAAAuB,GAAAxB,GAA4B,GAAAiB,KAAAI,EAAArB,GAAA,SAAAra,OAAA,0BAAiF,OAAA4a,GAAAP,GAA2B,QAAAyB,GAAAzB,GAA0B,GAAAiB,KAAAI,EAAArB,GAAA,SAAAra,OAAA,0BAAiF,OAAA6a,GAAAR,GAL37lL7c,EAAAU,EAAA8Q,EAAA,qBAAAoL,KAAA5c,EAAAU,EAAA8Q,EAAA,qBAAA2M,KAAAne,EAAAU,EAAA8Q,EAAA,qBAAA6M,KAAAre,EAAAU,EAAA8Q,EAAA,qBAAA8M,IAAA,IAAAC,GAAAve,EAAA,IAAAwe,EAAAxe,EAAAmB,EAAAod,GAAAE,EAAAze,EAAA,IAAA0e,EAAA1e,EAAAmB,EAAAsd,GAK+O1B,EAAhF,SAAAF,EAAAC,GAAmC,MAAAD,GAAAC,GAAY3c,YAAW2c,EAAA3c,SAAA2c,EAAA3c,SAAsB,SAAA0c,EAAAC,GAAkDD,EAAA1c,QAAA,SAAA0c,GAA89E,QAAA8B,GAAA9B,GAAc,GAAAC,EAAM,OAAAA,OAAA,IAAA9U,KAAA4W,KAAA/B,EAAAC,KAAmD,QAAAnR,GAAAkR,EAAAC,GAAgBD,GAAAgC,EAAA,qBAAA/B,GAA6B,QAAAgC,GAAAjC,GAAc,GAAA9H,GAAA+H,EAAA,IAAAD,EAAe,OAAAlR,GAAAoJ,EAAA,gCAAA8H,EAAA,8BAAA9H,EAA46B,QAAAjE,KAAagM,EAAAiC,MAAAC,EAAA,GAAAC,WAAAC,GAAApC,EAAAqC,OAAAC,EAAA,GAAAC,YAAAH,GAAApC,EAAAwC,OAAAzT,EAAA,GAAA0T,YAAAL,GAAApC,EAAA0C,OAAAC,EAAA,GAAAtd,YAAA+c,GAAApC,EAAA4C,QAAA,GAAAC,aAAAT,GAAApC,EAAA8C,QAAA,GAAAC,aAAAX,GAAApC,EAAAgD,QAAA,GAAAC,cAAAb,GAAApC,EAAAkD,QAAA,GAAAC,cAAAf,GAA0xB,QAAAgB,GAAArD,GAAc,KAAK,EAAAA,EAAA5a,QAAW,CAAE,GAAA8S,GAAA8H,EAAAsD,OAAgB,sBAAApL,WAA4B,CAAK,GAAAqL,GAAArL,EAAAmK,CAAU,iBAAAkB,OAAA,KAAArL,EAAApJ,EAAAmR,EAAAuD,UAAAD,GAAAtD,EAAAwD,WAAAF,EAAArL,EAAApJ,GAAAyU,MAAA,KAAArL,EAAApJ,EAAA,KAAAoJ,EAAApJ,KAAgI,QAAA4U,KAAa,GAAA1D,GAAAC,EAAA0D,OAAAL,OAAuBM,GAAAC,QAAA7D,GAA2H,QAAApb,GAAAob,GAAc,MAAAnW,QAAAnF,UAAAof,WAAA9D,EAAA8D,WAAAC,GAAA,IAAA/D,EAAA5W,QAAA2a,GAAkjqK,QAAAC,GAAAhE,GAAc,OAAAC,MAAA/H,EAAA,EAAiBA,EAAA8H,EAAA5a,OAAW8S,IAAA,CAAK,GAAAqL,GAAAvD,EAAA9H,EAAW,KAAAqL,IAAAU,GAAAnV,GAAA,oBAAAyU,EAAA,KAAA1Z,OAAAoC,aAAAsX,GAAA,gBAAArL,EAAA,sBAAAqL,GAAA,KAAAtD,EAAApU,KAAAhC,OAAAoC,aAAAsX,IAA+I,MAAAtD,GAAAtQ,KAAA,IAA0pB,QAAAuU,GAAAlE,GAAc,GAAApb,EAAAob,GAAA,CAAS,GAAAA,IAAAhZ,MAAA+c,EAAA3e,QAAA,iBAAApB,MAAA,CAA+C,IAAI,GAAAic,GAAAjb,EAAAa,KAAAma,EAAA,UAA8B,MAAA9H,GAAS+H,EAAA,GAAAjb,GAAAgb,EAAA,UAAyB,GAAA9H,GAAA,GAAA5S,YAAA2a,EAAAzY,OAAAyY,EAAA9Y,WAAA8Y,EAAApZ,gBAAyD,KAAS,GAAA0c,GAAAza,GAAAkX,GAAAmE,EAAA,GAAA7e,YAAAie,EAAAne,OAAsC,KAAA6a,EAAA,EAAQA,EAAAsD,EAAAne,SAAW6a,EAAAkE,EAAAlE,GAAAsD,EAAA3V,WAAAqS,EAAyB/H,GAAAiM,EAAI,MAAAnE,GAAS,KAAAra,OAAA,6CAAyD,MAAAuS,IAA2pD,QAAAkM,GAAApE,GAActa,KAAA5B,KAAA,aAAA4B,KAAA2e,QAAA,gCAAArE,EAAA,IAAAta,KAAA4e,OAAAtE,EAAwF,QAAAuE,KAAa,QAAAvE,KAAa,IAAAC,EAAAuE,YAAAvE,EAAAuE,WAAA,GAAAC,GAAA,CAAsC,GAAAhhB,OAAA,EAAA4f,EAAAqB,IAAArB,EAAAsB,GAAA1E,EAAA2E,sBAAA3E,EAAA2E,uBAAA3E,EAAA4E,QAAA,sBAAA5E,GAAA4E,UAAA5E,EAAA4E,SAAA5E,EAAA4E,UAA4I5E,EAAA4E,QAAAzf,QAAiB,CAAE,GAAA4a,GAAAC,EAAA4E,QAAAvB,OAAwBzf,GAAAggB,QAAA7D,GAAaqD,EAAAxf,IAAM,OAAAkL,GAAA,CAAW,GAAAkR,EAAA0D,OAAA,sBAAA1D,GAAA0D,SAAA1D,EAAA0D,QAAA1D,EAAA0D,SAAmE1D,EAAA0D,OAAAve,QAAgBse,GAAKL,GAAAO,GAAA,EAAA7U,GAAAkR,EAAAuE,YAAAvE,EAAA6E,WAAA7E,EAAA6E,UAAA,cAAAC,WAAA,WAAqFA,WAAA,WAAsB9E,EAAA6E,UAAA,KAAgB,GAAA9E,KAAQ,IAAAA,MAAW,QAAAgC,GAAAhC,GAAc,KAAAC,GAAA+E,SAAA/E,EAAA+E,QAAAhF,OAAA,KAAAA,GAAAC,EAAAgF,MAAAjF,GAAAC,EAAAiF,SAAAlF,KAAAmF,KAAAC,UAAApF,MAAA,GAAAyE,GAAA,WAAAzE,EAAA,+CAAvr6K,GAAAC,EAAMD,SAAOC,UAAA,KAAAD,OAAwB,IAAA9H,GAAAqL,IAAW,KAAArL,IAAA+H,KAAAtb,eAAAuT,KAAAqL,EAAArL,GAAA+H,EAAA/H,GAA4C+H,GAAA1Q,aAAA0Q,EAAAoF,YAAA,iBAAApF,EAAAqF,KAAA,SAAAtF,EAAAC,GAAmE,KAAAA,IAAQA,EAAA0D,UAAA1D,EAAA4E,UAA0B,IAAAV,GAAAoB,EAAAC,GAAA,EAAAhiB,GAAA,EAAAQ,GAAA,EAAAyhB,GAAA,CAA4B,IAAAxF,EAAAyF,YAAA,WAAAzF,EAAAyF,YAAAF,GAAA,MAA+C,eAAAvF,EAAAyF,YAAAliB,GAAA,MAAsC,aAAAyc,EAAAyF,YAAA1hB,GAAA,MAAoC,CAAK,aAAAic,EAAAyF,YAAA,KAAA/f,OAAA,mFAA2H8f,IAAA,MAAKD,GAAA,gBAAAG,QAAAniB,EAAA,kBAAAoiB,eAAA5hB,EAAA,gBAAA6b,IAAA,kBAAAC,KAAA0F,IAAAhiB,EAAAiiB,GAAAD,IAAAxhB,IAAAR,CAAsJQ,IAAAic,EAAA1W,KAAA,SAAAyW,EAAAC,GAAwB,GAAA/H,GAAAgM,EAAAlE,EAAW,OAAA9H,KAAAiM,MAAiBxC,EAAA7S,GAAEyW,MAAQ1D,EAAA/S,GAAIkR,EAAAuF,EAAAM,UAAA7F,GAAA9H,EAAAiM,EAAA2B,aAAA9F,IAAAC,EAAA/H,IAAArQ,YAAyDoY,EAAA8F,WAAA,SAAA/F,GAA0B,OAAAA,EAAAC,EAAA1W,KAAAyW,GAAA,IAAAxY,SAAAwY,EAAA,GAAA1a,YAAA0a,IAAAlR,EAAAkR,EAAAxY,QAAAwY,GAAmE,EAAAH,EAAAmG,KAAA5gB,SAAA6a,EAAAoF,YAAAxF,EAAAmG,KAAA,GAAA1Y,QAAA,YAAA2S,EAAA1Q,UAAAsQ,EAAAmG,KAAAhf,MAAA,GAAA6Y,EAAAoG,GAAA,6BAAAjG,GAAwJ,KAAAA,YAAAoE,IAAA,KAAApE,KAA6BH,EAAAoG,GAAA,gCAA6CpG,EAAAqG,KAAA,KAAgBjG,EAAAxQ,QAAA,WAAuB,qCAAmCgW,GAAA,mBAAAlc,QAAA0W,EAAA1W,KAAA,SAAAyW,GAAmD,GAAAC,GAAAiE,EAAAlE,EAAW,OAAAC,GAAA+D,EAAA/D,GAAA1W,KAAAyW,KAAsBC,EAAA8F,WAAA,SAAA/F,GAA2B,GAAAC,EAAM,QAAAA,EAAAiE,EAAAlE,IAAAC,EAAA,kBAAAkG,YAAA,GAAA7gB,YAAA6gB,WAAAnG,KAAAlR,EAAA,iBAAAmR,EAAA1W,KAAAyW,EAAA,YAAAC,IAAyH,mBAAAmG,YAAAnG,EAAA1Q,UAAA6W,eAAA,KAAA7W,YAAA0Q,EAAA1Q,qBAAA,kBAAA+V,QAAArF,EAAAqF,KAAA,SAAAtF,GAAgJsF,KAAAtF,OAAQwF,GAAAhiB,KAAAyc,EAAA1W,KAAA,SAAAyW,GAA+B,IAAI,GAAAC,GAAA,GAAAoG,eAAyB,OAAApG,GAAAqG,KAAA,MAAAtG,GAAA,GAAAC,EAAAsG,KAAA,MAAAtG,EAAAuG,aAAsD,MAAAvG,GAAS,GAAAD,EAAAkE,EAAAlE,GAAA,MAAAgE,GAAAhE,EAAsB,MAAAC,KAASzc,IAAAyc,EAAA8F,WAAA,SAAA/F,GAA8B,IAAI,GAAAC,GAAA,GAAAoG,eAAyB,OAAApG,GAAAqG,KAAA,MAAAtG,GAAA,GAAAC,EAAAwG,aAAA,cAAAxG,EAAAsG,KAAA,SAAAjhB,YAAA2a,EAAAyG,UAA+F,MAAAzG,GAAS,GAAAD,EAAAkE,EAAAlE,GAAA,MAAAA,EAAmB,MAAAC,MAASA,EAAA0G,UAAA,SAAA3G,EAAAC,EAAA/H,GAA8B,GAAAqL,GAAA,GAAA8C,eAAyB9C,GAAA+C,KAAA,MAAAtG,GAAA,GAAAuD,EAAAkD,aAAA,cAAAlD,EAAAqD,OAAA,WAAoE,QAAArD,EAAAe,QAAA,GAAAf,EAAAe,QAAAf,EAAAmD,SAAAzG,EAAAsD,EAAAmD,cAAwD,CAAK,GAAAvC,GAAAD,EAAAlE,EAAWmE,GAAAlE,EAAAkE,EAAA3c,QAAA0Q,MAAmBqL,EAAAsD,QAAA3O,EAAAqL,EAAAgD,KAAA,WAA0B,KAAAhX,YAAA0Q,EAAA1Q,qBAAA0Q,EAAA6G,eAAA,SAAA9G,GAA0E+G,SAAAC,MAAAhH,GAAmB,KAAA9H,IAAA+H,GAAAgF,MAAA,mBAAApR,iBAAAC,IAAAmT,KAAApT,SAAA,mBAAAoR,aAAA,KAAAhF,EAAAiF,SAAA,mBAAAA,mBAAA,mBAAArR,kBAAAqT,KAAAD,KAAApT,UAAAoM,EAAAgF,MAAAhF,EAAAgF,MAAAhF,EAAAgF,MAAAhF,EAAAiF,SAAAjF,EAAAiF,SAAA3B,IAAA5e,eAAAuT,KAAA+H,EAAA/H,GAAAqL,EAAArL,GAA6VqL,OAAA,EAAS,IAAq6BlB,GAAAF,EAAAS,EAAAL,EAAAvT,EAAAnK,EAAAP,EAAAgK,EAAA6Y,EAAAjT,EAAr6BuQ,EAAA,EAA+J2C,GAAOC,UAAA,WAAqBC,MAAIC,aAAA,WAAyBC,MAAIC,SAAA,SAAAzH,GAAsB,GAAAC,GAAAjW,GAAAgW,EAAA5a,OAAkB,OAAA+c,GAAAlP,IAAA+M,EAAAC,MAAoByH,UAAA,SAAA1H,GAAuB,GAAAC,GAAA,CAAQ,UAAAD,GAAA,IAAAA,EAAA,CAAmB,GAAA9H,GAAA,GAAA8H,EAAA5a,QAAA,GAAAme,EAAAtD,EAAAjW,GAAAkO,GAAAiM,EAAAvB,CAAmC,MAAA1K,EAAA,CAAQA,EAAAqL,EAAArL,EAAA,CAAQ,QAAAqN,GAAA,EAAYA,EAAAvF,EAAA5a,SAAWmgB,EAAA,CAAK,GAAAC,GAAAxF,EAAApS,WAAA2X,EAAsB,WAAAC,GAAA,OAAAA,MAAA,aAAAA,IAAA,SAAAxF,EAAApS,aAAA2X,IAAA,KAAAC,EAAA,CAA+E,GAAAjC,GAAArL,EAAA,KAAciM,GAAAZ,KAAAiC,MAAS,CAAK,SAAAA,EAAA,CAAY,GAAAjC,EAAA,GAAArL,EAAA,KAAgBiM,GAAAZ,KAAA,IAAAiC,GAAA,MAAgB,CAAK,UAAAA,EAAA,CAAa,GAAAjC,EAAA,GAAArL,EAAA,KAAgBiM,GAAAZ,KAAA,IAAAiC,GAAA,OAAiB,CAAK,YAAAA,EAAA,CAAe,GAAAjC,EAAA,GAAArL,EAAA,KAAgBiM,GAAAZ,KAAA,IAAAiC,GAAA,OAAiB,CAAK,aAAAA,EAAA,CAAgB,GAAAjC,EAAA,GAAArL,EAAA,KAAgBiM,GAAAZ,KAAA,IAAAiC,GAAA,OAAiB,CAAK,GAAAjC,EAAA,GAAArL,EAAA,KAAgBiM,GAAAZ,KAAA,IAAAiC,GAAA,GAAArB,EAAAZ,KAAA,IAAAiC,GAAA,MAAqCrB,EAAAZ,KAAA,IAAAiC,GAAA,MAAoBrB,EAAAZ,KAAA,IAAAiC,GAAA,MAAoBrB,EAAAZ,KAAA,IAAAiC,GAAA,KAAmBrB,EAAAZ,KAAA,OAAAiC,GAAiBrB,EAAAZ,GAAA,GAAQ,MAAAtD,KAAUrc,GAAI+C,OAAAygB,EAAAM,UAAAxgB,MAAAkgB,EAAAK,UAAqCE,EAAA,mBAAAC,aAAA,GAAAA,aAAA,cAA8U,oBAAAA,cAAA,GAAAA,aAAA,YAAA/iB,EAAAyJ,EAAA,EAAAhK,GAAA,CAAwE,IAAAujB,GAAA5H,EAAA6H,aAAA,QAAAC,EAAA9H,EAAA+H,cAAA,QAAwD,IAAAD,EAAAF,GAAA5H,EAAAiF,SAAA,uDAAA6C,EAAA,kBAAAF,EAAA,KAAA5H,EAAAzY,OAAA6a,EAAApC,EAAAzY,QAAA,gBAAAygB,cAAA,kBAAAA,aAAAC,QAAAjI,EAAAkI,WAAA,GAAAF,aAAAC,QAAoOE,QAAAL,EAAA,MAAAM,QAAAN,EAAA,QAAgC1F,EAAApC,EAAAkI,WAAA3gB,QAAA6a,EAAA,GAAArc,aAAA+hB,GAAA9H,EAAAzY,OAAA6a,GAAApO,IAAAjF,EAAA,cAAAuT,EAAA,eAAAK,EAAA,SAAAA,EAAA,iEAAuW,IAAAgB,MAAAc,KAAAC,KAAA2D,KAAAzkB,KAAAJ,GAAA,EAAmFsL,EAAA,EAAAwZ,EAAA,KAAA5kB,EAAA,IAAsBsc,GAAAuI,mBAAoBvI,EAAAwI,kBAAsB,IAAA1E,GAAA,yCAAgI,WAAY,QAAA/D,KAAa,IAAI,GAAAC,EAAAyI,WAAA,UAAApjB,YAAA2a,EAAAyI,WAAoD,IAAA1I,GAAAkE,EAAAqB,EAAW,IAAAvF,EAAA,MAAAA,EAAc,IAAAC,EAAA8F,WAAA,MAAA9F,GAAA8F,WAAAR,EAAuC,4JAA2J,MAAAvF,GAASgC,EAAAhC,IAAM,QAAA9H,KAAa,MAAA+H,GAAAyI,aAAAlD,IAAAhiB,GAAA,kBAAAmlB,OAAA,GAAA5T,SAAA,SAAAkL,GAA8EA,EAAAD,OAAO2I,MAAApD,GAAWqD,YAAA,gBAA0BrT,KAAA,SAAAyK,GAAmB,IAAAA,EAAA6I,GAAA,4CAAAtD,EAAA,GAA2D,OAAAvF,GAAA8I,gBAAuBpK,MAAA,WAAmB,MAAAsB,OAAa,QAAAuD,GAAAvD,GAAc,QAAAuD,GAAAvD,GAAc,IAAA8B,EAAA9B,EAAA1c,SAAAylB,OAAA,CAAyB/I,EAAA8B,EAAAiH,MAAW,IAAA7Q,GAAA+H,EAAAzY,MAAewY,GAAAnZ,WAAAqR,EAAArR,YAAAoZ,EAAAiF,SAAA,8GAAAhN,EAAA,GAAAkK,WAAAlK,GAAA,GAAAkK,WAAApC,GAAA/M,IAAAiF,GAAA+H,EAAAzY,OAAA6a,EAAArC,EAAA/L,IAAgNgM,EAAA+I,IAAAlH,EAAA7B,EAAAgJ,WAAA,EAAAla,IAAAkR,EAAAiJ,wBAAAjJ,EAAAiJ,uBAAAna,GAAA,GAAAA,IAAA,OAAAwZ,IAAAY,cAAAZ,KAAA,MAAA5kB,IAAAqc,EAAArc,IAAA,KAAAqc,MAAiJ,QAAAmE,GAAAnE,GAAcuD,EAAAvD,EAAAlB,UAAc,QAAA0G,GAAAxF,GAAc9H,IAAA3C,KAAA,SAAAyK,GAAqB,MAAAiI,aAAAmB,YAAApJ,EAAAyF,KAAoClQ,KAAAyK,GAAAtB,MAAA,SAAAsB,GAA4BC,EAAAiF,SAAA,0CAAAlF,GAAAgC,EAAAhC,KAA+D,mBAAAiI,aAAA,MAAAhI,GAAAiF,SAAA,qCAAwF,MAAAjF,EAAAkI,qBAAAF,aAAAC,QAAA,MAAAjI,GAAAiF,SAAA,kCAAsG,IAAAlF,EAAA+I,OAAA9I,EAAAkI,WAAA1C,EAAA3gB,QAAmCukB,QAAA3b,SAAA,KAAqB+X,EAAA,eAAAta,KAAAsa,EAAA6D,IAAAtJ,EAAAjR,IAAAkR,EAAAiJ,wBAAAjJ,EAAAiJ,uBAAAna,GAAAkR,EAAAsJ,gBAAA,IAA+G,MAAAtJ,GAAAsJ,gBAAA9D,EAAAlC,GAA8B,MAAAvD,GAAS,MAAAC,GAAAiF,SAAA,sDAAAlF,IAAA,EAA8E,MAAAC,GAAAyI,YAAA,kBAAAT,aAAAuB,sBAAA5kB,EAAA2gB,IAAA,kBAAAoD,OAAAnD,EAAArB,GAAA8D,YAAAuB,qBAAAb,MAAApD,GAAwJqD,YAAA,gBAA0BnD,GAAAlQ,KAAA4O,GAAAzF,MAAA,SAAAsB,GAA+BC,EAAAiF,SAAA,kCAAAlF,GAAAC,EAAAiF,SAAA,6CAAAM,EAAArB,QAAkH,GAAAA,GAAA,GAAAoB,EAAA,gxjKAA0CvhB,EAAA,EAAsvjK,mBAAAic,GAAAwJ,aAAA7kB,EAAAuf,OAAAlE,EAAAwJ,WAAAtF,IAAAvf,EAAA2gB,OAAAtF,EAAAwJ,WAAAlE,IAAA3gB,EAAAZ,OAAAic,EAAAwJ,WAAAzlB,IAAiH,IAAAyhB,IAAO3gB,OAAA,KAAAwkB,IAAA,KAAAI,UAA+BC,UAAA,SAAA3J,EAAAC,GAAwB,MAAAD,GAAAC,GAAW2J,SAAA,cAAuBC,OAAA5J,GAAU6B,EAAA,IAAQ7B,GAAA6J,WAAA7J,EAAA+I,GAAmB,IAAAvE,GAAAxE,EAAA8J,aAAsB9J,GAAA8J,cAAA,SAAA/J,GAA4B,aAAAlR,EAAA,GAAAoJ,GAAAuM,EAAAzE,OAA0BA,GAAA,CAAQ,GAAAuD,GAAAtD,EAAAgJ,UAAA,cAAiC,MAAAjJ,EAAAuD,IAAAvD,GAAAuD,EAAAvD,EAAAuD,KAAAtD,EAAAzY,OAAAX,WAAAoZ,EAAAgJ,UAAA,IAA2D/Q,GAAA,IAAA+H,EAAAkI,WAAA6B,MAAAhK,EAAAuD,GAAA,OAAAtD,EAAAzY,OAAAyY,EAAAkI,WAAA3gB,OAAA,IAAwE,MAAAwY,GAAQ,MAAAA,GAAS9H,EAAA,IAAO,MAAA8H,GAAQ9H,MAAA,GAAS,MAAAA,GAAU,IAAApJ,GAAA,EAASmR,GAAA+I,IAAA,SAAAhJ,EAAA9H,GAAoB,IAAAA,EAAA+R,MAAA,KAAa,MAAAjK,EAAAC,EAAAiK,iBAAAlK,EAAA,KAAuC,IAAAmE,GAAAlE,EAAAkK,gBAAyBjS,GAAA+R,MAAA,gBAAAhC,cAAA,kBAAAA,aAAAmC,UAAA,KAAAjG,EAAA,GAAA8D,aAAAmC,OAA6GhC,QAAApI,EAAAqI,QAAAlE,EAAAkG,QAAA,YAAsC,GAAApC,aAAAmC,OAAyBhC,QAAApI,EAAAqK,QAAA,YAA4Bja,MAAA4P,GAAAC,EAAAqK,UAAApS,EAAA+R,MAA+B,MAAA/R,GAAAqS,aAAArS,EAAAqS,WAAAtK,EAAAuK,aAAAtS,EAAAuS,YAAAvS,EAAAuS,UAAA,IAAAvS,EAAAqL,EAAArL,KAAA8J,EAAA,8KAAA9J,MAA4QrT,EAAA,MAAA6f,EAAA7Y,OAAAoU,EAAAuK,YAAA,KAAAvK,EAAAyK,YAAA,MAAA7lB,GAAA,GAAAiK,GAAAxK,GAAA4P,EAAArP,EAAAsiB,EAAArF,GAAAxT,EAAAwT,EAAAjd,IAAA,WAAAgjB,GAAA7Y,EAAAkF,GAAA,GAAAiT,EAAA7iB,GAAA,CAAqH,IAAA2f,IAAA,EAAoOnb,GAAA,kBAAA6hB,WAAA,SAAA3K,GAA+C,GAAAC,GAAA,GAAA/H,EAAA,CAAa8H,KAAA1S,QAAA,wBAAqC,IAAG,GAAAiW,GAAA,oEAAAna,QAAA4W,EAAAnC,OAAA3F,MAAAiM,EAAA,oEAAA/a,QAAA4W,EAAAnC,OAAA3F,MAAAqN,EAAA,oEAAAnc,QAAA4W,EAAAnC,OAAA3F,MAAAsN,EAAA,oEAAApc,QAAA4W,EAAAnC,OAAA3F,KAAwXqL,MAAA,EAAAY,GAAA,EAAAA,GAAA,GAAAA,IAAA,EAAAoB,GAAA,CAA6B,IAAA/hB,IAAA,EAAA+hB,IAAA,EAAAC,CAAiBvF,IAAApW,OAAAoC,aAAAsX,GAAA,KAAAgC,IAAAtF,GAAApW,OAAAoC,aAAAkY,IAAA,KAAAqB,IAAAvF,GAAApW,OAAAoC,aAAAzI,UAAkG0U,EAAA8H,EAAA5a,OAAkB,OAAA6a,GAAwXA,GAAAiK,cAAA,EAAAjK,EAAAkK,iBAAA,EAAAlK,EAAAnX,KAA6CmX,EAAArc,GAAMgnB,MAAA5I,EAAA6I,uBAAA,SAAA7K,EAAAC,EAAA/H,GAA+C,MAAA0K,GAAA3P,IAAA2P,EAAAvU,SAAA4R,IAAA/H,GAAA8H,MAAoC8K,SAAAxc,EAAa,IAAAyc,IAAA9K,EAAA+I,IAAA/I,EAAAnX,EAAAmX,EAAArc,EAAAye,EAAuBpC,GAAA+I,IAAA+B,GAAA9K,EAAA+K,kDAAA,WAAuE,MAAA/K,GAAA+I,IAAAgC,kDAAA9e,MAAA,KAAAqD,YAAqF0Q,EAAAgL,2BAAA,WAAyC,MAAAhL,GAAA+I,IAAAiC,2BAAA/e,MAAA,KAAAqD,YAA8D0Q,EAAAiL,8BAAA,WAA4C,MAAAjL,GAAA+I,IAAAkC,8BAAAhf,MAAA,KAAAqD,YAAiE0Q,EAAAkL,8BAAA,WAA4C,MAAAlL,GAAA+I,IAAAmC,8BAAAjf,MAAA,KAAAqD,YAAiE0Q,EAAAmL,8BAAA,WAA4C,MAAAnL,GAAA+I,IAAAoC,8BAAAlf,MAAA,KAAAqD,YAAiE0Q,EAAAoL,4BAAA,WAA0C,MAAApL,GAAA+I,IAAAqC,4BAAAnf,MAAA,KAAAqD,YAA+D0Q,EAAAqL,+BAAA,WAA6C,MAAArL,GAAA+I,IAAAsC,+BAAApf,MAAA,KAAAqD,YAAkE0Q,EAAAsL,4BAAA,WAA0C,MAAAtL,GAAA+I,IAAAuC,4BAAArf,MAAA,KAAAqD,YAA+D0Q,EAAAuL,uBAAA,WAAqC,MAAAvL,GAAA+I,IAAAwC,uBAAAtf,MAAA,KAAAqD,YAA0D0Q,EAAAwL,0BAAA,WAAwC,MAAAxL,GAAA+I,IAAAyC,0BAAAvf,MAAA,KAAAqD,YAA6D0Q,EAAAyL,yBAAA,WAAuC,MAAAzL,GAAA+I,IAAA0C,yBAAAxf,MAAA,KAAAqD,YAA4D0Q,EAAA0L,iBAAA,WAA+B,MAAA1L,GAAA+I,IAAA2C,iBAAAzf,MAAA,KAAAqD,WAAqD,IAAAvF,IAAAiW,EAAA2L,WAAA,WAA8B,MAAA3L,GAAA+I,IAAA4C,WAAA1f,MAAA,KAAAqD,YAA8CiY,GAAAvH,EAAAsH,aAAA,WAA6B,MAAAtH,GAAA+I,IAAAzB,aAAArb,MAAA,KAAAqD,YAAgD+X,GAAArH,EAAAoH,UAAA,WAA0B,MAAApH,GAAA+I,IAAA3B,UAAAnb,MAAA,KAAAqD,WAAyzB,IAAA0Q,EAAA+I,IAAA+B,GAAA9K,EAAAG,MAAA,SAAAJ,EAAAC,EAAA/H,GAAmCA,OAAQ,IAAAqL,GAAAtB,EAAAjC,GAAAmE,EAAAjM,EAAA2T,MAAA,SAAA7L,GAAiC,iBAAAA,GAAqB,kBAAAC,GAAAkE,EAAAZ,EAAA,WAAmC,GAAAA,GAAArL,EAAAiM,EAAA5U,UAAAgW,EAAAtD,EAAAjC,GAAAwF,KAAAhiB,EAAA,CAAoC,IAAA2gB,EAAA,OAAAngB,GAAA,EAAiBA,EAAAmgB,EAAA/e,OAAWpB,IAAA,CAAK,GAAAyhB,GAAA7hB,EAAA2f,EAAAvf,GAAcyhB,IAAA,IAAAjiB,MAAA8jB,MAAA9B,EAAAxhB,GAAAyhB,EAAAtB,EAAAngB,KAAAwhB,EAAAxhB,GAAAmgB,EAAAngB,GAA0C,MAAAuf,GAAAgC,EAAArZ,MAAA,KAAAsZ,GAAA,WAAAvF,IAAAsD,EAAA,SAAAvD,GAAsD,GAAAC,EAAM,QAAAA,IAAAD,EAAA,QAAsB,QAAA9H,GAAAqL,EAAA,EAAAY,EAAA,EAAkBZ,GAAArL,EAAA0K,EAAA5C,EAAAmE,GAAA,OAAAjM,GAAA+H,KAAAkE,KAAAlE,GAAAkE,GAAAlE,KAA2C,GAAAA,MAAAkE,GAAAjM,EAAA,OAAAqL,EAAA,CAAwB,KAAK,EAAAtD,GAAIsD,EAAA1Z,OAAAoC,aAAAC,MAAArC,OAAA+Y,EAAAvU,SAAA2R,IAAA7U,KAAAC,IAAA6U,EAAA,QAAA/H,MAAAqL,IAAAvD,GAAA,KAAAC,GAAA,IAAgG,OAAA/H,GAAS8H,EAAA,CAAG,IAAAC,EAAA2C,EAAAW,EAAAvD,EAAYC,EAAAsD,MAAKA,CAAK,OAAAA,EAAAvD,GAAAC,EAAA5R,UAAAsZ,EAAA3H,EAAA2H,EAAAmE,OAAA7L,EAAA5R,SAAA2R,EAAAuD,QAAqD,KAAAA,EAAA,KAAe,CAAE,KAAArL,EAAA+H,EAAAD,MAAA,CAAgBA,EAAAuD,CAAI,MAAAvD,GAAQ,OAAA9H,EAAA,GAAAiM,EAAA,GAAAlE,EAAAD,KAAA,UAAA9H,GAAAqL,GAAA1Z,OAAAoC,cAAA,GAAAiM,IAAA,EAAAiM,OAAyE,CAAK,GAAAoB,GAAA,GAAAtF,EAAAD,IAAgB,cAAA9H,MAAA,GAAAA,IAAA,GAAAiM,GAAA,EAAAoB,MAAoC,CAAK,GAAAC,GAAA,GAAAvF,EAAAD,IAAgB,cAAA9H,MAAA,EAAAA,IAAA,GAAAiM,GAAA,GAAAoB,GAAA,EAAAC,MAAyC,CAAK,GAAAhiB,GAAA,GAAAyc,EAAAD,IAAgB9H,GAAA,UAAAA,IAAA,EAAAA,IAAA,GAAAiM,GAAA,GAAAoB,GAAA,GAAAC,GAAA,EAAAhiB,GAAA,EAAA0U,IAAA,GAAAiM,GAAA,GAAAoB,GAAA,GAAAC,GAAA,GAAAhiB,GAAA,KAAAyc,EAAAD,MAAwF,MAAA9H,EAAAqL,GAAA1Z,OAAAoC,aAAAiM,OAAA,MAAAqL,GAAA1Z,OAAAoC,aAAA,MAAAiM,GAAA,cAAAA,QAA8FqL,IAAA1Z,OAAAoC,aAAAiM,IAAgC,MAAA8H,IAASuD,IAAA,IAAA/f,GAAAgkB,GAAAhkB,GAAA+f,IAAoBtD,EAAA1K,KAAA,SAAAyK,GAAoB,GAAAC,EAAAuE,UAAAxE,EAAAC,OAAoB,CAAK,GAAA/H,GAAA+H,EAAA2E,oBAA6B3E,GAAA2E,qBAAA,WAAkC1M,OAAA8H,EAAAC,IAAa,MAAAA,IAASmE,EAAA1f,UAAAiB,QAAAye,EAAA1f,UAAAsY,YAAAoH,EAAAzgB,EAAA,QAAAqc,KAA8DC,EAAAuE,WAAAD,IAAAtE,EAAAuE,YAAA7gB,EAAAqc,IAAoCC,EAAA8L,IAAAxH,EAAAtE,EAAAiG,KAAA,SAAAlG,EAAA9H,GAA8BA,GAAA+H,EAAA+L,eAAA,IAAAhM,KAAAC,EAAA+L,gBAAAvH,GAAA,EAAAnW,MAAA,GAAA+U,EAAAiF,GAAArI,EAAAgM,SAAAhM,EAAAgM,OAAAjM,GAAAhc,GAAA6b,EAAAqG,KAAAlG,GAAAC,EAAAqF,KAAAtF,EAAA,GAAAoE,GAAApE,MAAgIC,EAAA2K,MAAA5I,EAAA/B,EAAAiM,QAAA,sBAAAjM,GAAAiM,UAAAjM,EAAAiM,SAAAjM,EAAAiM,UAA+E,EAAAjM,EAAAiM,QAAA9mB,QAAmB6a,EAAAiM,QAAAvO,OAAmB,OAAAsC,GAAA+L,eAAA,EAAAzH,IAAAvE,KAAiCmM,EAAA,qBAAAloB,OAAAS,UAAAmD,SAAAnE,KAAA,mBAAAmc,KAAA,EAAqH,IAAAsM,EAAA,CAAY,GAAAC,GAAQjpB,EAAQ,IAAMkpB,EAAAD,EAAAC,SAA0BA,GAAqBlpB,EAAQ,IAAQmpB,iBAAc,SAAAtM,GAA4B,UAAAjL,SAAA,SAAAkL,GAA+BvH,KAAA6T,OAAAC,gBAAAxM,GAAAC,OAA0K,IAAAnB,GAAA,KAAAqB,EAAA,KAAAE,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,OTsuF3q/Krd,KAAKiR,EAAqBxR,EAAoB,GAAIA,EAAoB,GAAG6B,SAIhG,SAAUzB,EAAQD,GUpuFxB,QAAAmpB,KACA,SAAA9mB,OAAA,mCAEA,QAAA+mB,KACA,SAAA/mB,OAAA,qCAsBA,QAAAgnB,GAAAC,GACA,GAAAC,IAAA9H,WAEA,MAAAA,YAAA6H,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAA9H,WAEA,MADA8H,GAAA9H,WACAA,WAAA6H,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAte,GACL,IAEA,MAAAue,GAAAnpB,KAAA,KAAAkpB,EAAA,GACS,MAAAte,GAET,MAAAue,GAAAnpB,KAAAgC,KAAAknB,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAAC,aAEA,MAAAA,cAAAF,EAGA,KAAAC,IAAAN,IAAAM,IAAAC,aAEA,MADAD,GAAAC,aACAA,aAAAF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAze,GACL,IAEA,MAAA0e,GAAAtpB,KAAA,KAAAqpB,GACS,MAAAze,GAGT,MAAA0e,GAAAtpB,KAAAgC,KAAAqnB,KAYA,QAAAG,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAAhoB,OACAioB,EAAAD,EAAAne,OAAAoe,GAEAC,GAAA,EAEAD,EAAAjoB,QACAmoB,KAIA,QAAAA,KACA,IAAAJ,EAAA,CAGA,GAAAK,GAAAb,EAAAO,EACAC,IAAA,CAGA,KADA,GAAA7lB,GAAA+lB,EAAAjoB,OACAkC,GAAA,CAGA,IAFA8lB,EAAAC,EACAA,OACAC,EAAAhmB,GACA8lB,GACAA,EAAAE,GAAAvB,KAGAuB,IAAA,EACAhmB,EAAA+lB,EAAAjoB,OAEAgoB,EAAA,KACAD,GAAA,EACAL,EAAAU,IAiBA,QAAAC,GAAAb,EAAA1lB,GACAxB,KAAAknB,MACAlnB,KAAAwB,QAYA,QAAAwmB,MAhKA,GAOAb,GACAG,EARAnN,EAAAtc,EAAAD,YAgBA,WACA,IAEAupB,EADA,mBAAA9H,YACAA,WAEA0H,EAEK,MAAAne,GACLue,EAAAJ,EAEA,IAEAO,EADA,mBAAAC,cACAA,aAEAP,EAEK,MAAApe,GACL0e,EAAAN,KAuDA,IAEAU,GAFAC,KACAF,GAAA,EAEAG,GAAA,CAyCAzN,GAAA8N,SAAA,SAAAf,GACA,GAAAgB,GAAA,GAAAxd,OAAAb,UAAAnK,OAAA,EACA,IAAAmK,UAAAnK,OAAA,EACA,OAAA5B,GAAA,EAAuBA,EAAA+L,UAAAnK,OAAsB5B,IAC7CoqB,EAAApqB,EAAA,GAAA+L,UAAA/L,EAGA6pB,GAAAxhB,KAAA,GAAA4hB,GAAAb,EAAAgB,IACA,IAAAP,EAAAjoB,QAAA+nB,GACAR,EAAAY,IASAE,EAAA/oB,UAAAqnB,IAAA,WACArmB,KAAAknB,IAAA1gB,MAAA,KAAAxG,KAAAwB,QAEA2Y,EAAAmH,MAAA,UACAnH,EAAAgO,SAAA,EACAhO,EAAAyJ,OACAzJ,EAAAmG,QACAnG,EAAAiO,QAAA,GACAjO,EAAAkO,YAIAlO,EAAAoG,GAAAyH,EACA7N,EAAAmO,YAAAN,EACA7N,EAAAoO,KAAAP,EACA7N,EAAAqO,IAAAR,EACA7N,EAAAsO,eAAAT,EACA7N,EAAAuO,mBAAAV,EACA7N,EAAAwO,KAAAX,EACA7N,EAAAyO,gBAAAZ,EACA7N,EAAA0O,oBAAAb,EAEA7N,EAAA2O,UAAA,SAAA1qB,GAAqC,UAErC+b,EAAA4O,QAAA,SAAA3qB,GACA,SAAA6B,OAAA,qCAGAka,EAAA6O,IAAA,WAA2B,WAC3B7O,EAAA8O,MAAA,SAAA1lB,GACA,SAAAtD,OAAA,mCAEAka,EAAA+O,MAAA,WAA4B,WVsvFtB,SAAUrrB,EAAQD,GW76FxB,GAAA4U,EAGAA,GAAA,WACA,MAAAxS,QAGA,KAEAwS,KAAAC,SAAA,qBAAA0W,MAAA,QACC,MAAAvgB,GAED,iBAAAqX,UACAzN,EAAAyN,QAOApiB,EAAAD,QAAA4U,GXo7FM,SAAU3U,EAAQD,EAASH,GAEjC,YYr7FA,SAAA2rB,GAAAC,GACA,GAAAznB,GAAAynB,EAAA3pB,MAEA,IAAAkC,EAAA,IACA,SAAA3B,OAAA,iDAKA,IAAAqpB,GAAAD,EAAA3lB,QAAA,IAOA,QANA,IAAA4lB,MAAA1nB,IAMA0nB,EAJAA,IAAA1nB,EACA,EACA,EAAA0nB,EAAA,GAMA,QAAAnoB,GAAAkoB,GACA,GAAAE,GAAAH,EAAAC,GACAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,EACA,WAAAD,EAAAE,GAAA,EAAAA,EAGA,QAAAC,GAAAJ,EAAAC,EAAAE,GACA,UAAAF,EAAAE,GAAA,EAAAA,EAGA,QAAAlhB,GAAA+gB,GAeA,OAdAK,GACAH,EAAAH,EAAAC,GACAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,GAEA3lB,EAAA,GAAA+lB,GAAAF,EAAAJ,EAAAC,EAAAE,IAEAI,EAAA,EAGAhoB,EAAA4nB,EAAA,EACAF,EAAA,EACAA,EAEAxrB,EAAA,EAAiBA,EAAA8D,EAAS9D,GAAA,EAC1B4rB,EACAG,EAAAR,EAAAnhB,WAAApK,KAAA,GACA+rB,EAAAR,EAAAnhB,WAAApK,EAAA,QACA+rB,EAAAR,EAAAnhB,WAAApK,EAAA,OACA+rB,EAAAR,EAAAnhB,WAAApK,EAAA,IACA8F,EAAAgmB,KAAAF,GAAA,OACA9lB,EAAAgmB,KAAAF,GAAA,MACA9lB,EAAAgmB,KAAA,IAAAF,CAmBA,OAhBA,KAAAF,IACAE,EACAG,EAAAR,EAAAnhB,WAAApK,KAAA,EACA+rB,EAAAR,EAAAnhB,WAAApK,EAAA,OACA8F,EAAAgmB,KAAA,IAAAF,GAGA,IAAAF,IACAE,EACAG,EAAAR,EAAAnhB,WAAApK,KAAA,GACA+rB,EAAAR,EAAAnhB,WAAApK,EAAA,OACA+rB,EAAAR,EAAAnhB,WAAApK,EAAA,OACA8F,EAAAgmB,KAAAF,GAAA,MACA9lB,EAAAgmB,KAAA,IAAAF,GAGA9lB,EAGA,QAAAkmB,GAAAC,GACA,MAAAC,GAAAD,GAAA,OACAC,EAAAD,GAAA,OACAC,EAAAD,GAAA,MACAC,EAAA,GAAAD,GAGA,QAAAE,GAAA1Q,EAAA5W,EAAAC,GAGA,OAFA8mB,GACAQ,KACApsB,EAAA6E,EAAqB7E,EAAA8E,EAAS9E,GAAA,EAC9B4rB,GACAnQ,EAAAzb,IAAA,cACAyb,EAAAzb,EAAA,cACA,IAAAyb,EAAAzb,EAAA,IACAosB,EAAA/jB,KAAA2jB,EAAAJ,GAEA,OAAAQ,GAAAjgB,KAAA,IAGA,QAAAzE,GAAA+T,GAQA,OAPAmQ,GACA9nB,EAAA2X,EAAA7Z,OACAyqB,EAAAvoB,EAAA,EACAwoB,KAIAtsB,EAAA,EAAAusB,EAAAzoB,EAAAuoB,EAA0CrsB,EAAAusB,EAAUvsB,GAHpD,MAIAssB,EAAAjkB,KAAA8jB,EACA1Q,EAAAzb,IALA,MAKAusB,IAAAvsB,EALA,OA2BA,OAjBA,KAAAqsB,GACAT,EAAAnQ,EAAA3X,EAAA,GACAwoB,EAAAjkB,KACA6jB,EAAAN,GAAA,GACAM,EAAAN,GAAA,MACA,OAEG,IAAAS,IACHT,GAAAnQ,EAAA3X,EAAA,OAAA2X,EAAA3X,EAAA,GACAwoB,EAAAjkB,KACA6jB,EAAAN,GAAA,IACAM,EAAAN,GAAA,MACAM,EAAAN,GAAA,MACA,MAIAU,EAAAngB,KAAA,IAnJArM,EAAAuD,aACAvD,EAAA0K,cACA1K,EAAA4H,eAOA,QALAwkB,MACAH,KACAF,EAAA,oBAAA/pB,uBAAA8K,MAEA8C,EAAA,mEACA1P,EAAA,EAAA8D,EAAA4L,EAAA9N,OAAkC5B,EAAA8D,IAAS9D,EAC3CksB,EAAAlsB,GAAA0P,EAAA1P,GACA+rB,EAAArc,EAAAtF,WAAApK,KAKA+rB,GAAA,IAAA3hB,WAAA,OACA2hB,EAAA,IAAA3hB,WAAA,QZmlGM,SAAUrK,EAAQD,GatmGxBA,EAAAiG,KAAA,SAAA/B,EAAA0C,EAAA8lB,EAAAC,EAAAC,GACA,GAAA5hB,GAAA3K,EACAwsB,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACA9sB,EAAAwsB,EAAAE,EAAA,IACArsB,EAAAmsB,GAAA,IACAnrB,EAAA2C,EAAA0C,EAAA1G,EAOA,KALAA,GAAAK,EAEAyK,EAAAzJ,GAAA,IAAAyrB,GAAA,EACAzrB,KAAAyrB,EACAA,GAAAH,EACQG,EAAA,EAAWhiB,EAAA,IAAAA,EAAA9G,EAAA0C,EAAA1G,MAAAK,EAAAysB,GAAA,GAKnB,IAHA3sB,EAAA2K,GAAA,IAAAgiB,GAAA,EACAhiB,KAAAgiB,EACAA,GAAAL,EACQK,EAAA,EAAW3sB,EAAA,IAAAA,EAAA6D,EAAA0C,EAAA1G,MAAAK,EAAAysB,GAAA,GAEnB,OAAAhiB,EACAA,EAAA,EAAA+hB,MACG,IAAA/hB,IAAA8hB,EACH,MAAAzsB,GAAA0lB,IAAA3b,KAAA7I,GAAA,IAEAlB,IAAAwH,KAAA6F,IAAA,EAAAif,GACA3hB,GAAA+hB,EAEA,OAAAxrB,GAAA,KAAAlB,EAAAwH,KAAA6F,IAAA,EAAA1C,EAAA2hB,IAGA3sB,EAAAyD,MAAA,SAAAS,EAAA1B,EAAAoE,EAAA8lB,EAAAC,EAAAC,GACA,GAAA5hB,GAAA3K,EAAAC,EACAusB,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAG,EAAA,KAAAN,EAAA9kB,KAAA6F,IAAA,OAAA7F,KAAA6F,IAAA,SACAxN,EAAAwsB,EAAA,EAAAE,EAAA,EACArsB,EAAAmsB,EAAA,KACAnrB,EAAAiB,EAAA,OAAAA,GAAA,EAAAA,EAAA,KAmCA,KAjCAA,EAAAqF,KAAAqlB,IAAA1qB,GAEAoD,MAAApD,QAAA4H,KACA/J,EAAAuF,MAAApD,GAAA,IACAwI,EAAA8hB,IAEA9hB,EAAAnD,KAAA2G,MAAA3G,KAAA2I,IAAAhO,GAAAqF,KAAAslB,KACA3qB,GAAAlC,EAAAuH,KAAA6F,IAAA,GAAA1C,IAAA,IACAA,IACA1K,GAAA,GAGAkC,GADAwI,EAAA+hB,GAAA,EACAE,EAAA3sB,EAEA2sB,EAAAplB,KAAA6F,IAAA,IAAAqf,GAEAvqB,EAAAlC,GAAA,IACA0K,IACA1K,GAAA,GAGA0K,EAAA+hB,GAAAD,GACAzsB,EAAA,EACA2K,EAAA8hB,GACK9hB,EAAA+hB,GAAA,GACL1sB,GAAAmC,EAAAlC,EAAA,GAAAuH,KAAA6F,IAAA,EAAAif,GACA3hB,GAAA+hB,IAEA1sB,EAAAmC,EAAAqF,KAAA6F,IAAA,EAAAqf,EAAA,GAAAllB,KAAA6F,IAAA,EAAAif,GACA3hB,EAAA,IAIQ2hB,GAAA,EAAWzoB,EAAA0C,EAAA1G,GAAA,IAAAG,EAAAH,GAAAK,EAAAF,GAAA,IAAAssB,GAAA,GAInB,IAFA3hB,KAAA2hB,EAAAtsB,EACAwsB,GAAAF,EACQE,EAAA,EAAU3oB,EAAA0C,EAAA1G,GAAA,IAAA8K,EAAA9K,GAAAK,EAAAyK,GAAA,IAAA6hB,GAAA,GAElB3oB,EAAA0C,EAAA1G,EAAAK,IAAA,IAAAgB,Ib8mGM,SAAUtB,EAAQD,GchsGxB,GAAAuE,MAAiBA,QAEjBtE,GAAAD,QAAA8M,MAAAzI,SAAA,SAAA2B,GACA,wBAAAzB,EAAAnE,KAAA4F,KdwsGM,SAAU/F,EAAQD,KAMlB,SAAUC,EAAQD,KAMlB,SAAUC,EAAQD,KAMlB,SAAUC,EAAQD,KAMlB,SAAUC,EAAQD,EAASH,IenuGjC,SAAAsc,GACA,YAgCA,SAAAiR,GAAA3hB,EAAAnL,GAAoB,MAAAmL,IAAAnL,EAAAmL,IAAA,GAAAnL,EAEpB,QAAA+sB,GAAA5hB,EAAAvL,GACA,GAAAygB,GAAA,IAAAlV,EAAAvL,EAAA,EAGA,OAFAygB,MAAA,MAAAlV,EAAAvL,EAAA,IACAygB,KAAA,MAAAlV,EAAAvL,EAAA,KACA,MAAAuL,EAAAvL,EAAA,GAGA,QAAAotB,GAAA7hB,EAAAvL,GACA,GAAAiiB,GAAA1W,EAAAvL,IAAA,GAAAuL,EAAAvL,EAAA,OAAAuL,EAAAvL,EAAA,MAAAuL,EAAAvL,EAAA,GACAC,EAAAsL,EAAAvL,EAAA,OAAAuL,EAAAvL,EAAA,OAAAuL,EAAAvL,EAAA,MAAAuL,EAAAvL,EAAA,EACA,WAAAqtB,IAAApL,EAAAhiB,GAGA,QAAAqtB,GAAA/hB,EAAA/E,EAAAia,GACA,GAAAzgB,EACA,KAAAA,EAAA,EAAaA,EAAA,EAAOA,IAAOuL,EAAA/E,EAAAxG,GAAA,IAAAygB,EAAkBA,KAAA,EAG7C,QAAA8M,GAAAhiB,EAAAvL,EAAAygB,GACAlV,EAAAvL,GAAAygB,EAAAnW,IAAA,OACAiB,EAAAvL,EAAA,GAAAygB,EAAAnW,IAAA,OACAiB,EAAAvL,EAAA,GAAAygB,EAAAnW,IAAA,MACAiB,EAAAvL,EAAA,OAAAygB,EAAAnW,GACAiB,EAAAvL,EAAA,GAAAygB,EAAAlW,IAAA,OACAgB,EAAAvL,EAAA,GAAAygB,EAAAlW,IAAA,OACAgB,EAAAvL,EAAA,GAAAygB,EAAAlW,IAAA,MACAgB,EAAAvL,EAAA,OAAAygB,EAAAlW,GAGA,QAAAijB,GAAAjiB,EAAAkiB,EAAAjiB,EAAAkiB,EAAA5sB,GACA,GAAAd,GAAAK,EAAA,CACA,KAAAL,EAAA,EAAaA,EAAAc,EAAOd,IAAAK,GAAAkL,EAAAkiB,EAAAztB,GAAAwL,EAAAkiB,EAAA1tB,EACpB,UAAAK,EAAA,SAGA,QAAAstB,GAAApiB,EAAAkiB,EAAAjiB,EAAAkiB,GACA,MAAAF,GAAAjiB,EAAAkiB,EAAAjiB,EAAAkiB,EAAA,IAGA,QAAAE,GAAAriB,EAAAkiB,EAAAjiB,EAAAkiB,GACA,MAAAF,GAAAjiB,EAAAkiB,EAAAjiB,EAAAkiB,EAAA,IAGA,QAAAG,GAAAjlB,EAAAklB,EAAAjO,EAAAzf,EAAA6hB,GACA,GAEAjiB,GAAAwG,EAAArG,EAFA8gB,EAAA,GAAAzB,aAAA,IAAAjU,EAAA,GAAAiU,aAAA,IACAhU,EAAA,GAAAgU,aAAA,IAAA6E,EAAA,GAAA7E,aAAA,EAGA,KAAAxf,EAAA,EAAaA,EAAA,EAAOA,IACpBuL,EAAA,EAAAvL,GAAAmtB,EAAA/sB,EAAA,EAAAJ,GACAuL,EAAA,EAAAvL,GAAAmtB,EAAAtN,EAAA,EAAA7f,GACAuL,EAAA,EAAAvL,GAAAmtB,EAAAW,EAAA,EAAA9tB,GACAuL,EAAA,GAAAvL,GAAAmtB,EAAAtN,EAAA,KAAA7f,EAGA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAwL,EAAAxL,GAAAuL,EAAAvL,EAErB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAA,CACrB,IAAAwG,EAAA,EAAeA,EAAA,EAAOA,IAAA,CACtB,IAAArG,EAAA,EAAiBA,EAAA,EAAOA,IAAAkkB,EAAAlkB,GAAAoL,GAAA,EAAA/E,EAAA,EAAArG,GAAA,GAKxB,KAJAkkB,EAAA,IAAA6I,EAAA7I,EAAA,GAAAA,EAAA,QACAA,EAAA,IAAA6I,EAAA7I,EAAA,GAAAA,EAAA,QACAA,EAAA,IAAA6I,EAAA7I,EAAA,GAAAA,EAAA,SACAA,EAAA,IAAA6I,EAAA7I,EAAA,GAAAA,EAAA,SACAlkB,EAAA,EAAiBA,EAAA,EAAOA,IAAA8gB,EAAA,EAAAza,KAAArG,GAAA,GAAAkkB,EAAAlkB,GAExB,IAAAA,EAAA,EAAeA,EAAA,GAAQA,IAAAoL,EAAApL,GAAA8gB,EAAA9gB,GAGvB,GAAA8hB,EAAA,CACA,IAAAjiB,EAAA,EAAeA,EAAA,GAAQA,IAAAuL,EAAAvL,GAAAuL,EAAAvL,GAAAwL,EAAAxL,GAAA,CACvB,KAAAA,EAAA,EAAeA,EAAA,EAAOA,IACtBuL,EAAA,EAAAvL,GAAAuL,EAAA,EAAAvL,GAAAmtB,EAAA/sB,EAAA,EAAAJ,GAAA,EACAuL,EAAA,EAAAvL,GAAAuL,EAAA,EAAAvL,GAAAmtB,EAAAW,EAAA,EAAA9tB,GAAA,CAEA,KAAAA,EAAA,EAAeA,EAAA,EAAOA,IACtBstB,EAAA1kB,EAAA,EAAA5I,EAAAuL,EAAA,EAAAvL,IACAstB,EAAA1kB,EAAA,KAAA5I,EAAAuL,EAAA,EAAAvL,QAGA,KAAAA,EAAA,EAAeA,EAAA,GAAQA,IAAAstB,EAAA1kB,EAAA,EAAA5I,EAAAuL,EAAAvL,GAAAwL,EAAAxL,GAAA,GAIvB,QAAA+tB,GAAAnlB,EAAAklB,EAAAjO,EAAAzf,GAEA,MADAytB,GAAAjlB,EAAAklB,EAAAjO,EAAAzf,GAAA,GACA,EAGA,QAAA4tB,GAAAplB,EAAAklB,EAAAjO,EAAAzf,GAEA,MADAytB,GAAAjlB,EAAAklB,EAAAjO,EAAAzf,GAAA,GACA,EAMA,QAAA6tB,GAAA7tB,EAAA8tB,EAAA/tB,EAAAguB,EAAA7oB,EAAAxE,EAAA+e,GACA,GACAY,GAAAzgB,EADA0gB,EAAA,GAAA5e,YAAA,IAAAyJ,EAAA,GAAAzJ,YAAA,GAEA,KAAAwD,EAAA,QACA,KAAAtF,EAAA,EAAaA,EAAA,GAAQA,IAAA0gB,EAAA1gB,GAAA,CACrB,KAAAA,EAAA,EAAaA,EAAA,EAAOA,IAAA0gB,EAAA1gB,GAAAc,EAAAd,EACpB,MAAAsF,GAAA,KAEA,IADAyoB,EAAAxiB,EAAAmV,EAAAb,EAAAuO,IACApuB,EAAA,EAAeA,EAAA,GAAQA,IAAAI,EAAA8tB,EAAAluB,IAAAG,IAAAguB,EAAAnuB,GAAA,GAAAuL,EAAAvL,EAEvB,KADAygB,EAAA,EACAzgB,EAAA,EAAeA,EAAA,GAAQA,IACvBygB,KAAA,IAAAC,EAAA1gB,IAAA,EACA0gB,EAAA1gB,GAAA,IAAAygB,EACAA,KAAA,CAEAnb,IAAA,GACA4oB,GAAA,GACA/tB,IAAAguB,GAAA,IAEA,GAAA7oB,EAAA,EAEA,IADAyoB,EAAAxiB,EAAAmV,EAAAb,EAAAuO,IACApuB,EAAA,EAAeA,EAAAsF,EAAOtF,IAAAI,EAAA8tB,EAAAluB,IAAAG,IAAAguB,EAAAnuB,GAAA,GAAAuL,EAAAvL,EAEtB,UAGA,QAAAquB,GAAAjuB,EAAA8tB,EAAA7tB,EAAAS,EAAA+e,GACA,MAAAoO,GAAA7tB,EAAA8tB,EAAA,OAAA7tB,EAAAS,EAAA+e,GAGA,QAAAyO,GAAAluB,EAAA8tB,EAAA7tB,EAAAS,EAAA+e,GACA,GAAAxe,GAAA,GAAAS,YAAA,GAEA,OADAksB,GAAA3sB,EAAAP,EAAA+e,EAAAuO,IACAC,EAAAjuB,EAAA8tB,EAAA7tB,EAAAS,EAAA+J,SAAA,IAAAxJ,GAGA,QAAAktB,GAAAnuB,EAAA8tB,EAAA/tB,EAAAguB,EAAA9tB,EAAAS,EAAA+e,GACA,GAAAxe,GAAA,GAAAS,YAAA,GAEA,OADAksB,GAAA3sB,EAAAP,EAAA+e,EAAAuO,IACAH,EAAA7tB,EAAA8tB,EAAA/tB,EAAAguB,EAAA9tB,EAAAS,EAAA+J,SAAA,IAAAxJ,GAGA,QAAAmtB,GAAAvM,EAAA7hB,GACA,GAAAoG,GAAAia,EAAA,CACA,KAAAja,EAAA,EAAaA,EAAA,GAAQA,IACrBia,KAAAwB,EAAAzb,GAAApG,EAAAoG,GAAA,KACAyb,EAAAzb,GAAA,IAAAia,EACAA,KAAA,EAQA,QAAAgO,GAAA7lB,EAAA8lB,EAAAvuB,EAAAguB,EAAArtB,EAAA+e,GACA,GAAAxe,GAAArB,EAAAwG,EAAAia,EACAlV,EAAA,GAAAiU,aAAA,IAAAmE,EAAA,GAAAnE,aAAA,IACAyC,EAAA,GAAAzC,aAAA,IAAApf,EAAA,GAAAof,aAAA,IACA9K,EAAA,GAAA8K,aAAA,GACA,KAAAhZ,EAAA,EAAaA,EAAA,GAAQA,IAAAmd,EAAAnd,GAAAyb,EAAAzb,GAAA,CACrB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAmd,EAAAnd,GAAAqZ,EAAArZ,EASrB,KARAmd,EAAA,OACAA,EAAA,QACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QAEA7iB,EAAA,IACA,IAAA0F,EAAA,EAAeA,EAAA,GAAQA,IAAApG,EAAAoG,GAAA,CACvB,KAAAA,EAAA,EAAeA,EAAA,IAAAA,EAAA1F,IAAqB0F,EAAApG,EAAAoG,GAAArG,EAAAguB,EAAA3nB,EAIpC,KAHApG,EAAAoG,GAAA,EACA2nB,GAAA3nB,EAAc1F,GAAA0F,EACdgoB,EAAAvM,EAAA7hB,GACAJ,EAAA,EAAeA,EAAA,GAAQA,IAEvB,IADAuL,EAAAvL,GAAA,EACAwG,EAAA,EAAiBA,EAAA,GAAQA,IAAA+E,EAAAvL,GAAA,EAAAuL,EAAAvL,GAAAiiB,EAAAzb,OAAAxG,EAAA2jB,EAAA3jB,EAAAwG,GAAA,IAAAmd,EAAA3jB,EAAA,GAAAwG,GAAA,EAEzB,KAAAxG,EAAA,EAAeA,EAAA,GAAQA,IAAAiiB,EAAAjiB,GAAAuL,EAAAvL,EAEvB,KADAygB,EAAA,EACAja,EAAA,EAAeA,EAAA,GAAQA,IACvBia,IAAAwB,EAAAzb,GAAA,EACAyb,EAAAzb,GAAA,IAAAia,EACAA,KAAA,CAIA,KAFAA,IAAAwB,EAAA,MAAwBA,EAAA,MAAAxB,EACxBA,EAAA,GAAAA,IAAA,KACAja,EAAA,EAAeA,EAAA,GAAQA,IACvBia,IAAAwB,EAAAzb,GAAA,EACAyb,EAAAzb,GAAA,IAAAia,EACAA,KAAA,CAEAA,KAAAwB,EAAA,MAAwBA,EAAA,IAAAxB,EAGxB,IAAAja,EAAA,EAAaA,EAAA,GAAQA,IAAAkO,EAAAlO,GAAAyb,EAAAzb,EAGrB,KAFAgoB,EAAAvM,EAAA0M,IACAttB,EAAA,IAAA4gB,EAAA,SACAzb,EAAA,EAAaA,EAAA,GAAQA,IAAAyb,EAAAzb,IAAAnF,GAAAqT,EAAAlO,GAAAyb,EAAAzb,GAErB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAApG,EAAAoG,GAAAqZ,EAAArZ,EAAA,GAGrB,KAFApG,EAAA,MACAouB,EAAAvM,EAAA7hB,GACAoG,EAAA,EAAaA,EAAA,GAAQA,IAAAoC,EAAA8lB,EAAAloB,GAAAyb,EAAAzb,EACrB,UAGA,QAAAooB,GAAA3M,EAAA4M,EAAA1uB,EAAAguB,EAAArtB,EAAA+e,GACA,GAAAtU,GAAA,GAAAzJ,YAAA,GAEA,OADA2sB,GAAAljB,EAAA,EAAApL,EAAAguB,EAAArtB,EAAA+e,GACA8N,EAAA1L,EAAA4M,EAAAtjB,EAAA,GAGA,QAAAujB,GAAA1uB,EAAAD,EAAAE,EAAAS,EAAA+e,GACA,GAAA7f,EACA,IAAAK,EAAA,WAGA,KAFAkuB,EAAAnuB,EAAA,EAAAD,EAAA,EAAAE,EAAAS,EAAA+e,GACA4O,EAAAruB,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAD,GACAJ,EAAA,EAAaA,EAAA,GAAQA,IAAAI,EAAAJ,GAAA,CACrB,UAGA,QAAA+uB,GAAA5uB,EAAAC,EAAAC,EAAAS,EAAA+e,GACA,GAAA7f,GACAuL,EAAA,GAAAzJ,YAAA,GACA,IAAAzB,EAAA,WAEA,IADAiuB,EAAA/iB,EAAA,KAAAzK,EAAA+e,GACA,IAAA+O,EAAAxuB,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAkL,GAAA,QAEA,KADAgjB,EAAApuB,EAAA,EAAAC,EAAA,EAAAC,EAAAS,EAAA+e,GACA7f,EAAA,EAAaA,EAAA,GAAQA,IAAAG,EAAAH,GAAA,CACrB,UAGA,QAAAgvB,GAAArL,EAAArY,GACA,GAAAtL,EACA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAA2jB,EAAA3jB,GAAA,EAAAsL,EAAAtL,GAGrB,QAAAivB,GAAAzuB,GACA,GAAAJ,GACAJ,CACA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IACrBQ,EAAAR,IAAA,MACAI,EAAAuH,KAAA2G,MAAA9N,EAAAR,GAAA,OACAQ,GAAAR,EAAA,IAAAA,EAAA,UAAAI,EAAA,MAAAA,EAAA,SAAAJ,EAAA,KACAQ,EAAAR,IAAA,MAAAI,EAIA,QAAA8uB,GAAA9tB,EAAA0jB,EAAAxf,GAEA,OADA+e,GAAAjkB,IAAAkF,EAAA,GACAtF,EAAA,EAAiBA,EAAA,GAAQA,IACzBqkB,EAAAjkB,GAAAgB,EAAApB,GAAA8kB,EAAA9kB,IACAoB,EAAApB,IAAAqkB,EACAS,EAAA9kB,IAAAqkB,EAIA,QAAA8K,GAAA3uB,EAAAM,GACA,GAAAd,GAAAwG,EAAAlB,EACAnF,EAAAivB,KAAA/K,EAAA+K,IACA,KAAApvB,EAAA,EAAaA,EAAA,GAAQA,IAAAqkB,EAAArkB,GAAAc,EAAAd,EAIrB,KAHAivB,EAAA5K,GACA4K,EAAA5K,GACA4K,EAAA5K,GACA7d,EAAA,EAAaA,EAAA,EAAOA,IAAA,CAEpB,IADArG,EAAA,GAAAkkB,EAAA,SACArkB,EAAA,EAAeA,EAAA,GAAQA,IACvBG,EAAAH,GAAAqkB,EAAArkB,GAAA,OAAAG,EAAAH,EAAA,UACAG,EAAAH,EAAA,SAEAG,GAAA,IAAAkkB,EAAA,WAAAlkB,EAAA,WACAmF,EAAAnF,EAAA,UACAA,EAAA,WACA+uB,EAAA7K,EAAAlkB,EAAA,EAAAmF,GAEA,IAAAtF,EAAA,EAAaA,EAAA,GAAQA,IACrBQ,EAAA,EAAAR,GAAA,IAAAqkB,EAAArkB,GACAQ,EAAA,EAAAR,EAAA,GAAAqkB,EAAArkB,IAAA,EAIA,QAAAqvB,GAAA/jB,EAAAhG,GACA,GAAAlF,GAAA,GAAA0B,YAAA,IAAAzB,EAAA,GAAAyB,YAAA,GAGA,OAFAqtB,GAAA/uB,EAAAkL,GACA6jB,EAAA9uB,EAAAiF,GACAsoB,EAAAxtB,EAAA,EAAAC,EAAA,GAGA,QAAAivB,GAAAhkB,GACA,GAAAjL,GAAA,GAAAyB,YAAA,GAEA,OADAqtB,GAAA9uB,EAAAiL,GACA,EAAAjL,EAAA,GAGA,QAAAkvB,GAAA/uB,EAAAM,GACA,GAAAd,EACA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAQ,EAAAR,GAAAc,EAAA,EAAAd,IAAAc,EAAA,EAAAd,EAAA,MACrBQ,GAAA,WAGA,QAAAgc,GAAAhc,EAAA8K,EAAAhG,GACA,GAAAtF,EACA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAQ,EAAAR,GAAAsL,EAAAtL,GAAAsF,EAAAtF,GAAA,EAGrB,QAAAunB,GAAA/mB,EAAA8K,EAAAhG,GACA,GAAAtF,EACA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAQ,EAAAR,GAAAsL,EAAAtL,GAAAsF,EAAAtF,GAAA,EAGrB,QAAA0Q,GAAAlQ,EAAA8K,EAAAhG,GACA,GAAAtF,GAAAwG,EAAA6d,EAAA,GAAAzE,cAAA,GACA,KAAA5f,EAAA,EAAaA,EAAA,GAAQA,IAAAqkB,EAAArkB,GAAA,CACrB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IACrB,IAAAwG,EAAA,EAAeA,EAAA,GAAQA,IACvB6d,EAAArkB,EAAAwG,IAAA8E,EAAAtL,GAAAsF,EAAAkB,EAGA,KAAAxG,EAAA,EAAaA,EAAA,GAAQA,IACrBqkB,EAAArkB,IAAA,GAAAqkB,EAAArkB,EAAA,GAEA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAQ,EAAAR,GAAAqkB,EAAArkB,EACrBivB,GAAAzuB,GACAyuB,EAAAzuB,GAGA,QAAA4e,GAAA5e,EAAA8K,GACAoF,EAAAlQ,EAAA8K,KAGA,QAAAkkB,GAAAhvB,EAAAR,GACA,GACAsL,GADAlL,EAAAgvB,IAEA,KAAA9jB,EAAA,EAAaA,EAAA,GAAQA,IAAAlL,EAAAkL,GAAAtL,EAAAsL,EACrB,KAAAA,EAAA,IAAeA,GAAA,EAAQA,IACvB8T,EAAAhf,KACA,IAAAkL,GAAA,IAAAA,GAAAoF,EAAAtQ,IAAAJ,EAEA,KAAAsL,EAAA,EAAaA,EAAA,GAAQA,IAAA9K,EAAA8K,GAAAlL,EAAAkL,GAGrB,QAAAmkB,GAAAjvB,EAAAR,GACA,GACAsL,GADAlL,EAAAgvB,IAEA,KAAA9jB,EAAA,EAAaA,EAAA,GAAQA,IAAAlL,EAAAkL,GAAAtL,EAAAsL,EACrB,KAAAA,EAAA,IAAeA,GAAA,EAAQA,IACvB8T,EAAAhf,KACA,IAAAkL,GAAAoF,EAAAtQ,IAAAJ,EAEA,KAAAsL,EAAA,EAAaA,EAAA,GAAQA,IAAA9K,EAAA8K,GAAAlL,EAAAkL,GAGrB,QAAAokB,GAAA5K,EAAAhkB,EAAAM,GACA,GACAuiB,GAAA3jB,EADA0gB,EAAA,GAAA5e,YAAA,IACAyJ,EAAA,GAAAqU,cAAA,IACAtU,EAAA8jB,KAAA9pB,EAAA8pB,KAAAhvB,EAAAgvB,KACA/uB,EAAA+uB,KAAAtkB,EAAAskB,KAAAvQ,EAAAuQ,IACA,KAAApvB,EAAA,EAAaA,EAAA,GAAQA,IAAA0gB,EAAA1gB,GAAAc,EAAAd,EAIrB,KAHA0gB,EAAA,QAAA5f,EAAA,OACA4f,EAAA,QACA6O,EAAAhkB,EAAAnK,GACApB,EAAA,EAAaA,EAAA,GAAQA,IACrBsF,EAAAtF,GAAAuL,EAAAvL,GACAK,EAAAL,GAAAsL,EAAAtL,GAAAI,EAAAJ,GAAA,CAGA,KADAsL,EAAA,GAAAjL,EAAA,KACAL,EAAA,IAAaA,GAAA,IAAMA,EACnB2jB,EAAAjD,EAAA1gB,IAAA,QAAAA,GAAA,EACAkvB,EAAA5jB,EAAAhG,EAAAqe,GACAuL,EAAA9uB,EAAAC,EAAAsjB,GACAnH,EAAA1R,EAAAQ,EAAAlL,GACAmnB,EAAAjc,IAAAlL,GACAoc,EAAApc,EAAAkF,EAAAjF,GACAknB,EAAAjiB,IAAAjF,GACA+e,EAAA/e,EAAAyK,GACAsU,EAAAP,EAAAvT,GACAoF,EAAApF,EAAAlL,EAAAkL,GACAoF,EAAAtQ,EAAAkF,EAAAwF,GACA0R,EAAA1R,EAAAQ,EAAAlL,GACAmnB,EAAAjc,IAAAlL,GACAgf,EAAA9Z,EAAAgG,GACAic,EAAAnnB,EAAAC,EAAAwe,GACAnO,EAAApF,EAAAlL,EAAAuvB,IACAnT,EAAAlR,IAAAjL,GACAqQ,EAAAtQ,IAAAkL,GACAoF,EAAApF,EAAAjL,EAAAwe,GACAnO,EAAArQ,EAAAiF,EAAAiG,GACA6T,EAAA9Z,EAAAwF,GACAokB,EAAA5jB,EAAAhG,EAAAqe,GACAuL,EAAA9uB,EAAAC,EAAAsjB,EAEA,KAAA3jB,EAAA,EAAaA,EAAA,GAAQA,IACrBuL,EAAAvL,EAAA,IAAAsL,EAAAtL,GACAuL,EAAAvL,EAAA,IAAAI,EAAAJ,GACAuL,EAAAvL,EAAA,IAAAsF,EAAAtF,GACAuL,EAAAvL,EAAA,IAAAK,EAAAL,EAEA,IAAA4vB,GAAArkB,EAAAV,SAAA,IACAglB,EAAAtkB,EAAAV,SAAA,GAIA,OAHA2kB,GAAAI,KACAlf,EAAAmf,IAAAD,GACAT,EAAArK,EAAA+K,GACA,EAGA,QAAAC,GAAAhL,EAAAhkB,GACA,MAAA4uB,GAAA5K,EAAAhkB,EAAAivB,IAGA,QAAAC,GAAAxkB,EAAAD,GAEA,MADA0kB,IAAA1kB,EAAA,IACAukB,EAAAtkB,EAAAD,GAGA,QAAA2kB,GAAArQ,EAAArU,EAAAD,GACA,GAAAlK,GAAA,GAAAS,YAAA,GAEA,OADA4tB,GAAAruB,EAAAkK,EAAAC,GACAwiB,EAAAnO,EAAAsQ,GAAA9uB,EAAA+sB,IAMA,QAAAgC,GAAAhwB,EAAAD,EAAAE,EAAAS,EAAA0K,EAAAD,GACA,GAAAsU,GAAA,GAAA/d,YAAA,GAEA,OADAouB,GAAArQ,EAAArU,EAAAD,GACA8kB,GAAAjwB,EAAAD,EAAAE,EAAAS,EAAA+e,GAGA,QAAAyQ,GAAAnwB,EAAAC,EAAAC,EAAAS,EAAA0K,EAAAD,GACA,GAAAsU,GAAA,GAAA/d,YAAA,GAEA,OADAouB,GAAArQ,EAAArU,EAAAD,GACAglB,GAAApwB,EAAAC,EAAAC,EAAAS,EAAA+e,GAGA,QAAA2Q,KACA,GAAAvwB,GAAAgiB,EAAAjiB,EAAAsL,EAAA,EAAAhG,EAAA,EAAAlF,EAAA,EAAAC,EAAA,CACA,KAAAL,EAAA,EAAaA,EAAA+L,UAAAnK,OAAsB5B,IACnCC,EAAA8L,UAAA/L,GAAAuK,GACA0X,EAAAlW,UAAA/L,GAAAsK,GACAgB,GAJA,MAIArL,EAAmBqF,GAAArF,IAAA,GACnBG,GALA,MAKA6hB,EAAmB5hB,GAAA4hB,IAAA,EAOnB,OAJA3c,IAAAgG,IAAA,GACAlL,GAAAkF,IAAA,GACAjF,GAAAD,IAAA,GAEA,GAAAitB,IAZA,MAYAjtB,EAAAC,GAAA,GAZA,MAYAiL,EAAAhG,GAAA,IAGA,QAAAmrB,GAAAllB,EAAAnL,GACA,UAAAitB,IAAA9hB,EAAAjB,KAAAlK,EAAAmL,EAAAhB,KAAAnK,EAAAmL,EAAAjB,IAAA,GAAAlK,GAGA,QAAAswB,KACA,GAAA1wB,GAAAC,EAAA,EAAAgiB,EAAA,CACA,KAAAjiB,EAAA,EAAaA,EAAA+L,UAAAnK,OAAsB5B,IACnCC,GAAA8L,UAAA/L,GAAAuK,GACA0X,GAAAlW,UAAA/L,GAAAsK,EAEA,WAAA+iB,IAAApL,EAAAhiB,GAGA,QAAAihB,GAAA3V,EAAAnL,GACA,GAAA6hB,GAAAhiB,EAAA0wB,EAAA,GAAAvwB,CAQA,OAPAA,GAAA,IACA6hB,EAAA1W,EAAAjB,KAAAlK,EAAAmL,EAAAhB,IAAAomB,EACA1wB,EAAAsL,EAAAhB,KAAAnK,EAAAmL,EAAAjB,IAAAqmB,GACGvwB,EAAA,KACH6hB,EAAA1W,EAAAhB,KAAAnK,EAAAmL,EAAAjB,IAAAqmB,EACA1wB,EAAAsL,EAAAjB,KAAAlK,EAAAmL,EAAAhB,IAAAomB,GAEA,GAAAtD,IAAApL,EAAAhiB,GAGA,QAAA2wB,GAAArlB,EAAAC,EAAAkV,GACA,GAAAuB,GAAA1W,EAAAjB,GAAAkB,EAAAlB,IAAAiB,EAAAjB,GAAAoW,EAAApW,GACArK,EAAAsL,EAAAhB,GAAAiB,EAAAjB,IAAAgB,EAAAhB,GAAAmW,EAAAnW,EACA,WAAA8iB,IAAApL,EAAAhiB,GAGA,QAAA4wB,GAAAtlB,EAAAC,EAAAkV,GACA,GAAAuB,GAAA1W,EAAAjB,GAAAkB,EAAAlB,GAAAiB,EAAAjB,GAAAoW,EAAApW,GAAAkB,EAAAlB,GAAAoW,EAAApW,GACArK,EAAAsL,EAAAhB,GAAAiB,EAAAjB,GAAAgB,EAAAhB,GAAAmW,EAAAnW,GAAAiB,EAAAjB,GAAAmW,EAAAnW,EACA,WAAA8iB,IAAApL,EAAAhiB,GAGA,QAAA6wB,GAAAvlB,GAAoB,MAAAmlB,GAAAxP,EAAA3V,EAAA,IAAA2V,EAAA3V,EAAA,IAAA2V,EAAA3V,EAAA,KACpB,QAAAwlB,GAAAxlB,GAAoB,MAAAmlB,GAAAxP,EAAA3V,EAAA,IAAA2V,EAAA3V,EAAA,IAAA2V,EAAA3V,EAAA,KACpB,QAAAylB,GAAAzlB,GAAoB,MAAAmlB,GAAAxP,EAAA3V,EAAA,GAAA2V,EAAA3V,EAAA,GAAAklB,EAAAllB,EAAA,IACpB,QAAA0lB,GAAA1lB,GAAoB,MAAAmlB,GAAAxP,EAAA3V,EAAA,IAAA2V,EAAA3V,EAAA,IAAAklB,EAAAllB,EAAA,IA6CpB,QAAA2lB,GAAA3lB,EAAApL,EAAAW,GACA,GAAAujB,GAAArkB,EAAAwG,EAAAka,KAAApb,KAAAgG,KAAA2V,IAEA,KAAAjhB,EAAA,EAAaA,EAAA,EAAOA,IAAA0gB,EAAA1gB,GAAAsL,EAAAtL,GAAAotB,EAAA7hB,EAAA,EAAAvL,EAGpB,KADA,GAAA2L,GAAA,EACA7K,GAAA,MACA,IAAAd,EAAA,EAAeA,EAAA,GAAQA,IAAAihB,EAAAjhB,GAAAotB,EAAAjtB,EAAA,EAAAH,EAAA2L,EACvB,KAAA3L,EAAA,EAAeA,EAAA,GAAQA,IAAA,CACvB,IAAAwG,EAAA,EAAiBA,EAAA,EAAOA,IAAAlB,EAAAkB,GAAA8E,EAAA9E,EAIxB,KAHA6d,EAAAmM,EAAAllB,EAAA,GAAAylB,EAAAzlB,EAAA,IAAAslB,EAAAtlB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAiZ,GAAAvkB,GAAAihB,EAAAjhB,EAAA,KACAsF,EAAA,GAAAkrB,EAAAnM,EAAAyM,EAAAxlB,EAAA,IAAAulB,EAAAvlB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAhG,EAAA,GAAAkrB,EAAAlrB,EAAA,GAAA+e,GACA7d,EAAA,EAAiBA,EAAA,EAAOA,IAAA8E,GAAA9E,EAAA,MAAAlB,EAAAkB,EACxB,IAAAxG,EAAA,QACA,IAAAwG,EAAA,EAAmBA,EAAA,GAAQA,IAC3Bya,EAAAza,GAAAgqB,EAAAvP,EAAAza,GAAAya,GAAAza,EAAA,OAAAwqB,EAAA/P,GAAAza,EAAA,QAAAyqB,EAAAhQ,GAAAza,EAAA,UAKA,IAAAxG,EAAA,EAAeA,EAAA,EAAOA,IACtBsL,EAAAtL,GAAAwwB,EAAAllB,EAAAtL,GAAA0gB,EAAA1gB,IACA0gB,EAAA1gB,GAAAsL,EAAAtL,EAGA2L,IAAA,IACA7K,GAAA,IAGA,IAAAd,EAAA,EAAaA,EAAA,EAAOA,IAAAutB,EAAAhiB,EAAA,EAAAvL,EAAA0gB,EAAA1gB,GACpB,OAAAc,GAcA,QAAAqwB,GAAAvoB,EAAAzI,EAAAW,GACA,GACAd,GADAiiB,EAAA,GAAAngB,YAAA,IAAAyJ,EAAA,GAAAzJ,YAAA,KACAwD,EAAAxE,CAEA,KAAAd,EAAA,EAAaA,EAAA,GAAQA,IAAAiiB,EAAAjiB,GAAAoxB,GAAApxB,EAKrB,KAHAkxB,EAAAjP,EAAA9hB,EAAAW,GACAA,GAAA,IAEAd,EAAA,EAAaA,EAAA,IAASA,IAAAuL,EAAAvL,GAAA,CACtB,KAAAA,EAAA,EAAaA,EAAAc,EAAOd,IAAAuL,EAAAvL,GAAAG,EAAAmF,EAAAxE,EAAAd,EAQpB,KAPAuL,EAAAzK,GAAA,IAEAA,EAAA,SAAAA,EAAA,SACAyK,EAAAzK,EAAA,KACAysB,EAAAhiB,EAAAzK,EAAA,KAAAusB,IAAA/nB,EAAA,YAAAA,GAAA,IACA4rB,EAAAjP,EAAA1W,EAAAzK,GAEAd,EAAA,EAAaA,EAAA,GAAQA,IAAA4I,EAAA5I,GAAAiiB,EAAAjiB,EAErB,UAGA,QAAAqxB,GAAAjwB,EAAA0jB,GACA,GAAAxZ,GAAA8jB,KAAA9pB,EAAA8pB,KAAAhvB,EAAAgvB,KACA/uB,EAAA+uB,KAAAtkB,EAAAskB,KAAAvQ,EAAAuQ,KACA1a,EAAA0a,KAAAnN,EAAAmN,KAAA/K,EAAA+K,IAEA7H,GAAAjc,EAAAlK,EAAA,GAAAA,EAAA,IACAmmB,EAAAlD,EAAAS,EAAA,GAAAA,EAAA,IACApU,EAAApF,IAAA+Y,GACA7H,EAAAlX,EAAAlE,EAAA,GAAAA,EAAA,IACAob,EAAA6H,EAAAS,EAAA,GAAAA,EAAA,IACApU,EAAApL,IAAA+e,GACA3T,EAAAtQ,EAAAgB,EAAA,GAAA0jB,EAAA,IACApU,EAAAtQ,IAAAkxB,IACA5gB,EAAArQ,EAAAe,EAAA,GAAA0jB,EAAA,IACAtI,EAAAnc,OACAknB,EAAAzc,EAAAxF,EAAAgG,GACAic,EAAA1I,EAAAxe,EAAAD,GACAoc,EAAA9H,EAAArU,EAAAD,GACAoc,EAAAyF,EAAA3c,EAAAgG,GAEAoF,EAAAtP,EAAA,GAAA0J,EAAA+T,GACAnO,EAAAtP,EAAA,GAAA6gB,EAAAvN,GACAhE,EAAAtP,EAAA,GAAAsT,EAAAmK,GACAnO,EAAAtP,EAAA,GAAA0J,EAAAmX,GAGA,QAAAsP,IAAAnwB,EAAA0jB,EAAAxf,GACA,GAAAtF,EACA,KAAAA,EAAA,EAAaA,EAAA,EAAOA,IACpBkvB,EAAA9tB,EAAApB,GAAA8kB,EAAA9kB,GAAAsF,GAIA,QAAAksB,IAAA7N,EAAAviB,GACA,GAAAqwB,GAAArC,KAAAsC,EAAAtC,KAAAuC,EAAAvC,IACAI,GAAAmC,EAAAvwB,EAAA,IACAsP,EAAA+gB,EAAArwB,EAAA,GAAAuwB,GACAjhB,EAAAghB,EAAAtwB,EAAA,GAAAuwB,GACAxC,EAAAxL,EAAA+N,GACA/N,EAAA,KAAA2L,EAAAmC,IAAA,EAGA,QAAAG,IAAAxwB,EAAA0jB,EAAAzjB,GACA,GAAAiE,GAAAtF,CAKA,KAJAgvB,EAAA5tB,EAAA,GAAAywB,IACA7C,EAAA5tB,EAAA,GAAA0wB,IACA9C,EAAA5tB,EAAA,GAAA0wB,IACA9C,EAAA5tB,EAAA,GAAAywB,IACA7xB,EAAA,IAAeA,GAAA,IAAQA,EACvBsF,EAAAjE,EAAArB,EAAA,SAAAA,GAAA,EACAuxB,GAAAnwB,EAAA0jB,EAAAxf,GACA+rB,EAAAvM,EAAA1jB,GACAiwB,EAAAjwB,KACAmwB,GAAAnwB,EAAA0jB,EAAAxf,GAIA,QAAAysB,IAAA3wB,EAAAC,GACA,GAAAyjB,IAAAsK,oBACAJ,GAAAlK,EAAA,GAAAvE,IACAyO,EAAAlK,EAAA,GAAA/F,IACAiQ,EAAAlK,EAAA,GAAAgN,IACAphB,EAAAoU,EAAA,GAAAvE,GAAAxB,IACA6S,GAAAxwB,EAAA0jB,EAAAzjB,GAGA,QAAA2wB,IAAAC,EAAAC,EAAAC,GACA,GAAA9xB,GAAA,GAAAyB,YAAA,IACAV,GAAAguB,oBAGA+C,IAAAlC,GAAAiC,EAAA,GAEA,IAAA1c,GAAA4c,GAAAC,YAAA,GAWA,OAVAD,IAAAE,cAAA9c,EAAA0c,GACA7xB,EAAA+xB,GAAAG,aAAA/c,GAEAnV,EAAA,QACAA,EAAA,SACAA,EAAA,QAEA0xB,GAAA3wB,EAAAf,GACAmxB,GAAAS,EAAA7wB,GAEA,EAGA,QAAAoxB,IAAAN,GAEA,GAAA7xB,GAAA,GAAAyB,YAAA,IACAV,GAAAguB,qBAEA6C,EAAA,GAAAnwB,YAAA,IACA0T,EAAA4c,GAAAC,YAAA,GAUA,OATAD,IAAAE,cAAA9c,EAAA0c,GACA7xB,EAAA+xB,GAAAG,aAAA/c,GAEAnV,EAAA,QACAA,EAAA,SACAA,EAAA,QAEA0xB,GAAA3wB,EAAAf,GACAmxB,GAAAS,EAAA7wB,GACA6wB,EAKA,QAAAQ,IAAA9O,EAAApY,GACA,GAAAmnB,GAAA1yB,EAAAwG,EAAAqZ,CACA,KAAA7f,EAAA,GAAcA,GAAA,KAASA,EAAA,CAEvB,IADA0yB,EAAA,EACAlsB,EAAAxG,EAAA,GAAA6f,EAAA7f,EAAA,GAAgCwG,EAAAqZ,IAAOrZ,EACvC+E,EAAA/E,IAAAksB,EAAA,GAAAnnB,EAAAvL,GAAAmhB,GAAA3a,GAAAxG,EAAA,KACA0yB,EAAAnnB,EAAA/E,GAAA,OACA+E,EAAA/E,IAAA,IAAAksB,CAEAnnB,GAAA/E,IAAAksB,EACAnnB,EAAAvL,GAAA,EAGA,IADA0yB,EAAA,EACAlsB,EAAA,EAAaA,EAAA,GAAQA,IACrB+E,EAAA/E,IAAAksB,GAAAnnB,EAAA,QAAA4V,GAAA3a,GACAksB,EAAAnnB,EAAA/E,IAAA,EACA+E,EAAA/E,IAAA,GAEA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAA+E,EAAA/E,IAAAksB,EAAAvR,GAAA3a,EACrB,KAAAxG,EAAA,EAAaA,EAAA,GAAQA,IACrBuL,EAAAvL,EAAA,IAAAuL,EAAAvL,IAAA,EACA2jB,EAAA3jB,GAAA,IAAAuL,EAAAvL,GAIA,QAAA2yB,IAAAhP,GACA,GAAA3jB,GAAAuL,EAAA,GAAAqU,cAAA,GACA,KAAA5f,EAAA,EAAaA,EAAA,GAAQA,IAAAuL,EAAAvL,GAAA2jB,EAAA3jB,EACrB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAA2jB,EAAA3jB,GAAA,CACrByyB,IAAA9O,EAAApY,GAIA,QAAAqnB,IAAAC,EAAA1yB,EAAAW,EAAAoxB,GACA,GACAlyB,GAAAwG,EADAnG,EAAA,GAAAyB,YAAA,IAAAmgB,EAAA,GAAAngB,YAAA,IAAA6hB,EAAA,GAAA7hB,YAAA,IACAyJ,EAAA,GAAAqU,cAAA,IACAxe,GAAAguB,qBAEA6C,EAAAO,GAAAN,GAEA1c,EAAA4c,GAAAC,YAAA,QACAD,IAAAE,cAAA9c,EAAA0c,GACA7xB,EAAA+xB,GAAAG,aAAA/c,GACAnV,EAAA,QACAA,EAAA,SACAA,EAAA,OAEA,IAAAyyB,GAAAhyB,EAAA,EACA,KAAAd,EAAA,EAAaA,EAAAc,EAAOd,IAAA6yB,EAAA,GAAA7yB,GAAAG,EAAAH,EACpB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAA6yB,EAAA,GAAA7yB,GAAAK,EAAA,GAAAL,EAUrB,KARAwV,EAAA4c,GAAAC,YAAA,SACAD,GAAAE,cAAA9c,EAAAqd,EAAAhoB,SAAA,KACA8Y,EAAAyO,GAAAG,aAAA/c,GAEAmd,GAAAhP,GACAoO,GAAA3wB,EAAAuiB,GACA6N,GAAAqB,EAAAzxB,GAEApB,EAAA,GAAcA,EAAA,GAAQA,IAAA6yB,EAAA7yB,GAAAiyB,EAAAjyB,EAAA,GAQtB,KANAwV,EAAA4c,GAAAC,YAAA,SACAD,GAAAE,cAAA9c,EAAAqd,GACA5Q,EAAAmQ,GAAAG,aAAA/c,GAEAmd,GAAA1Q,GAEAjiB,EAAA,EAAaA,EAAA,GAAQA,IAAAuL,EAAAvL,GAAA,CACrB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAuL,EAAAvL,GAAA2jB,EAAA3jB,EACrB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IACrB,IAAAwG,EAAA,EAAeA,EAAA,GAAQA,IACvB+E,EAAAvL,EAAAwG,IAAAyb,EAAAjiB,GAAAK,EAAAmG,EAKA,OADAisB,IAAAI,EAAAhoB,SAAA,IAAAU,GACAunB,EAGA,QAAAC,IAAApP,EAAAviB,GACA,GAAAijB,GAAA+K,KAAA4D,EAAA5D,KAAAnD,EAAAmD,KACA6D,EAAA7D,KAAA8D,EAAA9D,KAAA+D,EAAA/D,KACAgE,EAAAhE,IA2BA,OAzBAJ,GAAArL,EAAA,GAAAmO,IACAvC,EAAA5L,EAAA,GAAAviB,GACAge,EAAA6M,EAAAtI,EAAA,IACAjT,EAAAuiB,EAAAhH,EAAA3N,IACAiJ,EAAA0E,IAAAtI,EAAA,IACAnH,EAAAyW,EAAAtP,EAAA,GAAAsP,GAEA7T,EAAA8T,EAAAD,GACA7T,EAAA+T,EAAAD,GACAxiB,EAAA0iB,EAAAD,EAAAD,GACAxiB,EAAA2T,EAAA+O,EAAAnH,GACAvb,EAAA2T,IAAA4O,GAEAxD,EAAApL,KACA3T,EAAA2T,IAAA4H,GACAvb,EAAA2T,IAAA4O,GACAviB,EAAA2T,IAAA4O,GACAviB,EAAAiT,EAAA,GAAAU,EAAA4O,GAEA7T,EAAA4T,EAAArP,EAAA,IACAjT,EAAAsiB,IAAAC,GACA5D,EAAA2D,EAAA/G,IAAAvb,EAAAiT,EAAA,GAAAA,EAAA,GAAAlH,IAEA2C,EAAA4T,EAAArP,EAAA,IACAjT,EAAAsiB,IAAAC,GACA5D,EAAA2D,EAAA/G,IAAA,GAEAqD,EAAA3L,EAAA,MAAAviB,EAAA,QAAAmmB,EAAA5D,EAAA,GAAAkO,GAAAlO,EAAA,IAEAjT,EAAAiT,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,GAGA,QAAA0P,IAAAlzB,EAAA0yB,EAAA/xB,EAAAmxB,GACA,GAAAjyB,GACAqkB,EAAA,GAAAviB,YAAA,IAAAmgB,EAAA,GAAAngB,YAAA,IACAV,GAAAguB,qBACAtK,GAAAsK,oBAGA,KADA,EACAtuB,EAAA,WAEA,IAAAiyB,GAAAjO,EAAAmN,GAAA,QAEA,KAAAjyB,EAAA,EAAaA,EAAAc,EAAOd,IAAAG,EAAAH,GAAA6yB,EAAA7yB,EACpB,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAAAG,EAAAH,EAAA,IAAAiyB,EAAAjyB,EAGrB,IAAAwV,GAAA4c,GAAAC,YAAA,QAYA,IAXAD,GAAAE,cAAA9c,EAAArV,GACA8hB,EAAAmQ,GAAAG,aAAA/c,GAEAmd,GAAA1Q,GACA2P,GAAAxwB,EAAA0jB,EAAA7C,GAEA8P,GAAAjN,EAAA+N,EAAAhoB,SAAA,KACAwmB,EAAAjwB,EAAA0jB,GACA0M,GAAAnN,EAAAjjB,GAEAN,GAAA,GACA8sB,EAAAiF,EAAA,EAAAxO,EAAA,IACA,IAAArkB,EAAA,EAAeA,EAAAc,EAAOd,IAAAG,EAAAH,GAAA,CACtB,UAGA,IAAAA,EAAA,EAAaA,EAAAc,EAAOd,IAAAG,EAAAH,GAAA6yB,EAAA7yB,EAAA,GAEpB,OADAc,GAmEA,QAAAwyB,IAAAzT,EAAA/e,GACA,GAAA+e,EAAAje,SAAA2xB,GAAA,SAAApxB,OAAA,eACA,IAAArB,EAAAc,SAAA4xB,GAAA,SAAArxB,OAAA,kBAGA,QAAAsxB,IAAAxB,EAAAC,GACA,GAAAD,EAAArwB,SAAA8xB,GAAA,SAAAvxB,OAAA,sBACA,IAAA+vB,EAAAtwB,SAAA+xB,GAAA,SAAAxxB,OAAA,uBAGA,QAAAyxB,MACA,OAAA5zB,GAAA,EAAiBA,EAAA+L,UAAAnK,OAAsB5B,IACvC,KAAA+L,UAAA/L,YAAA8B,aACA,SAAAS,WAAA,mCAIA,QAAAsxB,IAAA/tB,GACA,OAAA9F,GAAA,EAAiBA,EAAA8F,EAAAlE,OAAgB5B,IAAA8F,EAAA9F,GAAA,EA78BjC,GAAAqtB,IAAA,SAAApL,EAAAhiB,GAA0BiC,KAAAoI,GAAA,EAAA2X,EAAqB/f,KAAAqI,GAAA,EAAAtK,GAC/CmvB,GAAA,SAAA7S,GACA,GAAAvc,GAAA2jB,EAAA,GAAA/D,cAAA,GACA,IAAArD,EAAA,IAAAvc,EAAA,EAAuBA,EAAAuc,EAAA3a,OAAiB5B,IAAA2jB,EAAA3jB,GAAAuc,EAAAvc,EACxC,OAAA2jB,IAIAsM,GAAA,WAAwC,SAAA9tB,OAAA,YAExCiwB,GAAYzyB,EAAQ,IAEpBwwB,GAAA,GAAAruB,YAAA,IACAiuB,GAAA,GAAAjuB,YAAA,GAA4BiuB,IAAA,IAE5B,IAAA8B,IAAAzC,KACA0C,GAAA1C,IAAA,IACAO,GAAAP,IAAA,UACA9Q,GAAA8Q,IAAA,8FACAkC,GAAAlC,IAAA,4FACA7O,GAAA6O,IAAA,iGACArQ,GAAAqQ,IAAA,kGACA3S,GAAA2S,IAAA,6FAkGAhB,GAAA,GAAAtsB,aAAA,2DAsDA6sB,GAAA,GAAAnP,cACA,sCA+QA6Q,GAAAvB,EACAyB,GAAAxB,EAwEAxK,IACA,GAAA8I,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,yBAAAA,IAAA,qBACA,GAAAA,IAAA,yBAAAA,IAAA,sBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,qBACA,GAAAA,IAAA,yBAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,sBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,yBAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,qBACA,GAAAA,IAAA,wBAAAA,IAAA,sBACA,GAAAA,IAAA,yBAAAA,IAAA,uBACA,GAAAA,IAAA,0BAAAA,IAAA,uBACA,GAAAA,IAAA,yBAAAA,IAAA,wBAqCA+D,GAAA,GAAAtvB,aACA,4BACA,+BACA,8BACA,2BACA,6BACA,2BACA,8BACA,8BAoIAqf,GAAA,GAAAvB,eAAA,6FA4JA2T,GAAA,GACAC,GAAA,GAKAE,GAAA,GACAC,GAAA,GAEAG,GAAAN,EASAvX,GAAA8X,UACA/F,uBACAO,oBACAD,gBACAL,4BACAI,wBACAI,qBACAG,4BACAjB,mBACAC,mBACAkB,mBACAC,wBACAW,oBACAI,yBACAI,sBACAG,sBACAD,aACAE,kBACAN,qBACAmB,cACAyB,eACAZ,uBACAqB,oBAEAE,6BACAC,+BACAQ,2BA1CA,GA2CAC,8BA1CA,GA2CAC,wBA1CA,GA2CAC,8BA1CA,GA2CAT,6BACAC,6BACAS,yBA1CA,GA2CAN,yBACAO,qBAlDA,GAmDAC,wBAlDA,GAmDAC,kBA1CA,GA2CAC,2BA1CA,GA2CAC,2BA1CA,GA2CAC,sBA1CA,GA2CAC,kBA1CA,IAoEA1Y,EAAAC,YAAA,SAAApb,GACA,GAAAwE,GAAA,GAAAxD,YAAAhB,EAEA,OADAmvB,IAAA3qB,EAAAxE,GACAwE,GAGA2W,EAAA2Y,UAAA,SAAAzkB,EAAA0kB,EAAAljB,GACAiiB,GAAAzjB,EAAA0kB,EAAAljB,GACA2hB,GAAA3hB,EAAAkjB,EAGA,QAFA10B,GAAA,GAAA2B,YA3FA,GA2FAqO,EAAAvO,QACAxB,EAAA,GAAA0B,YAAA3B,EAAAyB,QACA5B,EAAA,EAAiBA,EAAAmQ,EAAAvO,OAAgB5B,IAAAG,EAAAH,EA7FjC,IA6FiCmQ,EAAAnQ,EAEjC,OADA8uB,GAAA1uB,EAAAD,IAAAyB,OAAAizB,EAAAljB,GACAvR,EAAAyK,SA9FA,KAiGAoR,EAAA2Y,UAAA9R,KAAA,SAAAgS,EAAAD,EAAAljB,GACAiiB,GAAAkB,EAAAD,EAAAljB,GACA2hB,GAAA3hB,EAAAkjB,EAGA,QAFAz0B,GAAA,GAAA0B,YApGA,GAoGAgzB,EAAAlzB,QACAzB,EAAA,GAAA2B,YAAA1B,EAAAwB,QACA5B,EAAA,EAAiBA,EAAA80B,EAAAlzB,OAAgB5B,IAAAI,EAAAJ,EAtGjC,IAsGiC80B,EAAA90B,EACjC,OAAAI,GAAAwB,OAAA,QACA,IAAAmtB,EAAA5uB,EAAAC,IAAAwB,OAAAizB,EAAAljB,GAAA,KACAxR,EAAA0K,SA1GA,KA6GAoR,EAAA2Y,UAAAG,UAAAxB,GACAtX,EAAA2Y,UAAAI,YAAAxB,GACAvX,EAAA2Y,UAAAK,eA9GA,GAgHAhZ,EAAAiZ,WAAA,SAAAp0B,EAAAM,GAEA,GADAwyB,GAAA9yB,EAAAM,GA/GA,KAgHAN,EAAAc,OAAA,SAAAO,OAAA,aACA,IAlHA,KAkHAf,EAAAQ,OAAA,SAAAO,OAAA,aACA,IAAA2iB,GAAA,GAAAhjB,YAnHA,GAqHA,OADA4tB,GAAA5K,EAAAhkB,EAAAM,GACA0jB,GAGA7I,EAAAiZ,WAAAC,KAAA,SAAAr0B,GAEA,GADA8yB,GAAA9yB,GAxHA,KAyHAA,EAAAc,OAAA,SAAAO,OAAA,aACA,IAAA2iB,GAAA,GAAAhjB,YA3HA,GA6HA,OADAguB,GAAAhL,EAAAhkB,GACAgkB,GAGA7I,EAAAiZ,WAAAE,aA/HA,GAgIAnZ,EAAAiZ,WAAAG,mBAjIA,GAmIApZ,EAAA6Y,IAAA,SAAA3kB,EAAA0kB,EAAAS,EAAAC,GACA,GAAA1V,GAAA5D,EAAA6Y,IAAAU,OAAAF,EAAAC,EACA,OAAAtZ,GAAA2Y,UAAAzkB,EAAA0kB,EAAAhV,IAGA5D,EAAA6Y,IAAAU,OAAA,SAAAF,EAAAC,GACA3B,GAAA0B,EAAAC,GACA9B,GAAA6B,EAAAC,EACA,IAAA1V,GAAA,GAAA/d,YAvIA,GAyIA,OADAouB,GAAArQ,EAAAyV,EAAAC,GACA1V,GAGA5D,EAAA6Y,IAAAW,MAAAxZ,EAAA2Y,UAEA3Y,EAAA6Y,IAAAhS,KAAA,SAAA3S,EAAA0kB,EAAAS,EAAAC,GACA,GAAA1V,GAAA5D,EAAA6Y,IAAAU,OAAAF,EAAAC,EACA,OAAAtZ,GAAA2Y,UAAA9R,KAAA3S,EAAA0kB,EAAAhV,IAGA5D,EAAA6Y,IAAAhS,KAAA2S,MAAAxZ,EAAA2Y,UAAA9R,KAEA7G,EAAA6Y,IAAAY,QAAA,WACA,GAAAzD,GAAA,GAAAnwB,YAAA4xB,IACAxB,EAAA,GAAApwB,YAAA6xB,GAEA,OADA3D,GAAAiC,EAAAC,IACUoD,UAAArD,EAAAsD,UAAArD,IAGVjW,EAAA6Y,IAAAY,QAAAC,cAAA,SAAAJ,GAEA,GADA3B,GAAA2B,GACAA,EAAA3zB,SAAA+xB,GACA,SAAAxxB,OAAA,sBACA,IAAA8vB,GAAA,GAAAnwB,YAAA4xB,GAEA,OADA5D,GAAAmC,EAAAsD,IACUD,UAAArD,EAAAsD,UAAA,GAAAzzB,YAAAyzB,KAGVtZ,EAAA6Y,IAAAc,gBAAAlC,GACAzX,EAAA6Y,IAAAe,gBAAAlC,GACA1X,EAAA6Y,IAAAgB,gBAvKA,GAwKA7Z,EAAA6Y,IAAAE,YAAAlB,GACA7X,EAAA6Y,IAAAG,eAAAhZ,EAAA2Y,UAAAK,eAEAhZ,EAAA8Z,KAAA,SAAA5lB,EAAAolB,GAEA,GADA3B,GAAAzjB,EAAAolB,GAtKA,KAuKAA,EAAA3zB,OACA,SAAAO,OAAA,sBACA,IAAA6zB,GAAA,GAAAl0B,YA3KA,GA2KAqO,EAAAvO,OAEA,OADAgxB,IAAAoD,EAAA7lB,IAAAvO,OAAA2zB,GACAS,GAGA/Z,EAAA8Z,KAAAjT,KAAA,SAAAkT,EAAAV,GAEA,GADA1B,GAAAoC,EAAAV,GAhLA,KAiLAA,EAAA1zB,OACA,SAAAO,OAAA,sBACA,IAAAypB,GAAA,GAAA9pB,YAAAk0B,EAAAp0B,QACAq0B,EAAA5C,GAAAzH,EAAAoK,IAAAp0B,OAAA0zB,EACA,IAAAW,EAAA,aAEA,QADA91B,GAAA,GAAA2B,YAAAm0B,GACAj2B,EAAA,EAAiBA,EAAAG,EAAAyB,OAAc5B,IAAAG,EAAAH,GAAA4rB,EAAA5rB,EAC/B,OAAAG,IAGA8b,EAAA8Z,KAAAG,SAAA,SAAA/lB,EAAAolB,GAGA,OAFAS,GAAA/Z,EAAA8Z,KAAA5lB,EAAAolB,GACAY,EAAA,GAAAr0B,YA9LA,IA+LA9B,EAAA,EAAiBA,EAAAm2B,EAAAv0B,OAAgB5B,IAAAm2B,EAAAn2B,GAAAg2B,EAAAh2B,EACjC,OAAAm2B,IAGAla,EAAA8Z,KAAAG,SAAAE,OAAA,SAAAjmB,EAAAgmB,EAAAb,GAEA,GADA1B,GAAAzjB,EAAAgmB,EAAAb,GApMA,KAqMAa,EAAAv0B,OACA,SAAAO,OAAA,qBACA,IAtMA,KAsMAmzB,EAAA1zB,OACA,SAAAO,OAAA,sBACA,IAEAnC,GAFA6yB,EAAA,GAAA/wB,YAzMA,GAyMAqO,EAAAvO,QACAzB,EAAA,GAAA2B,YA1MA,GA0MAqO,EAAAvO,OAEA,KAAA5B,EAAA,EAAaA,EA5Mb,GA4MoCA,IAAA6yB,EAAA7yB,GAAAm2B,EAAAn2B,EACpC,KAAAA,EAAA,EAAaA,EAAAmQ,EAAAvO,OAAgB5B,IAAA6yB,EAAA7yB,EA7M7B,IA6M6BmQ,EAAAnQ,EAC7B,OAAAqzB,IAAAlzB,EAAA0yB,IAAAjxB,OAAA0zB,IAAA,GAGArZ,EAAA8Z,KAAAL,QAAA,WACA,GAAAzD,GAAA,GAAAnwB,YAjNA,IAkNAowB,EAAA,GAAApwB,YAjNA,GAmNA,OADAkwB,IAAAC,EAAAC,IACUoD,UAAArD,EAAAsD,UAAArD,IAGVjW,EAAA8Z,KAAAL,QAAAC,cAAA,SAAAJ,GAEA,GADA3B,GAAA2B,GAvNA,KAwNAA,EAAA3zB,OACA,SAAAO,OAAA,sBACA,IAAA8vB,GAAA,GAAAnwB,YA3NA,GA6NA,OADAmwB,GAAAO,GAAA+C,IACUD,UAAArD,EAAAsD,UAAA,GAAAzzB,YAAAyzB,KAGVtZ,EAAA8Z,KAAAL,QAAAW,SAAA,SAAAra,GAEA,GADA4X,GAAA5X,GA/NA,KAgOAA,EAAApa,OACA,SAAAO,OAAA,gBAGA,QAFA8vB,GAAA,GAAAnwB,YApOA,IAqOAowB,EAAA,GAAApwB,YApOA,IAqOA9B,EAAA,EAAiBA,EAAA,GAAQA,IAAAkyB,EAAAlyB,GAAAgc,EAAAhc,EAEzB,OADAgyB,IAAAC,EAAAC,GAAA,IACUoD,UAAArD,EAAAsD,UAAArD,IAGVjW,EAAA8Z,KAAAH,gBA3OA,GA4OA3Z,EAAA8Z,KAAAF,gBA3OA,GA4OA5Z,EAAA8Z,KAAAO,WA3OA,GA4OAra,EAAA8Z,KAAAQ,gBA/OA,GAiPAta,EAAAua,KAAA,SAAArmB,GACAyjB,GAAAzjB,EACA,IAAA8R,GAAA,GAAAngB,YA/OA,GAiPA,OADAqvB,GAAAlP,EAAA9R,IAAAvO,QACAqgB,GAGAhG,EAAAua,KAAAC,WApPA,GAsPAxa,EAAAma,OAAA,SAAA7qB,EAAAC,GAGA,MAFAooB,IAAAroB,EAAAC,GAEA,IAAAD,EAAA3J,QAAA,IAAA4J,EAAA5J,SACA2J,EAAA3J,SAAA4J,EAAA5J,QACA,IAAA4rB,EAAAjiB,EAAA,EAAAC,EAAA,EAAAD,EAAA3J,UAGAqa,EAAAya,QAAA,SAAArlB,GACA4e,GAAA5e,GAGA,WAGA,GAAA0X,GAAA,oBAAA7T,WAAA6T,QAAA7T,KAAAyhB,SAAA,IACA,IAAA5N,KAAAC,gBAAA,CAGA/M,EAAAya,QAAA,SAAAnrB,EAAAzK,GACA,GAAAd,GAAA+kB,EAAA,GAAAjjB,YAAAhB,EACA,KAAAd,EAAA,EAAiBA,EAAAc,EAAOd,GAHxB,MAIA+oB,EAAAC,gBAAAjE,EAAAla,SAAA7K,IAAA2H,KAAAC,IAAA9G,EAAAd,EAJA,QAMA,KAAAA,EAAA,EAAiBA,EAAAc,EAAOd,IAAAuL,EAAAvL,GAAA+kB,EAAA/kB,EACxB6zB,IAAA9O,UAIAgE,EAAappB,EAAQ,MACrBopB,EAAA7M,aACAD,EAAAya,QAAA,SAAAnrB,EAAAzK,GACA,GAAAd,GAAA+kB,EAAAgE,EAAA7M,YAAApb,EACA,KAAAd,EAAA,EAAmBA,EAAAc,EAAOd,IAAAuL,EAAAvL,GAAA+kB,EAAA/kB,EAC1B6zB,IAAA9O,SAMC,oBAAAhlB,MAAAD,QAAAC,EAAAD,QAAAoV,KAAA+G,KAAA/G,KAAA+G,Wf0uGK,SAAUlc,EAAQD,EAASH,GgB75IjC,GAAAi3B,GAAUj3B,EAAQ,IAClBk3B,EAAUl3B,EAAQ,GAElBI,GAAAD,SACAg3B,QAAAF,EAAAE,QACAC,WAAAH,EAAAG,WACA1E,YAAAuE,EAAAvE,YACAC,cAAAsE,EAAAtE,cACAC,aAAAqE,EAAArE,aACAyE,QAAAH,EAAAG,QACAC,WAAAJ,EAAAI,WACAC,YAAAL,EAAAK,YACAC,cAAAN,EAAAM,cACAC,aAAAP,EAAAO,ehBq6IM,SAAUr3B,EAAQD,EAASH,GiBz6IjC,QAAA03B,GAAAtS,EAAAzZ,EAAAhG,GACA,GAAAgyB,GAAAvS,EAAAzZ,GAAAyZ,EAAAzf,GACAiyB,EAAAxS,EAAAzZ,EAAA,GAAAyZ,EAAAzf,EAAA,EACAgyB,IAAA,YACAC,IAEAxS,EAAAzZ,GAAAgsB,EACAvS,EAAAzZ,EAAA,GAAAisB,EAMA,QAAAC,GAAAzS,EAAAzZ,EAAAmsB,EAAAC,GACA,GAAAJ,GAAAvS,EAAAzZ,GAAAmsB,CACAA,GAAA,IACAH,GAAA,WAEA,IAAAC,GAAAxS,EAAAzZ,EAAA,GAAAosB,CACAJ,IAAA,YACAC,IAEAxS,EAAAzZ,GAAAgsB,EACAvS,EAAAzZ,EAAA,GAAAisB,EAIA,QAAAI,GAAA7xB,EAAA9F,GACA,MAAA8F,GAAA9F,GACA8F,EAAA9F,EAAA,MACA8F,EAAA9F,EAAA,OACA8F,EAAA9F,EAAA,OAKA,QAAA43B,GAAAtsB,EAAAhG,EAAAlF,EAAAC,EAAAw3B,EAAAC,GACA,GAAAC,GAAA53B,EAAA03B,GACAG,EAAA73B,EAAA03B,EAAA,GACAI,EAAA93B,EAAA23B,GACAI,EAAA/3B,EAAA23B,EAAA,EAEAT,GAAAtS,EAAAzZ,EAAAhG,GACAkyB,EAAAzS,EAAAzZ,EAAAysB,EAAAC,EAGA,IAAAG,GAAApT,EAAA1kB,GAAA0kB,EAAAzZ,GACA8sB,EAAArT,EAAA1kB,EAAA,GAAA0kB,EAAAzZ,EAAA,EACAyZ,GAAA1kB,GAAA+3B,EACArT,EAAA1kB,EAAA,GAAA83B,EAEAd,EAAAtS,EAAA3kB,EAAAC,GAGA83B,EAAApT,EAAAzf,GAAAyf,EAAA3kB,GACAg4B,EAAArT,EAAAzf,EAAA,GAAAyf,EAAA3kB,EAAA,GACA2kB,EAAAzf,GAAA6yB,IAAA,GAAAC,GAAA,EACArT,EAAAzf,EAAA,GAAA8yB,IAAA,GAAAD,GAAA,EAEAd,EAAAtS,EAAAzZ,EAAAhG,GACAkyB,EAAAzS,EAAAzZ,EAAA2sB,EAAAC,GAGAC,EAAApT,EAAA1kB,GAAA0kB,EAAAzZ,GACA8sB,EAAArT,EAAA1kB,EAAA,GAAA0kB,EAAAzZ,EAAA,GACAyZ,EAAA1kB,GAAA83B,IAAA,GAAAC,GAAA,GACArT,EAAA1kB,EAAA,GAAA+3B,IAAA,GAAAD,GAAA,GAEAd,EAAAtS,EAAA3kB,EAAAC,GAGA83B,EAAApT,EAAAzf,GAAAyf,EAAA3kB,GACAg4B,EAAArT,EAAAzf,EAAA,GAAAyf,EAAA3kB,EAAA,GACA2kB,EAAAzf,GAAA8yB,IAAA,GAAAD,GAAA,EACApT,EAAAzf,EAAA,GAAA6yB,IAAA,GAAAC,GAAA,EAmCA,QAAAC,GAAAC,EAAAC,GACA,GAAAv4B,GAAA,CAGA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IACrB+kB,EAAA/kB,GAAAs4B,EAAArW,EAAAjiB,GACA+kB,EAAA/kB,EAAA,IAAAw4B,EAAAx4B,EAeA,KAXA+kB,EAAA,IAAAA,EAAA,IAAAuT,EAAAjU,EACAU,EAAA,IAAAA,EAAA,IAAAuT,EAAAjU,EAAA,WAIAkU,IACAxT,EAAA,KAAAA,EAAA,IACAA,EAAA,KAAAA,EAAA,KAIA/kB,EAAA,EAAaA,EAAA,GAAQA,IACrBG,EAAAH,GAAA23B,EAAAW,EAAAhzB,EAAA,EAAAtF,EAOA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAErB43B,EAAA,UAAAa,EAAA,GAAAz4B,EAAA,GAAAy4B,EAAA,GAAAz4B,EAAA,IACA43B,EAAA,WAAAa,EAAA,GAAAz4B,EAAA,GAAAy4B,EAAA,GAAAz4B,EAAA,IACA43B,EAAA,WAAAa,EAAA,GAAAz4B,EAAA,GAAAy4B,EAAA,GAAAz4B,EAAA,IACA43B,EAAA,WAAAa,EAAA,GAAAz4B,EAAA,GAAAy4B,EAAA,GAAAz4B,EAAA,IACA43B,EAAA,WAAAa,EAAA,GAAAz4B,EAAA,GAAAy4B,EAAA,GAAAz4B,EAAA,IACA43B,EAAA,WAAAa,EAAA,GAAAz4B,EAAA,IAAAy4B,EAAA,GAAAz4B,EAAA,KACA43B,EAAA,WAAAa,EAAA,GAAAz4B,EAAA,IAAAy4B,EAAA,GAAAz4B,EAAA,KACA43B,EAAA,UAAAa,EAAA,GAAAz4B,EAAA,IAAAy4B,EAAA,GAAAz4B,EAAA,IAIA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IACrBs4B,EAAArW,EAAAjiB,GAAAs4B,EAAArW,EAAAjiB,GAAA+kB,EAAA/kB,GAAA+kB,EAAA/kB,EAAA,IAQA,QAAAqyB,GAAAqG,EAAA/mB,GACA,OAAA+mB,KAAA,GACA,SAAAv2B,OAAA,mDAEA,IAAAwP,KAAA/P,OAAA,GACA,SAAAO,OAAA,yDAaA,QATAm2B,IACAhzB,EAAA,GAAAxD,YAAA,KACAmgB,EAAA,GAAAzC,aAAA,IACA6E,EAAA,EACAjkB,EAAA,EACAs4B,UAIA14B,EAAA,EAAiBA,EAAA,GAAQA,IACzBs4B,EAAArW,EAAAjiB,GAAAw4B,EAAAx4B,EAEA,IAAA24B,GAAAhnB,IAAA/P,OAAA,CAUA,OATA02B,GAAArW,EAAA,aAAA0W,GAAA,EAAAD,EAGA/mB,IACA2gB,EAAAgG,EAAA3mB,GAEA2mB,EAAAl4B,EAAA,KAGAk4B,EAKA,QAAAhG,GAAAgG,EAAA1oB,GACA,OAAA5P,GAAA,EAAiBA,EAAA4P,EAAAhO,OAAkB5B,IACnC,MAAAs4B,EAAAl4B,IACAk4B,EAAAjU,GAAAiU,EAAAl4B,EACAi4B,EAAAC,GAAA,GACAA,EAAAl4B,EAAA,GAEAk4B,EAAAhzB,EAAAgzB,EAAAl4B,KAAAwP,EAAA5P,GAMA,QAAAuyB,GAAA+F,GAGA,IAFAA,EAAAjU,GAAAiU,EAAAl4B,EAEAk4B,EAAAl4B,EAAA,KACAk4B,EAAAhzB,EAAAgzB,EAAAl4B,KAAA,CAEAi4B,GAAAC,GAAA,EAIA,QADA1vB,GAAA,GAAA9G,YAAAw2B,EAAAI,QACA14B,EAAA,EAAiBA,EAAAs4B,EAAAI,OAAgB14B,IACjC4I,EAAA5I,GAAAs4B,EAAArW,EAAAjiB,GAAA,SAAAA,EAEA,OAAA4I,GAWA,QAAAkuB,GAAAlnB,EAAA+B,EAAA+mB,GAEAA,KAAA,GACA9oB,EAAAgpB,EAAAjpB,eAAAC,EAGA,IAAA0oB,GAAAjG,EAAAqG,EAAA/mB,EAEA,OADA2gB,GAAAgG,EAAA1oB,GACA2iB,EAAA+F,GAWA,QAAAvB,GAAAnnB,EAAA+B,EAAA+mB,GACA,GAAAtM,GAAA0K,EAAAlnB,EAAA+B,EAAA+mB,EACA,OAAAE,GAAA/vB,MAAAujB,GAnQA,GAAAwM,GAAWj5B,EAAQ,GAmFnB64B,EAAA,GAAAhZ,cACA,4CACA,4CACA,2CACA,4CAGAqZ,GACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,uCAMAJ,EAAA,GAAA32B,YAAA+2B,EAAA/oB,IAAA,SAAAvE,GAAsD,SAAAA,KAItDwZ,EAAA,GAAAvF,aAAA,IACArf,EAAA,GAAAqf,aAAA,GAqJAzf,GAAAD,SACAg3B,UACAC,aACA1E,cACAC,gBACAC,iBjB07IM,SAAUxyB,EAAQD,EAASH,GkBhsJjC,QAAAm5B,GAAA/T,EAAA/kB,GACA,MAAA+kB,GAAA/kB,GAAA+kB,EAAA/kB,EAAA,MAAA+kB,EAAA/kB,EAAA,OAAA+kB,EAAA/kB,EAAA,OAIA,QAAA+4B,GAAAztB,EAAAhG,EAAAlF,EAAAC,EAAAkL,EAAAC,GACAuZ,EAAAzZ,GAAAyZ,EAAAzZ,GAAAyZ,EAAAzf,GAAAiG,EACAwZ,EAAA1kB,GAAA24B,EAAAjU,EAAA1kB,GAAA0kB,EAAAzZ,GAAA,IACAyZ,EAAA3kB,GAAA2kB,EAAA3kB,GAAA2kB,EAAA1kB,GACA0kB,EAAAzf,GAAA0zB,EAAAjU,EAAAzf,GAAAyf,EAAA3kB,GAAA,IACA2kB,EAAAzZ,GAAAyZ,EAAAzZ,GAAAyZ,EAAAzf,GAAAkG,EACAuZ,EAAA1kB,GAAA24B,EAAAjU,EAAA1kB,GAAA0kB,EAAAzZ,GAAA,GACAyZ,EAAA3kB,GAAA2kB,EAAA3kB,GAAA2kB,EAAA1kB,GACA0kB,EAAAzf,GAAA0zB,EAAAjU,EAAAzf,GAAAyf,EAAA3kB,GAAA,GAMA,QAAA44B,GAAAztB,EAAAC,GACA,MAAAD,KAAAC,EAAAD,GAAA,GAAAC,EAuBA,QAAAytB,GAAAX,EAAAC,GACA,GAAAv4B,GAAA,CACA,KAAAA,EAAA,EAAaA,EAAA,EAAOA,IACpB+kB,EAAA/kB,GAAAs4B,EAAArW,EAAAjiB,GACA+kB,EAAA/kB,EAAA,GAAAk5B,EAAAl5B,EASA,KANA+kB,EAAA,KAAAuT,EAAAjU,EACAU,EAAA,KAAAuT,EAAAjU,EAAA,WACAkU,IACAxT,EAAA,KAAAA,EAAA,KAGA/kB,EAAA,EAAaA,EAAA,GAAQA,IACrBG,EAAAH,GAAA84B,EAAAR,EAAAhzB,EAAA,EAAAtF,EAOA,KAAAA,EAAA,EAAaA,EAAA,GAAQA,IAErB+4B,EAAA,SAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,IAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,KACA+4B,EAAA,SAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,IAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,KACA+4B,EAAA,UAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,IAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,KACA+4B,EAAA,UAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,IAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,KACA+4B,EAAA,UAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,IAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,KACA+4B,EAAA,UAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,KAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,MACA+4B,EAAA,SAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,KAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,MACA+4B,EAAA,SAAA54B,EAAAg5B,EAAA,GAAAn5B,EAAA,KAAAG,EAAAg5B,EAAA,GAAAn5B,EAAA,KAIA,KAAAA,EAAA,EAAaA,EAAA,EAAOA,IACpBs4B,EAAArW,EAAAjiB,IAAA+kB,EAAA/kB,GAAA+kB,EAAA/kB,EAAA,GAQA,QAAAk3B,GAAAwB,EAAA/mB,GACA,KAAA+mB,EAAA,GAAAA,GAAA,IACA,SAAAv2B,OAAA,gDAEA,IAAAw2B,GAAAhnB,IAAA/P,OAAA,CACA,IAAA+P,KAAAgnB,EAAA,GAAAA,GAAA,IACA,SAAAx2B,OAAA,6CAGA,IAAAm2B,IACArW,EAAA,GAAAzC,aAAA0Z,GACA5zB,EAAA,GAAAka,aAAA,IACApf,EAAA,EACAikB,EAAA,EACAqU,SASA,OAPAJ,GAAArW,EAAA,aAAA0W,GAAA,EAAAD,EAEAC,EAAA,IACAxB,EAAAmB,EAAA3mB,GACA2mB,EAAAl4B,EAAA,IAGAk4B,EAKA,QAAAnB,GAAAmB,EAAA1oB,GACA,OAAA5P,GAAA,EAAiBA,EAAA4P,EAAAhO,OAAkB5B,IACnC,KAAAs4B,EAAAl4B,IACAk4B,EAAAjU,GAAAiU,EAAAl4B,EACA64B,EAAAX,GAAA,GACAA,EAAAl4B,EAAA,GAEAk4B,EAAAhzB,EAAAgzB,EAAAl4B,KAAAwP,EAAA5P,GAMA,QAAAo3B,GAAAkB,GAEA,IADAA,EAAAjU,GAAAiU,EAAAl4B,EACAk4B,EAAAl4B,EAAA,IACAk4B,EAAAhzB,EAAAgzB,EAAAl4B,KAAA,CAEA64B,GAAAX,GAAA,EAIA,QADA1vB,GAAA,GAAA9G,YAAAw2B,EAAAI,QACA14B,EAAA,EAAiBA,EAAAs4B,EAAAI,OAAgB14B,IACjC4I,EAAA5I,GAAAs4B,EAAArW,EAAAjiB,GAAA,SAAAA,GAAA,GAEA,OAAA4I,GAWA,QAAAouB,GAAApnB,EAAA+B,EAAA+mB,GAEAA,KAAA,GACA9oB,EAAAgpB,EAAAjpB,eAAAC,EAGA,IAAA0oB,GAAApB,EAAAwB,EAAA/mB,EAEA,OADAwlB,GAAAmB,EAAA1oB,GACAwnB,EAAAkB,GAWA,QAAArB,GAAArnB,EAAA+B,EAAA+mB,GACA,GAAAtM,GAAA4K,EAAApnB,EAAA+B,EAAA+mB,EACA,OAAAE,GAAA/vB,MAAAujB,GAhLA,GAAAwM,GAAWj5B,EAAQ,GA6BnBu5B,EAAA,GAAA1Z,cACA,4CACA,6CAEA2Z,EAAA,GAAAr3B,aACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,wCAGAijB,EAAA,GAAAvF,aAAA,IACArf,EAAA,GAAAqf,aAAA,GAoIAzf,GAAAD,SACAk3B,UACAC,aACAC,cACAC,gBACAC,iBlBitJM,SAAUr3B,EAAQD","file":"d8d624181420bac13641.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(4);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(10)\nvar ieee754 = __webpack_require__(11)\nvar isArray = __webpack_require__(12)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__NanoGenerator__ = __webpack_require__(6);\nfunction _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function main(){var _this=this;var findWallet=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(prefix){var generated_prefix,now,wallet,nanogenerator;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:generated_prefix=null;now=null;wallet=null;start=Date.now();nanogenerator=new __WEBPACK_IMPORTED_MODULE_1__NanoGenerator__[\"a\" /* default */]();_context.next=7;return nanogenerator.initialize();case 7:do{attempts++;now=Date.now();wallet=nanogenerator.generateWallet();generated_prefix=wallet.public_address.substring(5,5+prefix.length);if(now>nextUpdate){aps=attempts-lastAttempts;lastAttempts=attempts;nextUpdate=now+1000;elapsed=(now-start)/1000;postMessage({action:'update',attempts:attempts,aps:aps,elapsed:elapsed,average_aps:attempts/elapsed});}}while(generated_prefix!==prefix);finished=Date.now();return _context.abrupt('return',wallet);case 10:case'end':return _context.stop();}}},_callee,this);}));return function findWallet(_x){return _ref.apply(this,arguments);};}();var attempts=0;var nextUpdate=0;var lastAttempts=0;var aps=0;var start=0;var finished=0;var elapsed=0;addEventListener('message',function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(event){var prefix,wallet;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(event.data.action==='start')){_context2.next=7;break;}prefix=event.data.params.prefix;_context2.next=4;return findWallet(prefix);case 4:wallet=_context2.sent;elapsed=(finished-start)/1000;postMessage({action:'finished',wallet:wallet,attempts:attempts,aps:aps,elapsed:elapsed,average_aps:attempts/elapsed});case 7:case'end':return _context2.stop();}}},_callee2,_this);}));return function(_x2){return _ref2.apply(this,arguments);};}());}main();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(5);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_nanocurrency__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_tweetnacl_nacl__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_tweetnacl_nacl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_tweetnacl_nacl__);\nfunction _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function uint8_hex(uint8){var hex=\"\";var aux=null;for(var i=0;i<uint8.length;i++){aux=uint8[i].toString(16);if(aux.length===1)aux='0'+aux;hex+=aux;aux='';}return hex.toUpperCase();}var NanoGenerator=function NanoGenerator(){var _this=this;_classCallCheck(this,NanoGenerator);this.initialize=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return __WEBPACK_IMPORTED_MODULE_1_nanocurrency__[\"d\" /* init */]();case 2:case'end':return _context.stop();}}},_callee,_this);}));this.generateWallet=function(){var wallet={};wallet.seed=uint8_hex(__WEBPACK_IMPORTED_MODULE_2_tweetnacl_nacl___default.a.randomBytes(32));wallet.secret_key=__WEBPACK_IMPORTED_MODULE_1_nanocurrency__[\"c\" /* deriveSecretKey */](wallet.seed,0);wallet.public_key=__WEBPACK_IMPORTED_MODULE_1_nanocurrency__[\"b\" /* derivePublicKey */](wallet.secret_key);wallet.public_address=__WEBPACK_IMPORTED_MODULE_1_nanocurrency__[\"a\" /* deriveAddress */](wallet.public_key);return wallet;};};/* harmony default export */ __webpack_exports__[\"a\"] = (NanoGenerator);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process, Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return init; });\n/* unused harmony export isReady */\n/* unused harmony export checkBalance */\n/* unused harmony export checkSeed */\n/* unused harmony export checkHash */\n/* unused harmony export checkKey */\n/* unused harmony export checkAddress */\n/* unused harmony export checkWork */\n/* unused harmony export checkSignature */\n/* unused harmony export work */\n/* unused harmony export validateWork */\n/* unused harmony export generateSeed */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return deriveSecretKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return derivePublicKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return deriveAddress; });\n/* unused harmony export hashReceiveBlock */\n/* unused harmony export hashOpenBlock */\n/* unused harmony export hashChangeBlock */\n/* unused harmony export hashSendBlock */\n/* unused harmony export signBlock */\n/* unused harmony export verifyBlock */\n/* unused harmony export createOpenBlock */\n/* unused harmony export createReceiveBlock */\n/* unused harmony export createSendBlock */\n/* unused harmony export createChangeBlock */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_fs__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_fs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_fs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_path__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_path__);\n/*!\n* nanocurrency-js v1.7.4: A toolkit for the Nano cryptocurrency.\n* Copyright (c) 2018 Marvin ROGER <dev at marvinroger dot fr>\n* Licensed under GPL-3.0 (https://git.io/vAZsK)\n*/\nfunction commonjsRequire(){throw new Error(\"Dynamic requires are not currently supported by rollup-plugin-commonjs\")}function createCommonjsModule(A,I){return A(I={exports:{}},I.exports),I.exports}var native_tmp=createCommonjsModule(function(A,I){A.exports=function(A){var I;A=A||{},I||(I=void 0!==A?A:{});var g,C={};for(g in I)I.hasOwnProperty(g)&&(C[g]=I[g]);I.arguments=[],I.thisProgram=\"./this.program\",I.quit=function(A,I){throw I},I.preRun=[],I.postRun=[];var B,Q,E=!1,i=!1,o=!1,h=!1;if(I.ENVIRONMENT)if(\"WEB\"===I.ENVIRONMENT)E=!0;else if(\"WORKER\"===I.ENVIRONMENT)i=!0;else if(\"NODE\"===I.ENVIRONMENT)o=!0;else{if(\"SHELL\"!==I.ENVIRONMENT)throw Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\");h=!0}else E=\"object\"==typeof window,i=\"function\"==typeof importScripts,o=\"object\"==typeof process&&\"function\"==typeof commonjsRequire&&!E&&!i,h=!E&&!o&&!i;o?(I.read=function(A,I){var g=z(A);return g||(B||(B=__WEBPACK_IMPORTED_MODULE_0_fs___default.a),Q||(Q=__WEBPACK_IMPORTED_MODULE_1_path___default.a),A=Q.normalize(A),g=B.readFileSync(A)),I?g:g.toString()},I.readBinary=function(A){return(A=I.read(A,!0)).buffer||(A=new Uint8Array(A)),a(A.buffer),A},1<process.argv.length&&(I.thisProgram=process.argv[1].replace(/\\\\/g,\"/\")),I.arguments=process.argv.slice(2),process.on(\"uncaughtException\",function(A){if(!(A instanceof T))throw A}),process.on(\"unhandledRejection\",function(){process.exit(1)}),I.inspect=function(){return\"[Emscripten Module object]\"}):h?(\"undefined\"!=typeof read&&(I.read=function(A){var I=z(A);return I?W(I):read(A)}),I.readBinary=function(A){var I;return(I=z(A))?I:\"function\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(a(\"object\"==typeof(I=read(A,\"binary\"))),I)},\"undefined\"!=typeof scriptArgs?I.arguments=scriptArgs:void 0!==arguments&&(I.arguments=arguments),\"function\"==typeof quit&&(I.quit=function(A){quit(A)})):(E||i)&&(I.read=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){if(A=z(A))return W(A);throw I}},i&&(I.readBinary=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){if(A=z(A))return A;throw I}}),I.readAsync=function(A,I,g){var C=new XMLHttpRequest;C.open(\"GET\",A,!0),C.responseType=\"arraybuffer\",C.onload=function(){if(200==C.status||0==C.status&&C.response)I(C.response);else{var B=z(A);B?I(B.buffer):g()}},C.onerror=g,C.send(null)},void 0!==arguments&&(I.arguments=arguments),I.setWindowTitle=function(A){document.title=A});for(g in I.print=\"undefined\"!=typeof console?console.log.bind(console):\"undefined\"!=typeof print?print:null,I.printErr=\"undefined\"!=typeof printErr?printErr:\"undefined\"!=typeof console&&console.warn.bind(console)||I.print,I.print=I.print,I.printErr=I.printErr,C)C.hasOwnProperty(g)&&(I[g]=C[g]);function D(A){var I;return I||(I=16),Math.ceil(A/I)*I}C=void 0;var w=0;function a(A,I){A||$(\"Assertion failed: \"+I)}function F(A){var g=I[\"_\"+A];return a(g,\"Cannot call unknown function \"+A+\", make sure it is exported\"),g}var G={stackSave:function(){V()},stackRestore:function(){O()},arrayToC:function(A){var I=j(A.length);return H.set(A,I),I},stringToC:function(A){var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2),C=I=j(g),B=S;if(0<g){g=C+g-1;for(var Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(55296<=E&&57343>=E&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),127>=E){if(C>=g)break;B[C++]=E}else{if(2047>=E){if(C+1>=g)break;B[C++]=192|E>>6}else{if(65535>=E){if(C+2>=g)break;B[C++]=224|E>>12}else{if(2097151>=E){if(C+3>=g)break;B[C++]=240|E>>18}else{if(67108863>=E){if(C+4>=g)break;B[C++]=248|E>>24}else{if(C+5>=g)break;B[C++]=252|E>>30,B[C++]=128|E>>24&63}B[C++]=128|E>>18&63}B[C++]=128|E>>12&63}B[C++]=128|E>>6&63}B[C++]=128|63&E}}B[C]=0}}return I}},c={string:G.stringToC,array:G.arrayToC};var f,H,S,Y,y,s,n,e,r,M,U=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function N(){I.HEAP8=H=new Int8Array(f),I.HEAP16=Y=new Int16Array(f),I.HEAP32=y=new Int32Array(f),I.HEAPU8=S=new Uint8Array(f),I.HEAPU16=new Uint16Array(f),I.HEAPU32=new Uint32Array(f),I.HEAPF32=new Float32Array(f),I.HEAPF64=new Float64Array(f)}\"undefined\"!=typeof TextDecoder&&new TextDecoder(\"utf-16le\"),s=e=0,n=!1;var t=I.TOTAL_STACK||5242880,K=I.TOTAL_MEMORY||16777216;if(K<t&&I.printErr(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+K+\"! (TOTAL_STACK=\"+t+\")\"),I.buffer?f=I.buffer:(\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Memory?(I.wasmMemory=new WebAssembly.Memory({initial:K/65536,maximum:K/65536}),f=I.wasmMemory.buffer):f=new ArrayBuffer(K),I.buffer=f),N(),y[0]=1668509029,Y[1]=25459,115!==S[2]||99!==S[3])throw\"Runtime error: expected the system to be little-endian!\";function k(A){for(;0<A.length;){var g=A.shift();if(\"function\"==typeof g)g();else{var C=g.f;\"number\"==typeof C?void 0===g.a?I.dynCall_v(C):I.dynCall_vi(C,g.a):C(void 0===g.a?null:g.a)}}}var J=[],R=[],L=[],q=[],d=[],l=!1;function P(){var A=I.preRun.shift();J.unshift(A)}var x=0,v=null,m=null;I.preloadedImages={},I.preloadedAudios={};var X=\"data:application/octet-stream;base64,\";function p(A){return String.prototype.startsWith?A.startsWith(X):0===A.indexOf(X)}!function(){function A(){try{if(I.wasmBinary)return new Uint8Array(I.wasmBinary);var A=z(Q);if(A)return A;if(I.readBinary)return I.readBinary(Q);throw\"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\"}catch(A){$(A)}}function g(){return I.wasmBinary||!E&&!i||\"function\"!=typeof fetch?new Promise(function(I){I(A())}):fetch(Q,{credentials:\"same-origin\"}).then(function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return A.arrayBuffer()}).catch(function(){return A()})}function C(A){function C(A){if((D=A.exports).memory){A=D.memory;var g=I.buffer;A.byteLength<g.byteLength&&I.printErr(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\"),g=new Int8Array(g),new Int8Array(A).set(g),I.buffer=f=A,N()}I.asm=D,I.usingWasm=!0,x--,I.monitorRunDependencies&&I.monitorRunDependencies(x),0==x&&(null!==v&&(clearInterval(v),v=null),m&&(A=m,m=null,A()))}function B(A){C(A.instance)}function E(A){g().then(function(A){return WebAssembly.instantiate(A,h)}).then(A).catch(function(A){I.printErr(\"failed to asynchronously prepare wasm: \"+A),$(A)})}if(\"object\"!=typeof WebAssembly)return I.printErr(\"no native wasm support detected\"),!1;if(!(I.wasmMemory instanceof WebAssembly.Memory))return I.printErr(\"no native wasm Memory in use\"),!1;if(A.memory=I.wasmMemory,h.global={NaN:NaN,Infinity:1/0},h[\"global.Math\"]=Math,h.env=A,x++,I.monitorRunDependencies&&I.monitorRunDependencies(x),I.instantiateWasm)try{return I.instantiateWasm(h,C)}catch(A){return I.printErr(\"Module.instantiateWasm callback failed with error: \"+A),!1}return I.wasmBinary||\"function\"!=typeof WebAssembly.instantiateStreaming||p(Q)||\"function\"!=typeof fetch?E(B):WebAssembly.instantiateStreaming(fetch(Q,{credentials:\"same-origin\"}),h).then(B).catch(function(A){I.printErr(\"wasm streaming compile failed: \"+A),I.printErr(\"falling back to ArrayBuffer instantiation\"),E(B)}),{}}var B=\"\",Q=\"data:application/octet-stream;base64,\",o=\"\";\"function\"==typeof I.locateFile&&(p(B)||(B=I.locateFile(B)),p(Q)||(Q=I.locateFile(Q)),p(o)||(o=I.locateFile(o)));var h={global:null,env:null,asm2wasm:{\"f64-rem\":function(A,I){return A%I},debugger:function(){}},parent:I},D=null;I.asmPreload=I.asm;var w=I.reallocBuffer;I.reallocBuffer=function(A){if(\"asmjs\"===a)var g=w(A);else A:{var C=I.usingWasm?65536:16777216;if(0<A%C&&(A+=C-A%C),C=I.buffer.byteLength,I.usingWasm)try{g=-1!==I.wasmMemory.grow((A-C)/65536)?I.buffer=I.wasmMemory.buffer:null;break A}catch(A){g=null;break A}g=void 0}return g};var a=\"\";I.asm=function(A,g){if(!g.table){void 0===(A=I.wasmTableSize)&&(A=1024);var B=I.wasmMaxTableSize;g.table=\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Table?void 0!==B?new WebAssembly.Table({initial:A,maximum:B,element:\"anyfunc\"}):new WebAssembly.Table({initial:A,element:\"anyfunc\"}):Array(A),I.wasmTable=g.table}return g.memoryBase||(g.memoryBase=I.STATIC_BASE),g.tableBase||(g.tableBase=0),(g=C(g))||$(\"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods\"),g}}(),s=37424,R.push(),I.STATIC_BASE=1024,I.STATIC_BUMP=36400,s+=16,a(!n),M=s,r=D((e=D(s=s+4+15&-16))+t),y[M>>2]=r,n=!0;var u=!1;function W(A){for(var I=[],g=0;g<A.length;g++){var C=A[g];255<C&&(u&&a(!1,\"Character code \"+C+\" (\"+String.fromCharCode(C)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),C&=255),I.push(String.fromCharCode(C))}return I.join(\"\")}var b=\"function\"==typeof atob?atob:function(A){var I=\"\",g=0;A=A.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++)),B=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++)),Q=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++)),E=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++));C=C<<2|B>>4,B=(15&B)<<4|Q>>2;var i=(3&Q)<<6|E;I+=String.fromCharCode(C),64!==Q&&(I+=String.fromCharCode(B)),64!==E&&(I+=String.fromCharCode(i))}while(g<A.length);return I};function z(A){if(p(A)){if(A=A.slice(X.length),\"boolean\"==typeof o&&o){try{var I=Buffer.from(A,\"base64\")}catch(g){I=new Buffer(A,\"base64\")}var g=new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}else try{var C=b(A),B=new Uint8Array(C.length);for(I=0;I<C.length;++I)B[I]=C.charCodeAt(I);g=B}catch(A){throw Error(\"Converting base64 string to bytes failed.\")}return g}}I.wasmTableSize=4,I.wasmMaxTableSize=4,I.b={},I.c={abort:$,_emscripten_memcpy_big:function(A,I,g){return S.set(S.subarray(I,I+g),A),A},STACKTOP:e};var Z=I.asm(I.b,I.c,f);I.asm=Z,I._emscripten_convert_amount_decimal_integer_to_hex=function(){return I.asm._emscripten_convert_amount_decimal_integer_to_hex.apply(null,arguments)},I._emscripten_derive_address=function(){return I.asm._emscripten_derive_address.apply(null,arguments)},I._emscripten_derive_public_key=function(){return I.asm._emscripten_derive_public_key.apply(null,arguments)},I._emscripten_derive_secret_key=function(){return I.asm._emscripten_derive_secret_key.apply(null,arguments)},I._emscripten_hash_change_block=function(){return I.asm._emscripten_hash_change_block.apply(null,arguments)},I._emscripten_hash_open_block=function(){return I.asm._emscripten_hash_open_block.apply(null,arguments)},I._emscripten_hash_receive_block=function(){return I.asm._emscripten_hash_receive_block.apply(null,arguments)},I._emscripten_hash_send_block=function(){return I.asm._emscripten_hash_send_block.apply(null,arguments)},I._emscripten_sign_block=function(){return I.asm._emscripten_sign_block.apply(null,arguments)},I._emscripten_validate_work=function(){return I.asm._emscripten_validate_work.apply(null,arguments)},I._emscripten_verify_block=function(){return I.asm._emscripten_verify_block.apply(null,arguments)},I._emscripten_work=function(){return I.asm._emscripten_work.apply(null,arguments)};var j=I.stackAlloc=function(){return I.asm.stackAlloc.apply(null,arguments)},O=I.stackRestore=function(){return I.asm.stackRestore.apply(null,arguments)},V=I.stackSave=function(){return I.asm.stackSave.apply(null,arguments)};function T(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function _(){function A(){if(!I.calledRun&&(I.calledRun=!0,!w)){if(l||(l=!0,k(R)),k(L),I.onRuntimeInitialized&&I.onRuntimeInitialized(),I.postRun)for(\"function\"==typeof I.postRun&&(I.postRun=[I.postRun]);I.postRun.length;){var A=I.postRun.shift();d.unshift(A)}k(d)}}if(!(0<x)){if(I.preRun)for(\"function\"==typeof I.preRun&&(I.preRun=[I.preRun]);I.preRun.length;)P();k(J),0<x||I.calledRun||(I.setStatus?(I.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){I.setStatus(\"\")},1),A()},1)):A())}}function $(A){throw I.onAbort&&I.onAbort(A),void 0!==A?(I.print(A),I.printErr(A),A=JSON.stringify(A)):A=\"\",w=!0,\"abort(\"+A+\"). Build with -s ASSERTIONS=1 for more info.\"}if(I.asm=Z,I.cwrap=function(A,I,g){g=g||[];var C=F(A),B=g.every(function(A){return\"number\"===A});return\"string\"!==I&&B?C:function(){var C=g,B=arguments,Q=F(A),E=[],i=0;if(B)for(var o=0;o<B.length;o++){var h=c[C[o]];h?(0===i&&(i=V()),E[o]=h(B[o])):E[o]=B[o]}return C=Q.apply(null,E),\"string\"===I&&(C=function(A){var I;if(0===I||!A)return\"\";for(var g,C=0,B=0;C|=g=S[A+B>>0],(0!=g||I)&&(B++,!I||B!=I););if(I||(I=B),g=\"\",128>C){for(;0<I;)C=String.fromCharCode.apply(String,S.subarray(A,A+Math.min(I,1024))),g=g?g+C:C,A+=1024,I-=1024;return g}A:{for(I=S,C=A;I[C];)++C;if(16<C-A&&I.subarray&&U)A=U.decode(I.subarray(A,C));else for(C=\"\";;){if(!(g=I[A++])){A=C;break A}if(128&g)if(B=63&I[A++],192==(224&g))C+=String.fromCharCode((31&g)<<6|B);else{var Q=63&I[A++];if(224==(240&g))g=(15&g)<<12|B<<6|Q;else{var E=63&I[A++];if(240==(248&g))g=(7&g)<<18|B<<12|Q<<6|E;else{var i=63&I[A++];g=248==(252&g)?(3&g)<<24|B<<18|Q<<12|E<<6|i:(1&g)<<30|B<<24|Q<<18|E<<12|i<<6|63&I[A++]}}65536>g?C+=String.fromCharCode(g):(g-=65536,C+=String.fromCharCode(55296|g>>10,56320|1023&g))}else C+=String.fromCharCode(g)}}return A}(C)),0!==i&&O(i),C}},I.then=function(A){if(I.calledRun)A(I);else{var g=I.onRuntimeInitialized;I.onRuntimeInitialized=function(){g&&g(),A(I)}}return I},T.prototype=Error(),T.prototype.constructor=T,m=function A(){I.calledRun||_(),I.calledRun||(m=A)},I.run=_,I.exit=function(A,g){g&&I.noExitRuntime&&0===A||(!I.noExitRuntime&&(w=!0,e=void 0,k(q),I.onExit)&&I.onExit(A),o&&process.exit(A),I.quit(A,new T(A)))},I.abort=$,I.preInit)for(\"function\"==typeof I.preInit&&(I.preInit=[I.preInit]);0<I.preInit.length;)I.preInit.pop()();return I.noExitRuntime=!0,_(),A}}),IS_NODE=\"[object process]\"===Object.prototype.toString.call(\"undefined\"!=typeof process?process:0),fillRandom=null;if(IS_NODE){var ref=__webpack_require__(15),promisify=ref.promisify;fillRandom=promisify(__webpack_require__(16).randomFill)}else fillRandom=function(A){return new Promise(function(I){self.crypto.getRandomValues(A),I()})};function getRandomBytes(A){return new Promise(function(I,g){var C=new Uint8Array(A);fillRandom(C).then(function(){I(C)}).catch(g)})}var instance=null,_work=null,_validateWork=null,_deriveSecretKey=null,_derivePublicKey=null,_deriveAddress=null,_hashReceiveBlock=null,_hashOpenBlock=null,_hashChangeBlock=null,_hashSendBlock=null,_signBlock=null,_verifyBlock=null,_convertAmountDecimalIntegerToHex=null;function init(){return new Promise(function(A,I){try{native_tmp().then(function(I){_work=(instance=I).cwrap(\"emscripten_work\",\"string\",[\"string\",\"number\",\"number\"]),_validateWork=instance.cwrap(\"emscripten_validate_work\",\"number\",[\"string\",\"string\"]),_deriveSecretKey=instance.cwrap(\"emscripten_derive_secret_key\",\"string\",[\"string\",\"number\"]),_derivePublicKey=instance.cwrap(\"emscripten_derive_public_key\",\"string\",[\"string\"]),_deriveAddress=instance.cwrap(\"emscripten_derive_address\",\"string\",[\"string\"]),_hashReceiveBlock=instance.cwrap(\"emscripten_hash_receive_block\",\"string\",[\"string\",\"string\"]),_hashOpenBlock=instance.cwrap(\"emscripten_hash_open_block\",\"string\",[\"string\",\"string\",\"string\"]),_hashChangeBlock=instance.cwrap(\"emscripten_hash_change_block\",\"string\",[\"string\",\"string\"]),_hashSendBlock=instance.cwrap(\"emscripten_hash_send_block\",\"string\",[\"string\",\"string\",\"string\"]),_signBlock=instance.cwrap(\"emscripten_sign_block\",\"string\",[\"string\",\"string\"]),_verifyBlock=instance.cwrap(\"emscripten_verify_block\",\"number\",[\"string\",\"string\",\"string\"]),_convertAmountDecimalIntegerToHex=instance.cwrap(\"emscripten_convert_amount_decimal_integer_to_hex\",\"string\",[\"string\"]),A()})}catch(A){I(A)}})}function isReady(){return null!==instance}function checkNotInitialized(){if(!isReady())throw new Error(\"NanoCurrency is not initialized\")}function checkString(A){return\"string\"==typeof A}function checkBalance(A){if(!checkString(A)||A.length>39)return!1;for(var I=0,g=A;I<g.length;I+=1){var C=g[I];if(C<\"0\"||C>\"9\")return!1}return!0}function checkSeed(A){return checkString(A)&&/[0-9a-fA-F]{64}/.test(A)}function checkHash(A){return checkSeed(A)}function checkKey(A){return checkSeed(A)}function checkAddress(A){return checkString(A)&&/xrb_[13][0-9a-km-uw-z]{59}/.test(A)}function checkWork(A){return checkString(A)&&/[0-9a-fA-F]{16}/.test(A)}function checkSignature(A){return checkString(A)&&/[0-9a-fA-F]{128}/.test(A)}function work(A,I,g){if(void 0===I&&(I=0),void 0===g&&(g=1),checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!Number.isInteger(I)||!Number.isInteger(g)||I<0||g<1||I>g-1)throw new Error(\"Worker parameters are not valid\");var C=_work(A,I,g);return\"0000000000000000\"!==C?C:null}function validateWork(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!checkWork(I))throw new Error(\"Work is not valid\");return 1===_validateWork(A,I)}function generateSeed(){return new Promise(function(A,I){getRandomBytes(32).then(function(I){var g=I.reduce(function(A,I){return A+(\"0\"+I.toString(16)).slice(-2)},\"\");A(g)}).catch(I)})}function deriveSecretKey(A,I){if(checkNotInitialized(),!checkSeed(A))throw new Error(\"Seed is not valid\");if(!Number.isInteger(I)||I<0)throw new Error(\"Index is not valid\");return _deriveSecretKey(A,I)}function derivePublicKey(A){if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");return _derivePublicKey(A)}function deriveAddress(A){if(checkNotInitialized(),!checkKey(A))throw new Error(\"Public key is not valid\");return _deriveAddress(A)}function hashReceiveBlock(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Previous is not valid\");if(!checkHash(I))throw new Error(\"Source is not valid\");return _hashReceiveBlock(A,I)}function hashOpenBlock(A,I,g){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Source is not valid\");if(!checkAddress(I))throw new Error(\"Representative is not valid\");if(!checkAddress(g))throw new Error(\"Account is not valid\");return _hashOpenBlock(A,I,g)}function hashChangeBlock(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Previous is not valid\");if(!checkAddress(I))throw new Error(\"Representative is not valid\");return _hashChangeBlock(A,I)}function hashSendBlock(A,I,g){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Previous is not valid\");if(!checkAddress(I))throw new Error(\"Destination is not valid\");if(!checkBalance(g))throw new Error(\"Balance is not valid\");return _hashSendBlock(A,I,g)}function signBlock(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!checkKey(I))throw new Error(\"Secret key is not valid\");return _signBlock(A,I)}function verifyBlock(A,I,g){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!checkSignature(I))throw new Error(\"Signature is not valid\");if(!checkKey(g))throw new Error(\"Public key is not valid\");return 1===_verifyBlock(A,I,g)}function createOpenBlock(A,I){var g=I.work,C=I.source,B=I.representative;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Source is not valid\");if(!checkAddress(B))throw new Error(\"Representative is not valid\");var Q=deriveAddress(derivePublicKey(A)),E=hashOpenBlock(C,B,Q);return{hash:E,block:{type:\"open\",source:C,representative:B,account:Q,work:g,signature:signBlock(E,A)}}}function createReceiveBlock(A,I){var g=I.work,C=I.previous,B=I.source;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Previous is not valid\");if(!checkHash(B))throw new Error(\"Source is not valid\");var Q=hashReceiveBlock(C,B);return{hash:Q,block:{type:\"receive\",previous:C,source:B,work:g,signature:signBlock(Q,A)}}}function createSendBlock(A,I){var g=I.work,C=I.previous,B=I.destination,Q=I.balance;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Previous is not valid\");if(!checkAddress(B))throw new Error(\"Destination is not valid\");if(!checkBalance(Q))throw new Error(\"Balance is not valid\");var E=hashSendBlock(C,B,Q),i=signBlock(E,A);return{hash:E,block:{type:\"send\",previous:C,destination:B,balance:_convertAmountDecimalIntegerToHex(Q),work:g,signature:i}}}function createChangeBlock(A,I){var g=I.work,C=I.previous,B=I.representative;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Previous is not valid\");if(!checkAddress(B))throw new Error(\"Representative is not valid\");var Q=hashChangeBlock(C,B);return{hash:Q,block:{type:\"change\",previous:C,representative:B,work:g,signature:signBlock(Q,A)}}}\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(8), __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar u64 = function(h, l) { this.hi = h|0 >>> 0; this.lo = l|0 >>> 0; };\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n  \nvar blake = __webpack_require__(18);\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }\n\nfunction ld32(x, i) {\n  var u = x[i+3] & 0xff;\n  u = (u<<8)|(x[i+2] & 0xff);\n  u = (u<<8)|(x[i+1] & 0xff);\n  return (u<<8)|(x[i+0] & 0xff);\n}\n\nfunction dl64(x, i) {\n  var h = (x[i] << 24) | (x[i+1] << 16) | (x[i+2] << 8) | x[i+3];\n  var l = (x[i+4] << 24) | (x[i+5] << 16) | (x[i+6] << 8) | x[i+7];\n  return new u64(h, l);\n}\n\nfunction st32(x, j, u) {\n  var i;\n  for (i = 0; i < 4; i++) { x[j+i] = u & 255; u >>>= 8; }\n}\n\nfunction ts64(x, i, u) {\n  x[i]   = (u.hi >> 24) & 0xff;\n  x[i+1] = (u.hi >> 16) & 0xff;\n  x[i+2] = (u.hi >>  8) & 0xff;\n  x[i+3] = u.hi & 0xff;\n  x[i+4] = (u.lo >> 24)  & 0xff;\n  x[i+5] = (u.lo >> 16)  & 0xff;\n  x[i+6] = (u.lo >>  8)  & 0xff;\n  x[i+7] = u.lo & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core(out,inp,k,c,h) {\n  var w = new Uint32Array(16), x = new Uint32Array(16),\n      y = new Uint32Array(16), t = new Uint32Array(4);\n  var i, j, m;\n\n  for (i = 0; i < 4; i++) {\n    x[5*i] = ld32(c, 4*i);\n    x[1+i] = ld32(k, 4*i);\n    x[6+i] = ld32(inp, 4*i);\n    x[11+i] = ld32(k, 16+4*i);\n  }\n\n  for (i = 0; i < 16; i++) y[i] = x[i];\n\n  for (i = 0; i < 20; i++) {\n    for (j = 0; j < 4; j++) {\n      for (m = 0; m < 4; m++) t[m] = x[(5*j+4*m)%16];\n      t[1] ^= L32((t[0]+t[3])|0, 7);\n      t[2] ^= L32((t[1]+t[0])|0, 9);\n      t[3] ^= L32((t[2]+t[1])|0,13);\n      t[0] ^= L32((t[3]+t[2])|0,18);\n      for (m = 0; m < 4; m++) w[4*j+(j+m)%4] = t[m];\n    }\n    for (m = 0; m < 16; m++) x[m] = w[m];\n  }\n\n  if (h) {\n    for (i = 0; i < 16; i++) x[i] = (x[i] + y[i]) | 0;\n    for (i = 0; i < 4; i++) {\n      x[5*i] = (x[5*i] - ld32(c, 4*i)) | 0;\n      x[6+i] = (x[6+i] - ld32(inp, 4*i)) | 0;\n    }\n    for (i = 0; i < 4; i++) {\n      st32(out,4*i,x[5*i]);\n      st32(out,16+4*i,x[6+i]);\n    }\n  } else {\n    for (i = 0; i < 16; i++) st32(out, 4 * i, (x[i] + y[i]) | 0);\n  }\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core(out,inp,k,c,false);\n  return 0;\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core(out,inp,k,c,true);\n  return 0;\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  if (!b) return 0;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    if (m) mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,d,n,k) {\n  return crypto_stream_salsa20_xor(c,cpos,null,0,d,n,k);\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20(c,cpos,d,n.subarray(16),s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,n.subarray(16),s);\n}\n\nfunction add1305(h, c) {\n  var j, u = 0;\n  for (j = 0; j < 17; j++) {\n    u = (u + ((h[j] + c[j]) | 0)) | 0;\n    h[j] = u & 255;\n    u >>>= 8;\n  }\n}\n\nvar minusp = new Uint32Array([\n  5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252\n]);\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s, i, j, u;\n  var x = new Uint32Array(17), r = new Uint32Array(17),\n      h = new Uint32Array(17), c = new Uint32Array(17),\n      g = new Uint32Array(17);\n  for (j = 0; j < 17; j++) r[j]=h[j]=0;\n  for (j = 0; j < 16; j++) r[j]=k[j];\n  r[3]&=15;\n  r[4]&=252;\n  r[7]&=15;\n  r[8]&=252;\n  r[11]&=15;\n  r[12]&=252;\n  r[15]&=15;\n\n  while (n > 0) {\n    for (j = 0; j < 17; j++) c[j] = 0;\n    for (j = 0; (j < 16) && (j < n); ++j) c[j] = m[mpos+j];\n    c[j] = 1;\n    mpos += j; n -= j;\n    add1305(h,c);\n    for (i = 0; i < 17; i++) {\n      x[i] = 0;\n      for (j = 0; j < 17; j++) x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j])|0))) | 0) | 0;\n    }\n    for (i = 0; i < 17; i++) h[i] = x[i];\n    u = 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u & 3;\n    u = (5 * (u >>> 2)) | 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u;\n  }\n\n  for (j = 0; j < 17; j++) g[j] = h[j];\n  add1305(h,minusp);\n  s = (-(h[16] >>> 7) | 0);\n  for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);\n\n  for (j = 0; j < 16; j++) c[j] = k[j + 16];\n  c[16] = 0;\n  add1305(h,c);\n  for (j = 0; j < 16; j++) out[outpos+j] = h[j];\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var c;\n  var i;\n  for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n  }\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n}\n\nfunction Z(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n}\n\nfunction M(o, a, b) {\n  var i, j, t = new Float64Array(31);\n  for (i = 0; i < 31; i++) t[i] = 0;\n  for (i = 0; i < 16; i++) {\n    for (j = 0; j < 16; j++) {\n      t[i+j] += a[i] * b[j];\n    }\n  }\n  for (i = 0; i < 15; i++) {\n    t[i] += 38 * t[i+16];\n  }\n  for (i = 0; i < 16; i++) o[i] = t[i];\n  car25519(o);\n  car25519(o);\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nfunction add64() {\n  var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;\n  for (i = 0; i < arguments.length; i++) {\n    l = arguments[i].lo;\n    h = arguments[i].hi;\n    a += (l & m16); b += (l >>> 16);\n    c += (h & m16); d += (h >>> 16);\n  }\n\n  b += (a >>> 16);\n  c += (b >>> 16);\n  d += (c >>> 16);\n\n  return new u64((c & m16) | (d << 16), (a & m16) | (b << 16));\n}\n\nfunction shr64(x, c) {\n  return new u64((x.hi >>> c), (x.lo >>> c) | (x.hi << (32 - c)));\n}\n\nfunction xor64() {\n  var l = 0, h = 0, i;\n  for (i = 0; i < arguments.length; i++) {\n    l ^= arguments[i].lo;\n    h ^= arguments[i].hi;\n  }\n  return new u64(h, l);\n}\n\nfunction R(x, c) {\n  var h, l, c1 = 32 - c;\n  if (c < 32) {\n    h = (x.hi >>> c) | (x.lo << c1);\n    l = (x.lo >>> c) | (x.hi << c1);\n  } else if (c < 64) {\n    h = (x.lo >>> c) | (x.hi << c1);\n    l = (x.hi >>> c) | (x.lo << c1);\n  }\n  return new u64(h, l);\n}\n\nfunction Ch(x, y, z) {\n  var h = (x.hi & y.hi) ^ (~x.hi & z.hi),\n      l = (x.lo & y.lo) ^ (~x.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Maj(x, y, z) {\n  var h = (x.hi & y.hi) ^ (x.hi & z.hi) ^ (y.hi & z.hi),\n      l = (x.lo & y.lo) ^ (x.lo & z.lo) ^ (y.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Sigma0(x) { return xor64(R(x,28), R(x,34), R(x,39)); }\nfunction Sigma1(x) { return xor64(R(x,14), R(x,18), R(x,41)); }\nfunction sigma0(x) { return xor64(R(x, 1), R(x, 8), shr64(x,7)); }\nfunction sigma1(x) { return xor64(R(x,19), R(x,61), shr64(x,6)); }\n\nvar K = [\n  new u64(0x428a2f98, 0xd728ae22), new u64(0x71374491, 0x23ef65cd),\n  new u64(0xb5c0fbcf, 0xec4d3b2f), new u64(0xe9b5dba5, 0x8189dbbc),\n  new u64(0x3956c25b, 0xf348b538), new u64(0x59f111f1, 0xb605d019),\n  new u64(0x923f82a4, 0xaf194f9b), new u64(0xab1c5ed5, 0xda6d8118),\n  new u64(0xd807aa98, 0xa3030242), new u64(0x12835b01, 0x45706fbe),\n  new u64(0x243185be, 0x4ee4b28c), new u64(0x550c7dc3, 0xd5ffb4e2),\n  new u64(0x72be5d74, 0xf27b896f), new u64(0x80deb1fe, 0x3b1696b1),\n  new u64(0x9bdc06a7, 0x25c71235), new u64(0xc19bf174, 0xcf692694),\n  new u64(0xe49b69c1, 0x9ef14ad2), new u64(0xefbe4786, 0x384f25e3),\n  new u64(0x0fc19dc6, 0x8b8cd5b5), new u64(0x240ca1cc, 0x77ac9c65),\n  new u64(0x2de92c6f, 0x592b0275), new u64(0x4a7484aa, 0x6ea6e483),\n  new u64(0x5cb0a9dc, 0xbd41fbd4), new u64(0x76f988da, 0x831153b5),\n  new u64(0x983e5152, 0xee66dfab), new u64(0xa831c66d, 0x2db43210),\n  new u64(0xb00327c8, 0x98fb213f), new u64(0xbf597fc7, 0xbeef0ee4),\n  new u64(0xc6e00bf3, 0x3da88fc2), new u64(0xd5a79147, 0x930aa725),\n  new u64(0x06ca6351, 0xe003826f), new u64(0x14292967, 0x0a0e6e70),\n  new u64(0x27b70a85, 0x46d22ffc), new u64(0x2e1b2138, 0x5c26c926),\n  new u64(0x4d2c6dfc, 0x5ac42aed), new u64(0x53380d13, 0x9d95b3df),\n  new u64(0x650a7354, 0x8baf63de), new u64(0x766a0abb, 0x3c77b2a8),\n  new u64(0x81c2c92e, 0x47edaee6), new u64(0x92722c85, 0x1482353b),\n  new u64(0xa2bfe8a1, 0x4cf10364), new u64(0xa81a664b, 0xbc423001),\n  new u64(0xc24b8b70, 0xd0f89791), new u64(0xc76c51a3, 0x0654be30),\n  new u64(0xd192e819, 0xd6ef5218), new u64(0xd6990624, 0x5565a910),\n  new u64(0xf40e3585, 0x5771202a), new u64(0x106aa070, 0x32bbd1b8),\n  new u64(0x19a4c116, 0xb8d2d0c8), new u64(0x1e376c08, 0x5141ab53),\n  new u64(0x2748774c, 0xdf8eeb99), new u64(0x34b0bcb5, 0xe19b48a8),\n  new u64(0x391c0cb3, 0xc5c95a63), new u64(0x4ed8aa4a, 0xe3418acb),\n  new u64(0x5b9cca4f, 0x7763e373), new u64(0x682e6ff3, 0xd6b2b8a3),\n  new u64(0x748f82ee, 0x5defb2fc), new u64(0x78a5636f, 0x43172f60),\n  new u64(0x84c87814, 0xa1f0ab72), new u64(0x8cc70208, 0x1a6439ec),\n  new u64(0x90befffa, 0x23631e28), new u64(0xa4506ceb, 0xde82bde9),\n  new u64(0xbef9a3f7, 0xb2c67915), new u64(0xc67178f2, 0xe372532b),\n  new u64(0xca273ece, 0xea26619c), new u64(0xd186b8c7, 0x21c0c207),\n  new u64(0xeada7dd6, 0xcde0eb1e), new u64(0xf57d4f7f, 0xee6ed178),\n  new u64(0x06f067aa, 0x72176fba), new u64(0x0a637dc5, 0xa2c898a6),\n  new u64(0x113f9804, 0xbef90dae), new u64(0x1b710b35, 0x131c471b),\n  new u64(0x28db77f5, 0x23047d84), new u64(0x32caab7b, 0x40c72493),\n  new u64(0x3c9ebe0a, 0x15c9bebc), new u64(0x431d67c4, 0x9c100d4c),\n  new u64(0x4cc5d4be, 0xcb3e42b6), new u64(0x597f299c, 0xfc657e2a),\n  new u64(0x5fcb6fab, 0x3ad6faec), new u64(0x6c44198c, 0x4a475817)\n];\n\nfunction crypto_hashblocks(x, m, n) {\n  var z = [], b = [], a = [], w = [], t, i, j;\n\n  for (i = 0; i < 8; i++) z[i] = a[i] = dl64(x, 8*i);\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) w[i] = dl64(m, 8*i+pos);\n    for (i = 0; i < 80; i++) {\n      for (j = 0; j < 8; j++) b[j] = a[j];\n      t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i%16]);\n      b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\n      b[3] = add64(b[3], t);\n      for (j = 0; j < 8; j++) a[(j+1)%8] = b[j];\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          w[j] = add64(w[j], w[(j+9)%16], sigma0(w[(j+1)%16]), sigma1(w[(j+14)%16]));\n        }\n      }\n    }\n\n    for (i = 0; i < 8; i++) {\n      a[i] = add64(a[i], z[i]);\n      z[i] = a[i];\n    }\n\n    pos += 128;\n    n -= 128;\n  }\n\n  for (i = 0; i < 8; i++) ts64(x, 8*i, z[i]);\n  return n;\n}\n\nvar iv = new Uint8Array([\n  0x6a,0x09,0xe6,0x67,0xf3,0xbc,0xc9,0x08,\n  0xbb,0x67,0xae,0x85,0x84,0xca,0xa7,0x3b,\n  0x3c,0x6e,0xf3,0x72,0xfe,0x94,0xf8,0x2b,\n  0xa5,0x4f,0xf5,0x3a,0x5f,0x1d,0x36,0xf1,\n  0x51,0x0e,0x52,0x7f,0xad,0xe6,0x82,0xd1,\n  0x9b,0x05,0x68,0x8c,0x2b,0x3e,0x6c,0x1f,\n  0x1f,0x83,0xd9,0xab,0xfb,0x41,0xbd,0x6b,\n  0x5b,0xe0,0xcd,0x19,0x13,0x7e,0x21,0x79\n]);\n\nfunction crypto_hash(out, m, n) {\n  var h = new Uint8Array(64), x = new Uint8Array(256);\n  var i, b = n;\n\n  for (i = 0; i < 64; i++) h[i] = iv[i];\n\n  crypto_hashblocks(h, m, n);\n  n %= 128;\n\n  for (i = 0; i < 256; i++) x[i] = 0;\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8, new u64((b / 0x20000000) | 0, b << 3));\n  crypto_hashblocks(h, x, n);\n\n  for (i = 0; i < 64; i++) out[i] = h[i];\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  \n  var context = blake.blake2bInit(64);\n  blake.blake2bUpdate(context, sk);\n  d = blake.blake2bFinal(context);\n  \n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  \n  scalarbase(p, d);\n  pack(pk, p);\n\n  return 0;\n}\n\nfunction derivePublicFromSecret(sk)\n{\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n  var pk = new Uint8Array(32);\n  var context = blake.blake2bInit(64);\n  blake.blake2bUpdate(context, sk);\n  d = blake.blake2bFinal(context);\n  \n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  \n  scalarbase(p, d);\n  pack(pk, p);\n  return pk;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  \n  var pk = derivePublicFromSecret(sk);\n\n  var context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, sk);\n  d = blake.blake2bFinal(context);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, sm.subarray(32));\n  r = blake.blake2bFinal(context);\n  \n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = pk[i-32];\n  \n  context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, sm);\n  h = blake.blake2bFinal(context);\n  \n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  //crypto_hash(h, m, n);\n  \n  var context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, m);\n  h = blake.blake2bFinal(context);\n  \n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 32,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  pk = derivePublicFromSecret(secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(21);\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar b2b = __webpack_require__(19)\nvar b2s = __webpack_require__(20)\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = __webpack_require__(2)\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = __webpack_require__(2)\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// d8d624181420bac13641.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d8d624181420bac13641","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 0\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 1\n// module chunks = 0","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/blakejs/util.js\n// module id = 2\n// module chunks = 0","import NanoGenerator from './NanoGenerator';\n\nfunction main() {\n    let attempts = 0;\n    let nextUpdate = 0;\n    let lastAttempts = 0;\n    let aps = 0;\n    let start = 0;\n    let finished = 0;\n    let elapsed = 0;\n\n    async function findWallet(prefix) {\n        let generated_prefix = null;\n        let now = null;\n        let wallet = null;\n\n        start = Date.now();\n\n        const nanogenerator = new NanoGenerator();\n        await nanogenerator.initialize();\n\n        do {\n            attempts++;\n            now = Date.now();\n            wallet = nanogenerator.generateWallet();\n            generated_prefix = wallet.public_address.substring(5, 5 + prefix.length);\n\n            if (now > nextUpdate) {\n                aps = attempts - lastAttempts;\n                lastAttempts = attempts;\n                nextUpdate = now + 1000;\n                elapsed = ((now-start)/1000);\n                postMessage({\n                    action:'update',\n                    attempts:attempts,\n                    aps:aps,\n                    elapsed:elapsed,\n                    average_aps:attempts/elapsed,\n                });\n            }\n        } while (generated_prefix !== prefix);\n\n        finished = Date.now();\n\n        return wallet;\n    }\n\n    addEventListener('message', async (event) => { // eslint-disable-line no-restricted-globals\n        if (event.data.action === 'start') {\n            const prefix = event.data.params.prefix;\n            const wallet = await findWallet(prefix);\n            elapsed = (finished-start)/1000;\n            postMessage({\n                action:'finished',\n                wallet:wallet,\n                attempts:attempts,\n                aps:aps,\n                elapsed:elapsed,\n                average_aps:attempts/elapsed,\n            });\n        }\n    })\n}\n\nmain();\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/app.worker.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 4\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 5\n// module chunks = 0","import * as nanocurrency from 'nanocurrency';\nimport nacl from 'tweetnacl/nacl';\n\nfunction uint8_hex (uint8) {\n    let hex = \"\";\n    let aux = null;\n    for (let i = 0; i < uint8.length; i++)\n    {\n        aux = uint8[i].toString(16);\n        if(aux.length === 1)\n            aux = '0'+aux;\n        hex += aux;\n        aux = '';\n    }\n    return(hex.toUpperCase());\n}\n\nclass NanoGenerator {\n    initialize = async () => {\n        await nanocurrency.init();\n    };\n\n    generateWallet = () => {\n        let wallet = {};\n        wallet.seed = uint8_hex(nacl.randomBytes(32));\n        wallet.secret_key = nanocurrency.deriveSecretKey(wallet.seed, 0);\n        wallet.public_key = nanocurrency.derivePublicKey(wallet.secret_key);\n        wallet.public_address = nanocurrency.deriveAddress(wallet.public_key);\n        return wallet;\n    };\n}\n\nexport default NanoGenerator;\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/NanoGenerator.js","/*!\n* nanocurrency-js v1.7.4: A toolkit for the Nano cryptocurrency.\n* Copyright (c) 2018 Marvin ROGER <dev at marvinroger dot fr>\n* Licensed under GPL-3.0 (https://git.io/vAZsK)\n*/\nimport fs from\"fs\";import path from\"path\";function commonjsRequire(){throw new Error(\"Dynamic requires are not currently supported by rollup-plugin-commonjs\")}function createCommonjsModule(A,I){return A(I={exports:{}},I.exports),I.exports}var native_tmp=createCommonjsModule(function(A,I){A.exports=function(A){var I;A=A||{},I||(I=void 0!==A?A:{});var g,C={};for(g in I)I.hasOwnProperty(g)&&(C[g]=I[g]);I.arguments=[],I.thisProgram=\"./this.program\",I.quit=function(A,I){throw I},I.preRun=[],I.postRun=[];var B,Q,E=!1,i=!1,o=!1,h=!1;if(I.ENVIRONMENT)if(\"WEB\"===I.ENVIRONMENT)E=!0;else if(\"WORKER\"===I.ENVIRONMENT)i=!0;else if(\"NODE\"===I.ENVIRONMENT)o=!0;else{if(\"SHELL\"!==I.ENVIRONMENT)throw Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\");h=!0}else E=\"object\"==typeof window,i=\"function\"==typeof importScripts,o=\"object\"==typeof process&&\"function\"==typeof commonjsRequire&&!E&&!i,h=!E&&!o&&!i;o?(I.read=function(A,I){var g=z(A);return g||(B||(B=fs),Q||(Q=path),A=Q.normalize(A),g=B.readFileSync(A)),I?g:g.toString()},I.readBinary=function(A){return(A=I.read(A,!0)).buffer||(A=new Uint8Array(A)),a(A.buffer),A},1<process.argv.length&&(I.thisProgram=process.argv[1].replace(/\\\\/g,\"/\")),I.arguments=process.argv.slice(2),process.on(\"uncaughtException\",function(A){if(!(A instanceof T))throw A}),process.on(\"unhandledRejection\",function(){process.exit(1)}),I.inspect=function(){return\"[Emscripten Module object]\"}):h?(\"undefined\"!=typeof read&&(I.read=function(A){var I=z(A);return I?W(I):read(A)}),I.readBinary=function(A){var I;return(I=z(A))?I:\"function\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(a(\"object\"==typeof(I=read(A,\"binary\"))),I)},\"undefined\"!=typeof scriptArgs?I.arguments=scriptArgs:void 0!==arguments&&(I.arguments=arguments),\"function\"==typeof quit&&(I.quit=function(A){quit(A)})):(E||i)&&(I.read=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){if(A=z(A))return W(A);throw I}},i&&(I.readBinary=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){if(A=z(A))return A;throw I}}),I.readAsync=function(A,I,g){var C=new XMLHttpRequest;C.open(\"GET\",A,!0),C.responseType=\"arraybuffer\",C.onload=function(){if(200==C.status||0==C.status&&C.response)I(C.response);else{var B=z(A);B?I(B.buffer):g()}},C.onerror=g,C.send(null)},void 0!==arguments&&(I.arguments=arguments),I.setWindowTitle=function(A){document.title=A});for(g in I.print=\"undefined\"!=typeof console?console.log.bind(console):\"undefined\"!=typeof print?print:null,I.printErr=\"undefined\"!=typeof printErr?printErr:\"undefined\"!=typeof console&&console.warn.bind(console)||I.print,I.print=I.print,I.printErr=I.printErr,C)C.hasOwnProperty(g)&&(I[g]=C[g]);function D(A){var I;return I||(I=16),Math.ceil(A/I)*I}C=void 0;var w=0;function a(A,I){A||$(\"Assertion failed: \"+I)}function F(A){var g=I[\"_\"+A];return a(g,\"Cannot call unknown function \"+A+\", make sure it is exported\"),g}var G={stackSave:function(){V()},stackRestore:function(){O()},arrayToC:function(A){var I=j(A.length);return H.set(A,I),I},stringToC:function(A){var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2),C=I=j(g),B=S;if(0<g){g=C+g-1;for(var Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(55296<=E&&57343>=E&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),127>=E){if(C>=g)break;B[C++]=E}else{if(2047>=E){if(C+1>=g)break;B[C++]=192|E>>6}else{if(65535>=E){if(C+2>=g)break;B[C++]=224|E>>12}else{if(2097151>=E){if(C+3>=g)break;B[C++]=240|E>>18}else{if(67108863>=E){if(C+4>=g)break;B[C++]=248|E>>24}else{if(C+5>=g)break;B[C++]=252|E>>30,B[C++]=128|E>>24&63}B[C++]=128|E>>18&63}B[C++]=128|E>>12&63}B[C++]=128|E>>6&63}B[C++]=128|63&E}}B[C]=0}}return I}},c={string:G.stringToC,array:G.arrayToC};var f,H,S,Y,y,s,n,e,r,M,U=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function N(){I.HEAP8=H=new Int8Array(f),I.HEAP16=Y=new Int16Array(f),I.HEAP32=y=new Int32Array(f),I.HEAPU8=S=new Uint8Array(f),I.HEAPU16=new Uint16Array(f),I.HEAPU32=new Uint32Array(f),I.HEAPF32=new Float32Array(f),I.HEAPF64=new Float64Array(f)}\"undefined\"!=typeof TextDecoder&&new TextDecoder(\"utf-16le\"),s=e=0,n=!1;var t=I.TOTAL_STACK||5242880,K=I.TOTAL_MEMORY||16777216;if(K<t&&I.printErr(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+K+\"! (TOTAL_STACK=\"+t+\")\"),I.buffer?f=I.buffer:(\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Memory?(I.wasmMemory=new WebAssembly.Memory({initial:K/65536,maximum:K/65536}),f=I.wasmMemory.buffer):f=new ArrayBuffer(K),I.buffer=f),N(),y[0]=1668509029,Y[1]=25459,115!==S[2]||99!==S[3])throw\"Runtime error: expected the system to be little-endian!\";function k(A){for(;0<A.length;){var g=A.shift();if(\"function\"==typeof g)g();else{var C=g.f;\"number\"==typeof C?void 0===g.a?I.dynCall_v(C):I.dynCall_vi(C,g.a):C(void 0===g.a?null:g.a)}}}var J=[],R=[],L=[],q=[],d=[],l=!1;function P(){var A=I.preRun.shift();J.unshift(A)}var x=0,v=null,m=null;I.preloadedImages={},I.preloadedAudios={};var X=\"data:application/octet-stream;base64,\";function p(A){return String.prototype.startsWith?A.startsWith(X):0===A.indexOf(X)}!function(){function A(){try{if(I.wasmBinary)return new Uint8Array(I.wasmBinary);var A=z(Q);if(A)return A;if(I.readBinary)return I.readBinary(Q);throw\"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\"}catch(A){$(A)}}function g(){return I.wasmBinary||!E&&!i||\"function\"!=typeof fetch?new Promise(function(I){I(A())}):fetch(Q,{credentials:\"same-origin\"}).then(function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return A.arrayBuffer()}).catch(function(){return A()})}function C(A){function C(A){if((D=A.exports).memory){A=D.memory;var g=I.buffer;A.byteLength<g.byteLength&&I.printErr(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\"),g=new Int8Array(g),new Int8Array(A).set(g),I.buffer=f=A,N()}I.asm=D,I.usingWasm=!0,x--,I.monitorRunDependencies&&I.monitorRunDependencies(x),0==x&&(null!==v&&(clearInterval(v),v=null),m&&(A=m,m=null,A()))}function B(A){C(A.instance)}function E(A){g().then(function(A){return WebAssembly.instantiate(A,h)}).then(A).catch(function(A){I.printErr(\"failed to asynchronously prepare wasm: \"+A),$(A)})}if(\"object\"!=typeof WebAssembly)return I.printErr(\"no native wasm support detected\"),!1;if(!(I.wasmMemory instanceof WebAssembly.Memory))return I.printErr(\"no native wasm Memory in use\"),!1;if(A.memory=I.wasmMemory,h.global={NaN:NaN,Infinity:1/0},h[\"global.Math\"]=Math,h.env=A,x++,I.monitorRunDependencies&&I.monitorRunDependencies(x),I.instantiateWasm)try{return I.instantiateWasm(h,C)}catch(A){return I.printErr(\"Module.instantiateWasm callback failed with error: \"+A),!1}return I.wasmBinary||\"function\"!=typeof WebAssembly.instantiateStreaming||p(Q)||\"function\"!=typeof fetch?E(B):WebAssembly.instantiateStreaming(fetch(Q,{credentials:\"same-origin\"}),h).then(B).catch(function(A){I.printErr(\"wasm streaming compile failed: \"+A),I.printErr(\"falling back to ArrayBuffer instantiation\"),E(B)}),{}}var B=\"\",Q=\"data:application/octet-stream;base64,\",o=\"\";\"function\"==typeof I.locateFile&&(p(B)||(B=I.locateFile(B)),p(Q)||(Q=I.locateFile(Q)),p(o)||(o=I.locateFile(o)));var h={global:null,env:null,asm2wasm:{\"f64-rem\":function(A,I){return A%I},debugger:function(){}},parent:I},D=null;I.asmPreload=I.asm;var w=I.reallocBuffer;I.reallocBuffer=function(A){if(\"asmjs\"===a)var g=w(A);else A:{var C=I.usingWasm?65536:16777216;if(0<A%C&&(A+=C-A%C),C=I.buffer.byteLength,I.usingWasm)try{g=-1!==I.wasmMemory.grow((A-C)/65536)?I.buffer=I.wasmMemory.buffer:null;break A}catch(A){g=null;break A}g=void 0}return g};var a=\"\";I.asm=function(A,g){if(!g.table){void 0===(A=I.wasmTableSize)&&(A=1024);var B=I.wasmMaxTableSize;g.table=\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Table?void 0!==B?new WebAssembly.Table({initial:A,maximum:B,element:\"anyfunc\"}):new WebAssembly.Table({initial:A,element:\"anyfunc\"}):Array(A),I.wasmTable=g.table}return g.memoryBase||(g.memoryBase=I.STATIC_BASE),g.tableBase||(g.tableBase=0),(g=C(g))||$(\"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods\"),g}}(),s=37424,R.push(),I.STATIC_BASE=1024,I.STATIC_BUMP=36400,s+=16,a(!n),M=s,r=D((e=D(s=s+4+15&-16))+t),y[M>>2]=r,n=!0;var u=!1;function W(A){for(var I=[],g=0;g<A.length;g++){var C=A[g];255<C&&(u&&a(!1,\"Character code \"+C+\" (\"+String.fromCharCode(C)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),C&=255),I.push(String.fromCharCode(C))}return I.join(\"\")}var b=\"function\"==typeof atob?atob:function(A){var I=\"\",g=0;A=A.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++)),B=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++)),Q=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++)),E=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(g++));C=C<<2|B>>4,B=(15&B)<<4|Q>>2;var i=(3&Q)<<6|E;I+=String.fromCharCode(C),64!==Q&&(I+=String.fromCharCode(B)),64!==E&&(I+=String.fromCharCode(i))}while(g<A.length);return I};function z(A){if(p(A)){if(A=A.slice(X.length),\"boolean\"==typeof o&&o){try{var I=Buffer.from(A,\"base64\")}catch(g){I=new Buffer(A,\"base64\")}var g=new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}else try{var C=b(A),B=new Uint8Array(C.length);for(I=0;I<C.length;++I)B[I]=C.charCodeAt(I);g=B}catch(A){throw Error(\"Converting base64 string to bytes failed.\")}return g}}I.wasmTableSize=4,I.wasmMaxTableSize=4,I.b={},I.c={abort:$,_emscripten_memcpy_big:function(A,I,g){return S.set(S.subarray(I,I+g),A),A},STACKTOP:e};var Z=I.asm(I.b,I.c,f);I.asm=Z,I._emscripten_convert_amount_decimal_integer_to_hex=function(){return I.asm._emscripten_convert_amount_decimal_integer_to_hex.apply(null,arguments)},I._emscripten_derive_address=function(){return I.asm._emscripten_derive_address.apply(null,arguments)},I._emscripten_derive_public_key=function(){return I.asm._emscripten_derive_public_key.apply(null,arguments)},I._emscripten_derive_secret_key=function(){return I.asm._emscripten_derive_secret_key.apply(null,arguments)},I._emscripten_hash_change_block=function(){return I.asm._emscripten_hash_change_block.apply(null,arguments)},I._emscripten_hash_open_block=function(){return I.asm._emscripten_hash_open_block.apply(null,arguments)},I._emscripten_hash_receive_block=function(){return I.asm._emscripten_hash_receive_block.apply(null,arguments)},I._emscripten_hash_send_block=function(){return I.asm._emscripten_hash_send_block.apply(null,arguments)},I._emscripten_sign_block=function(){return I.asm._emscripten_sign_block.apply(null,arguments)},I._emscripten_validate_work=function(){return I.asm._emscripten_validate_work.apply(null,arguments)},I._emscripten_verify_block=function(){return I.asm._emscripten_verify_block.apply(null,arguments)},I._emscripten_work=function(){return I.asm._emscripten_work.apply(null,arguments)};var j=I.stackAlloc=function(){return I.asm.stackAlloc.apply(null,arguments)},O=I.stackRestore=function(){return I.asm.stackRestore.apply(null,arguments)},V=I.stackSave=function(){return I.asm.stackSave.apply(null,arguments)};function T(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function _(){function A(){if(!I.calledRun&&(I.calledRun=!0,!w)){if(l||(l=!0,k(R)),k(L),I.onRuntimeInitialized&&I.onRuntimeInitialized(),I.postRun)for(\"function\"==typeof I.postRun&&(I.postRun=[I.postRun]);I.postRun.length;){var A=I.postRun.shift();d.unshift(A)}k(d)}}if(!(0<x)){if(I.preRun)for(\"function\"==typeof I.preRun&&(I.preRun=[I.preRun]);I.preRun.length;)P();k(J),0<x||I.calledRun||(I.setStatus?(I.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){I.setStatus(\"\")},1),A()},1)):A())}}function $(A){throw I.onAbort&&I.onAbort(A),void 0!==A?(I.print(A),I.printErr(A),A=JSON.stringify(A)):A=\"\",w=!0,\"abort(\"+A+\"). Build with -s ASSERTIONS=1 for more info.\"}if(I.asm=Z,I.cwrap=function(A,I,g){g=g||[];var C=F(A),B=g.every(function(A){return\"number\"===A});return\"string\"!==I&&B?C:function(){var C=g,B=arguments,Q=F(A),E=[],i=0;if(B)for(var o=0;o<B.length;o++){var h=c[C[o]];h?(0===i&&(i=V()),E[o]=h(B[o])):E[o]=B[o]}return C=Q.apply(null,E),\"string\"===I&&(C=function(A){var I;if(0===I||!A)return\"\";for(var g,C=0,B=0;C|=g=S[A+B>>0],(0!=g||I)&&(B++,!I||B!=I););if(I||(I=B),g=\"\",128>C){for(;0<I;)C=String.fromCharCode.apply(String,S.subarray(A,A+Math.min(I,1024))),g=g?g+C:C,A+=1024,I-=1024;return g}A:{for(I=S,C=A;I[C];)++C;if(16<C-A&&I.subarray&&U)A=U.decode(I.subarray(A,C));else for(C=\"\";;){if(!(g=I[A++])){A=C;break A}if(128&g)if(B=63&I[A++],192==(224&g))C+=String.fromCharCode((31&g)<<6|B);else{var Q=63&I[A++];if(224==(240&g))g=(15&g)<<12|B<<6|Q;else{var E=63&I[A++];if(240==(248&g))g=(7&g)<<18|B<<12|Q<<6|E;else{var i=63&I[A++];g=248==(252&g)?(3&g)<<24|B<<18|Q<<12|E<<6|i:(1&g)<<30|B<<24|Q<<18|E<<12|i<<6|63&I[A++]}}65536>g?C+=String.fromCharCode(g):(g-=65536,C+=String.fromCharCode(55296|g>>10,56320|1023&g))}else C+=String.fromCharCode(g)}}return A}(C)),0!==i&&O(i),C}},I.then=function(A){if(I.calledRun)A(I);else{var g=I.onRuntimeInitialized;I.onRuntimeInitialized=function(){g&&g(),A(I)}}return I},T.prototype=Error(),T.prototype.constructor=T,m=function A(){I.calledRun||_(),I.calledRun||(m=A)},I.run=_,I.exit=function(A,g){g&&I.noExitRuntime&&0===A||(!I.noExitRuntime&&(w=!0,e=void 0,k(q),I.onExit)&&I.onExit(A),o&&process.exit(A),I.quit(A,new T(A)))},I.abort=$,I.preInit)for(\"function\"==typeof I.preInit&&(I.preInit=[I.preInit]);0<I.preInit.length;)I.preInit.pop()();return I.noExitRuntime=!0,_(),A}}),IS_NODE=\"[object process]\"===Object.prototype.toString.call(\"undefined\"!=typeof process?process:0),fillRandom=null;if(IS_NODE){var ref=require(\"util\"),promisify=ref.promisify;fillRandom=promisify(require(\"crypto\").randomFill)}else fillRandom=function(A){return new Promise(function(I){self.crypto.getRandomValues(A),I()})};function getRandomBytes(A){return new Promise(function(I,g){var C=new Uint8Array(A);fillRandom(C).then(function(){I(C)}).catch(g)})}var instance=null,_work=null,_validateWork=null,_deriveSecretKey=null,_derivePublicKey=null,_deriveAddress=null,_hashReceiveBlock=null,_hashOpenBlock=null,_hashChangeBlock=null,_hashSendBlock=null,_signBlock=null,_verifyBlock=null,_convertAmountDecimalIntegerToHex=null;function init(){return new Promise(function(A,I){try{native_tmp().then(function(I){_work=(instance=I).cwrap(\"emscripten_work\",\"string\",[\"string\",\"number\",\"number\"]),_validateWork=instance.cwrap(\"emscripten_validate_work\",\"number\",[\"string\",\"string\"]),_deriveSecretKey=instance.cwrap(\"emscripten_derive_secret_key\",\"string\",[\"string\",\"number\"]),_derivePublicKey=instance.cwrap(\"emscripten_derive_public_key\",\"string\",[\"string\"]),_deriveAddress=instance.cwrap(\"emscripten_derive_address\",\"string\",[\"string\"]),_hashReceiveBlock=instance.cwrap(\"emscripten_hash_receive_block\",\"string\",[\"string\",\"string\"]),_hashOpenBlock=instance.cwrap(\"emscripten_hash_open_block\",\"string\",[\"string\",\"string\",\"string\"]),_hashChangeBlock=instance.cwrap(\"emscripten_hash_change_block\",\"string\",[\"string\",\"string\"]),_hashSendBlock=instance.cwrap(\"emscripten_hash_send_block\",\"string\",[\"string\",\"string\",\"string\"]),_signBlock=instance.cwrap(\"emscripten_sign_block\",\"string\",[\"string\",\"string\"]),_verifyBlock=instance.cwrap(\"emscripten_verify_block\",\"number\",[\"string\",\"string\",\"string\"]),_convertAmountDecimalIntegerToHex=instance.cwrap(\"emscripten_convert_amount_decimal_integer_to_hex\",\"string\",[\"string\"]),A()})}catch(A){I(A)}})}function isReady(){return null!==instance}function checkNotInitialized(){if(!isReady())throw new Error(\"NanoCurrency is not initialized\")}function checkString(A){return\"string\"==typeof A}function checkBalance(A){if(!checkString(A)||A.length>39)return!1;for(var I=0,g=A;I<g.length;I+=1){var C=g[I];if(C<\"0\"||C>\"9\")return!1}return!0}function checkSeed(A){return checkString(A)&&/[0-9a-fA-F]{64}/.test(A)}function checkHash(A){return checkSeed(A)}function checkKey(A){return checkSeed(A)}function checkAddress(A){return checkString(A)&&/xrb_[13][0-9a-km-uw-z]{59}/.test(A)}function checkWork(A){return checkString(A)&&/[0-9a-fA-F]{16}/.test(A)}function checkSignature(A){return checkString(A)&&/[0-9a-fA-F]{128}/.test(A)}function work(A,I,g){if(void 0===I&&(I=0),void 0===g&&(g=1),checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!Number.isInteger(I)||!Number.isInteger(g)||I<0||g<1||I>g-1)throw new Error(\"Worker parameters are not valid\");var C=_work(A,I,g);return\"0000000000000000\"!==C?C:null}function validateWork(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!checkWork(I))throw new Error(\"Work is not valid\");return 1===_validateWork(A,I)}function generateSeed(){return new Promise(function(A,I){getRandomBytes(32).then(function(I){var g=I.reduce(function(A,I){return A+(\"0\"+I.toString(16)).slice(-2)},\"\");A(g)}).catch(I)})}function deriveSecretKey(A,I){if(checkNotInitialized(),!checkSeed(A))throw new Error(\"Seed is not valid\");if(!Number.isInteger(I)||I<0)throw new Error(\"Index is not valid\");return _deriveSecretKey(A,I)}function derivePublicKey(A){if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");return _derivePublicKey(A)}function deriveAddress(A){if(checkNotInitialized(),!checkKey(A))throw new Error(\"Public key is not valid\");return _deriveAddress(A)}function hashReceiveBlock(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Previous is not valid\");if(!checkHash(I))throw new Error(\"Source is not valid\");return _hashReceiveBlock(A,I)}function hashOpenBlock(A,I,g){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Source is not valid\");if(!checkAddress(I))throw new Error(\"Representative is not valid\");if(!checkAddress(g))throw new Error(\"Account is not valid\");return _hashOpenBlock(A,I,g)}function hashChangeBlock(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Previous is not valid\");if(!checkAddress(I))throw new Error(\"Representative is not valid\");return _hashChangeBlock(A,I)}function hashSendBlock(A,I,g){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Previous is not valid\");if(!checkAddress(I))throw new Error(\"Destination is not valid\");if(!checkBalance(g))throw new Error(\"Balance is not valid\");return _hashSendBlock(A,I,g)}function signBlock(A,I){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!checkKey(I))throw new Error(\"Secret key is not valid\");return _signBlock(A,I)}function verifyBlock(A,I,g){if(checkNotInitialized(),!checkHash(A))throw new Error(\"Hash is not valid\");if(!checkSignature(I))throw new Error(\"Signature is not valid\");if(!checkKey(g))throw new Error(\"Public key is not valid\");return 1===_verifyBlock(A,I,g)}function createOpenBlock(A,I){var g=I.work,C=I.source,B=I.representative;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Source is not valid\");if(!checkAddress(B))throw new Error(\"Representative is not valid\");var Q=deriveAddress(derivePublicKey(A)),E=hashOpenBlock(C,B,Q);return{hash:E,block:{type:\"open\",source:C,representative:B,account:Q,work:g,signature:signBlock(E,A)}}}function createReceiveBlock(A,I){var g=I.work,C=I.previous,B=I.source;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Previous is not valid\");if(!checkHash(B))throw new Error(\"Source is not valid\");var Q=hashReceiveBlock(C,B);return{hash:Q,block:{type:\"receive\",previous:C,source:B,work:g,signature:signBlock(Q,A)}}}function createSendBlock(A,I){var g=I.work,C=I.previous,B=I.destination,Q=I.balance;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Previous is not valid\");if(!checkAddress(B))throw new Error(\"Destination is not valid\");if(!checkBalance(Q))throw new Error(\"Balance is not valid\");var E=hashSendBlock(C,B,Q),i=signBlock(E,A);return{hash:E,block:{type:\"send\",previous:C,destination:B,balance:_convertAmountDecimalIntegerToHex(Q),work:g,signature:i}}}function createChangeBlock(A,I){var g=I.work,C=I.previous,B=I.representative;if(checkNotInitialized(),!checkKey(A))throw new Error(\"Secret key is not valid\");if(void 0===g&&(g=null),!checkHash(C))throw new Error(\"Previous is not valid\");if(!checkAddress(B))throw new Error(\"Representative is not valid\");var Q=hashChangeBlock(C,B);return{hash:Q,block:{type:\"change\",previous:C,representative:B,work:g,signature:signBlock(Q,A)}}}export{init,isReady,checkBalance,checkSeed,checkHash,checkKey,checkAddress,checkWork,checkSignature,work,validateWork,generateSeed,deriveSecretKey,derivePublicKey,deriveAddress,hashReceiveBlock,hashOpenBlock,hashChangeBlock,hashSendBlock,signBlock,verifyBlock,createOpenBlock,createReceiveBlock,createSendBlock,createChangeBlock};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nanocurrency/dist/nanocurrency.esm.js\n// module id = 7\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 8\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 10\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 11\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 12\n// module chunks = 0","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar u64 = function(h, l) { this.hi = h|0 >>> 0; this.lo = l|0 >>> 0; };\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n  \nvar blake = require('blakejs');\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }\n\nfunction ld32(x, i) {\n  var u = x[i+3] & 0xff;\n  u = (u<<8)|(x[i+2] & 0xff);\n  u = (u<<8)|(x[i+1] & 0xff);\n  return (u<<8)|(x[i+0] & 0xff);\n}\n\nfunction dl64(x, i) {\n  var h = (x[i] << 24) | (x[i+1] << 16) | (x[i+2] << 8) | x[i+3];\n  var l = (x[i+4] << 24) | (x[i+5] << 16) | (x[i+6] << 8) | x[i+7];\n  return new u64(h, l);\n}\n\nfunction st32(x, j, u) {\n  var i;\n  for (i = 0; i < 4; i++) { x[j+i] = u & 255; u >>>= 8; }\n}\n\nfunction ts64(x, i, u) {\n  x[i]   = (u.hi >> 24) & 0xff;\n  x[i+1] = (u.hi >> 16) & 0xff;\n  x[i+2] = (u.hi >>  8) & 0xff;\n  x[i+3] = u.hi & 0xff;\n  x[i+4] = (u.lo >> 24)  & 0xff;\n  x[i+5] = (u.lo >> 16)  & 0xff;\n  x[i+6] = (u.lo >>  8)  & 0xff;\n  x[i+7] = u.lo & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core(out,inp,k,c,h) {\n  var w = new Uint32Array(16), x = new Uint32Array(16),\n      y = new Uint32Array(16), t = new Uint32Array(4);\n  var i, j, m;\n\n  for (i = 0; i < 4; i++) {\n    x[5*i] = ld32(c, 4*i);\n    x[1+i] = ld32(k, 4*i);\n    x[6+i] = ld32(inp, 4*i);\n    x[11+i] = ld32(k, 16+4*i);\n  }\n\n  for (i = 0; i < 16; i++) y[i] = x[i];\n\n  for (i = 0; i < 20; i++) {\n    for (j = 0; j < 4; j++) {\n      for (m = 0; m < 4; m++) t[m] = x[(5*j+4*m)%16];\n      t[1] ^= L32((t[0]+t[3])|0, 7);\n      t[2] ^= L32((t[1]+t[0])|0, 9);\n      t[3] ^= L32((t[2]+t[1])|0,13);\n      t[0] ^= L32((t[3]+t[2])|0,18);\n      for (m = 0; m < 4; m++) w[4*j+(j+m)%4] = t[m];\n    }\n    for (m = 0; m < 16; m++) x[m] = w[m];\n  }\n\n  if (h) {\n    for (i = 0; i < 16; i++) x[i] = (x[i] + y[i]) | 0;\n    for (i = 0; i < 4; i++) {\n      x[5*i] = (x[5*i] - ld32(c, 4*i)) | 0;\n      x[6+i] = (x[6+i] - ld32(inp, 4*i)) | 0;\n    }\n    for (i = 0; i < 4; i++) {\n      st32(out,4*i,x[5*i]);\n      st32(out,16+4*i,x[6+i]);\n    }\n  } else {\n    for (i = 0; i < 16; i++) st32(out, 4 * i, (x[i] + y[i]) | 0);\n  }\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core(out,inp,k,c,false);\n  return 0;\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core(out,inp,k,c,true);\n  return 0;\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  if (!b) return 0;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    if (m) mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,d,n,k) {\n  return crypto_stream_salsa20_xor(c,cpos,null,0,d,n,k);\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20(c,cpos,d,n.subarray(16),s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,n.subarray(16),s);\n}\n\nfunction add1305(h, c) {\n  var j, u = 0;\n  for (j = 0; j < 17; j++) {\n    u = (u + ((h[j] + c[j]) | 0)) | 0;\n    h[j] = u & 255;\n    u >>>= 8;\n  }\n}\n\nvar minusp = new Uint32Array([\n  5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252\n]);\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s, i, j, u;\n  var x = new Uint32Array(17), r = new Uint32Array(17),\n      h = new Uint32Array(17), c = new Uint32Array(17),\n      g = new Uint32Array(17);\n  for (j = 0; j < 17; j++) r[j]=h[j]=0;\n  for (j = 0; j < 16; j++) r[j]=k[j];\n  r[3]&=15;\n  r[4]&=252;\n  r[7]&=15;\n  r[8]&=252;\n  r[11]&=15;\n  r[12]&=252;\n  r[15]&=15;\n\n  while (n > 0) {\n    for (j = 0; j < 17; j++) c[j] = 0;\n    for (j = 0; (j < 16) && (j < n); ++j) c[j] = m[mpos+j];\n    c[j] = 1;\n    mpos += j; n -= j;\n    add1305(h,c);\n    for (i = 0; i < 17; i++) {\n      x[i] = 0;\n      for (j = 0; j < 17; j++) x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j])|0))) | 0) | 0;\n    }\n    for (i = 0; i < 17; i++) h[i] = x[i];\n    u = 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u & 3;\n    u = (5 * (u >>> 2)) | 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u;\n  }\n\n  for (j = 0; j < 17; j++) g[j] = h[j];\n  add1305(h,minusp);\n  s = (-(h[16] >>> 7) | 0);\n  for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);\n\n  for (j = 0; j < 16; j++) c[j] = k[j + 16];\n  c[16] = 0;\n  add1305(h,c);\n  for (j = 0; j < 16; j++) out[outpos+j] = h[j];\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var c;\n  var i;\n  for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n  }\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n}\n\nfunction Z(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n}\n\nfunction M(o, a, b) {\n  var i, j, t = new Float64Array(31);\n  for (i = 0; i < 31; i++) t[i] = 0;\n  for (i = 0; i < 16; i++) {\n    for (j = 0; j < 16; j++) {\n      t[i+j] += a[i] * b[j];\n    }\n  }\n  for (i = 0; i < 15; i++) {\n    t[i] += 38 * t[i+16];\n  }\n  for (i = 0; i < 16; i++) o[i] = t[i];\n  car25519(o);\n  car25519(o);\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nfunction add64() {\n  var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;\n  for (i = 0; i < arguments.length; i++) {\n    l = arguments[i].lo;\n    h = arguments[i].hi;\n    a += (l & m16); b += (l >>> 16);\n    c += (h & m16); d += (h >>> 16);\n  }\n\n  b += (a >>> 16);\n  c += (b >>> 16);\n  d += (c >>> 16);\n\n  return new u64((c & m16) | (d << 16), (a & m16) | (b << 16));\n}\n\nfunction shr64(x, c) {\n  return new u64((x.hi >>> c), (x.lo >>> c) | (x.hi << (32 - c)));\n}\n\nfunction xor64() {\n  var l = 0, h = 0, i;\n  for (i = 0; i < arguments.length; i++) {\n    l ^= arguments[i].lo;\n    h ^= arguments[i].hi;\n  }\n  return new u64(h, l);\n}\n\nfunction R(x, c) {\n  var h, l, c1 = 32 - c;\n  if (c < 32) {\n    h = (x.hi >>> c) | (x.lo << c1);\n    l = (x.lo >>> c) | (x.hi << c1);\n  } else if (c < 64) {\n    h = (x.lo >>> c) | (x.hi << c1);\n    l = (x.hi >>> c) | (x.lo << c1);\n  }\n  return new u64(h, l);\n}\n\nfunction Ch(x, y, z) {\n  var h = (x.hi & y.hi) ^ (~x.hi & z.hi),\n      l = (x.lo & y.lo) ^ (~x.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Maj(x, y, z) {\n  var h = (x.hi & y.hi) ^ (x.hi & z.hi) ^ (y.hi & z.hi),\n      l = (x.lo & y.lo) ^ (x.lo & z.lo) ^ (y.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Sigma0(x) { return xor64(R(x,28), R(x,34), R(x,39)); }\nfunction Sigma1(x) { return xor64(R(x,14), R(x,18), R(x,41)); }\nfunction sigma0(x) { return xor64(R(x, 1), R(x, 8), shr64(x,7)); }\nfunction sigma1(x) { return xor64(R(x,19), R(x,61), shr64(x,6)); }\n\nvar K = [\n  new u64(0x428a2f98, 0xd728ae22), new u64(0x71374491, 0x23ef65cd),\n  new u64(0xb5c0fbcf, 0xec4d3b2f), new u64(0xe9b5dba5, 0x8189dbbc),\n  new u64(0x3956c25b, 0xf348b538), new u64(0x59f111f1, 0xb605d019),\n  new u64(0x923f82a4, 0xaf194f9b), new u64(0xab1c5ed5, 0xda6d8118),\n  new u64(0xd807aa98, 0xa3030242), new u64(0x12835b01, 0x45706fbe),\n  new u64(0x243185be, 0x4ee4b28c), new u64(0x550c7dc3, 0xd5ffb4e2),\n  new u64(0x72be5d74, 0xf27b896f), new u64(0x80deb1fe, 0x3b1696b1),\n  new u64(0x9bdc06a7, 0x25c71235), new u64(0xc19bf174, 0xcf692694),\n  new u64(0xe49b69c1, 0x9ef14ad2), new u64(0xefbe4786, 0x384f25e3),\n  new u64(0x0fc19dc6, 0x8b8cd5b5), new u64(0x240ca1cc, 0x77ac9c65),\n  new u64(0x2de92c6f, 0x592b0275), new u64(0x4a7484aa, 0x6ea6e483),\n  new u64(0x5cb0a9dc, 0xbd41fbd4), new u64(0x76f988da, 0x831153b5),\n  new u64(0x983e5152, 0xee66dfab), new u64(0xa831c66d, 0x2db43210),\n  new u64(0xb00327c8, 0x98fb213f), new u64(0xbf597fc7, 0xbeef0ee4),\n  new u64(0xc6e00bf3, 0x3da88fc2), new u64(0xd5a79147, 0x930aa725),\n  new u64(0x06ca6351, 0xe003826f), new u64(0x14292967, 0x0a0e6e70),\n  new u64(0x27b70a85, 0x46d22ffc), new u64(0x2e1b2138, 0x5c26c926),\n  new u64(0x4d2c6dfc, 0x5ac42aed), new u64(0x53380d13, 0x9d95b3df),\n  new u64(0x650a7354, 0x8baf63de), new u64(0x766a0abb, 0x3c77b2a8),\n  new u64(0x81c2c92e, 0x47edaee6), new u64(0x92722c85, 0x1482353b),\n  new u64(0xa2bfe8a1, 0x4cf10364), new u64(0xa81a664b, 0xbc423001),\n  new u64(0xc24b8b70, 0xd0f89791), new u64(0xc76c51a3, 0x0654be30),\n  new u64(0xd192e819, 0xd6ef5218), new u64(0xd6990624, 0x5565a910),\n  new u64(0xf40e3585, 0x5771202a), new u64(0x106aa070, 0x32bbd1b8),\n  new u64(0x19a4c116, 0xb8d2d0c8), new u64(0x1e376c08, 0x5141ab53),\n  new u64(0x2748774c, 0xdf8eeb99), new u64(0x34b0bcb5, 0xe19b48a8),\n  new u64(0x391c0cb3, 0xc5c95a63), new u64(0x4ed8aa4a, 0xe3418acb),\n  new u64(0x5b9cca4f, 0x7763e373), new u64(0x682e6ff3, 0xd6b2b8a3),\n  new u64(0x748f82ee, 0x5defb2fc), new u64(0x78a5636f, 0x43172f60),\n  new u64(0x84c87814, 0xa1f0ab72), new u64(0x8cc70208, 0x1a6439ec),\n  new u64(0x90befffa, 0x23631e28), new u64(0xa4506ceb, 0xde82bde9),\n  new u64(0xbef9a3f7, 0xb2c67915), new u64(0xc67178f2, 0xe372532b),\n  new u64(0xca273ece, 0xea26619c), new u64(0xd186b8c7, 0x21c0c207),\n  new u64(0xeada7dd6, 0xcde0eb1e), new u64(0xf57d4f7f, 0xee6ed178),\n  new u64(0x06f067aa, 0x72176fba), new u64(0x0a637dc5, 0xa2c898a6),\n  new u64(0x113f9804, 0xbef90dae), new u64(0x1b710b35, 0x131c471b),\n  new u64(0x28db77f5, 0x23047d84), new u64(0x32caab7b, 0x40c72493),\n  new u64(0x3c9ebe0a, 0x15c9bebc), new u64(0x431d67c4, 0x9c100d4c),\n  new u64(0x4cc5d4be, 0xcb3e42b6), new u64(0x597f299c, 0xfc657e2a),\n  new u64(0x5fcb6fab, 0x3ad6faec), new u64(0x6c44198c, 0x4a475817)\n];\n\nfunction crypto_hashblocks(x, m, n) {\n  var z = [], b = [], a = [], w = [], t, i, j;\n\n  for (i = 0; i < 8; i++) z[i] = a[i] = dl64(x, 8*i);\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) w[i] = dl64(m, 8*i+pos);\n    for (i = 0; i < 80; i++) {\n      for (j = 0; j < 8; j++) b[j] = a[j];\n      t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i%16]);\n      b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\n      b[3] = add64(b[3], t);\n      for (j = 0; j < 8; j++) a[(j+1)%8] = b[j];\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          w[j] = add64(w[j], w[(j+9)%16], sigma0(w[(j+1)%16]), sigma1(w[(j+14)%16]));\n        }\n      }\n    }\n\n    for (i = 0; i < 8; i++) {\n      a[i] = add64(a[i], z[i]);\n      z[i] = a[i];\n    }\n\n    pos += 128;\n    n -= 128;\n  }\n\n  for (i = 0; i < 8; i++) ts64(x, 8*i, z[i]);\n  return n;\n}\n\nvar iv = new Uint8Array([\n  0x6a,0x09,0xe6,0x67,0xf3,0xbc,0xc9,0x08,\n  0xbb,0x67,0xae,0x85,0x84,0xca,0xa7,0x3b,\n  0x3c,0x6e,0xf3,0x72,0xfe,0x94,0xf8,0x2b,\n  0xa5,0x4f,0xf5,0x3a,0x5f,0x1d,0x36,0xf1,\n  0x51,0x0e,0x52,0x7f,0xad,0xe6,0x82,0xd1,\n  0x9b,0x05,0x68,0x8c,0x2b,0x3e,0x6c,0x1f,\n  0x1f,0x83,0xd9,0xab,0xfb,0x41,0xbd,0x6b,\n  0x5b,0xe0,0xcd,0x19,0x13,0x7e,0x21,0x79\n]);\n\nfunction crypto_hash(out, m, n) {\n  var h = new Uint8Array(64), x = new Uint8Array(256);\n  var i, b = n;\n\n  for (i = 0; i < 64; i++) h[i] = iv[i];\n\n  crypto_hashblocks(h, m, n);\n  n %= 128;\n\n  for (i = 0; i < 256; i++) x[i] = 0;\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8, new u64((b / 0x20000000) | 0, b << 3));\n  crypto_hashblocks(h, x, n);\n\n  for (i = 0; i < 64; i++) out[i] = h[i];\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  \n  var context = blake.blake2bInit(64);\n  blake.blake2bUpdate(context, sk);\n  d = blake.blake2bFinal(context);\n  \n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  \n  scalarbase(p, d);\n  pack(pk, p);\n\n  return 0;\n}\n\nfunction derivePublicFromSecret(sk)\n{\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n  var pk = new Uint8Array(32);\n  var context = blake.blake2bInit(64);\n  blake.blake2bUpdate(context, sk);\n  d = blake.blake2bFinal(context);\n  \n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  \n  scalarbase(p, d);\n  pack(pk, p);\n  return pk;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  \n  var pk = derivePublicFromSecret(sk);\n\n  var context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, sk);\n  d = blake.blake2bFinal(context);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, sm.subarray(32));\n  r = blake.blake2bFinal(context);\n  \n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = pk[i-32];\n  \n  context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, sm);\n  h = blake.blake2bFinal(context);\n  \n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  //crypto_hash(h, m, n);\n  \n  var context = blake.blake2bInit(64, null);\n  blake.blake2bUpdate(context, m);\n  h = blake.blake2bFinal(context);\n  \n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 32,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  pk = derivePublicFromSecret(secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tweetnacl/nacl.js\n// module id = 17\n// module chunks = 0","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/blakejs/index.js\n// module id = 18\n// module chunks = 0","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/blakejs/blake2b.js\n// module id = 19\n// module chunks = 0","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/blakejs/blake2s.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}